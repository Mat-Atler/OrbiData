Main = {

	Languages = {
		English "Main/Main_En.txt"
		French "Main/Main_Fr.txt"
		Japanese "Main/Main_Jp.txt"
	}
	
	Resources = {
		Wealth = {
			IMAGE "Main/Images/Wealth.png"
			SOUND_FULL "Main/SFX/Too much wealth.wav"
			VALUE [ 0 0 100 ]
		}
		PoliticalPower = {
			IMAGE "Main/Images/PoliticalPower.png"
			SOUND_FULL "Main/SFX/ToomuchPP.wav"
			VALUE [ 0 20 100 ]
			}
		}

	Globals = {
		FUNCTION F_WarDeclaration = {
			DROPDOWN_SET_STATE Diplomacy.War
			DROPDOWN_BUTTON_DISABLE Diplomacy.DeclareWar
			PLAY_SOUND "Main/SFX/WarDeclaration.wav"
		}
		FUNCTION F_Peace = {
			PROCESS ColonialStateSize += WarStatus.peaceProposal_ColonySize
			PROCESS StateSize += WarStatus.peaceProposal_StateSize
			PROCESS $Wealth += WarStatus.peaceProposal_Wealth
			IF ~HostileCoalition
				PROCESS HostileCoalition -= WarStatus * 5
			ENDIF
			IF ~Coalition
				PROCESS Coalition -= WarStatus * 5
			ENDIF
			IF WarStatus < 45
				PROCESS Stability -= 5
			ENDIF
			IF WarStatus > 55
				PROCESS Stability += 5
			ENDIF
			IF ( ~RevolutionaryRepublic | ~Democracy ) & WarStatus < 45 & WarStatus.revolutionnaryWar == 2 & StateSize > 150
				REMOVE Government
				SPAWN Empire
				PROCESS Empire = 50
				OVERRIDE_PARAM Empire.value = GetParam(Empire.value)
				PROCESS Stability = 30
			ENDIF
			IF ( ~RevolutionaryRepublic | ~Democracy ) & WarStatus < 45 & WarStatus.revolutionnaryWar == 2 & StateSize <= 150
				REMOVE Government
				SPAWN Monarchy
				PROCESS Monarchy = 50
				OVERRIDE_PARAM Monarchy.value = GetParam(Monarchy.value)
				PROCESS Stability = 30
			ENDIF
			IF ( ~RevolutionaryRepublic == 0 ~Democracy == 0 & WarStatus.revolutionnaryWar == 1 ) & WarStatus < 45 
						REMOVE Government
						SPAWN Nationalism
						SPAWN RevolutionaryRepublic
						PROCESS RevolutionaryRepublic = 50
						OVERRIDE_PARAM RevolutionaryRepublic.value = GetParam(RevolutionaryRepublic.value)
						PROCESS Stability = 30
			ENDIF
			IF WarStatus > 55 & ~RevolutionaryRepublic == 0 ~Democracy == 0 & WarStatus.revolutionnaryWar == 1
				PROCESS RevolutionIdeals -= 30
			ENDIF
			IF ( ~RevolutionaryRepublic | ~Democracy ) & WarStatus.revolutionnaryWar == 2
				PROCESS Reactionnarism -= 30
			ENDIF
			IF ~HereticsCountry & WarStatus.peaceProposal_StateSize > 0
				PROCESS Heretics = Heretics + Min ( WarStatus.peaceProposal_StateSize , HereticsCountry ) * 1.5
                PROCESS HereticsCountry -= WarStatus.peaceProposal_StateSize
			ENDIF	
            IF ~HeathensCountry & WarStatus.peaceProposal_StateSize > 0
				PROCESS Heathens = Heathens + Min ( WarStatus.peaceProposal_StateSize , HeathensCountry ) * 1.25
                PROCESS HeathensCountry -= WarStatus.peaceProposal_StateSize
            ENDIF
			PROCESS WarStatus.revolutionnaryWar = 0
			REMOVE_WITHOUT_ALERT WarSystemTag
			DROPDOWN_SET_STATE Diplomacy.Peace
			DROPDOWN_BUTTON_ENABLE Diplomacy.DeclareWar
			DROPDOWN_BUTTON_DISABLE Diplomacy.MakePeace
			DROPDOWN_BUTTON_DISABLE Diplomacy.WhitePeace
			DROPDOWN_BUTTON_DISABLE Diplomacy.SeparatePeace
			PLAY_SOUND "Main/SFX/Peace.wav"
		}
		FUNCTION F_WhitePeace = {
			PLAY_SOUND "Main/SFX/Peace.wav"
			DROPDOWN_BUTTON_ENABLE Diplomacy.DeclareWar
			DROPDOWN_BUTTON_DISABLE Diplomacy.MakePeace
			DROPDOWN_BUTTON_DISABLE Diplomacy.WhitePeace
			DROPDOWN_BUTTON_DISABLE Diplomacy.SeparatePeace
		}
		FUNCTION F_SeparatePeace = {
			PLAY_SOUND "Main/SFX/Peace.wav"
			PROCESS FoeLandForces = FoeLandForces - FoeLandForces / 3
			PROCESS FoeNavalForces = FoeNavalForces - FoeNavalForces / 3
			PROCESS WarStatus = WarStatus - 10
			DROPDOWN_BUTTON_ENABLE Diplomacy.DeclareWar
			DROPDOWN_BUTTON_DISABLE Diplomacy.MakePeace
			DROPDOWN_BUTTON_DISABLE Diplomacy.WhitePeace
			DROPDOWN_BUTTON_DISABLE Diplomacy.SeparatePeace
		}
	}
	Dropdowns = {
	  Diplomacy = {
		States = {
		  Peace = {
		IMAGE "Main/Images/Peace.png"
		  }
		  War = {
		IMAGE "Main/Images/War.png"
		  }
   }
	   Buttons = {
		  DeclareWar = {
		// Click
		  REMOTE Population = {
		  CALL_FUNCTION F_WarDeclaration
							}
			}
		  MakePeace = {
		  // Click
		  REMOTE Population = {
		CALL_FUNCTION F_Peace
			}
			}
		  WhitePeace = {
		  // Click
		  REMOTE Population = {
		CALL_FUNCTION F_WhitePeace
			}
			}
		  SeparatePeace = {
		  // Click
		  REMOTE Population = {
		CALL_FUNCTION F_SeparatePeace
			}
			}
		}
		}
	}
	
	/// NEW ///
	Globes = {
		StateMap = {
			AREA_MASK [ 1 0.5 ] "Main/DataMaps/LandMasses.png"
			SIZE 512
			// Called then player rotates the globe
			REMOTE StateSize = {
				
			}
		}
		TravelMap = {
			AREA_MASK [ 1 0.5 ] "Main/DataMaps/LandMasses.png"
			SIZE 1024
			
			// Call TRIGGER_CUSTOM 4 of Travel node then the globe is clicked
			CLICK_TRIGGER [ 4 Travel ]
			
			// Called then player rotates the globe
			REMOTE Travel = {
				
			}
		}
		ColonyMap = {
			AREA_MASK [ 1 0 ] "Main/DataMaps/ColoniesTarget2.png"
			SIZE 1024
			
			// Call TRIGGER_CUSTOM 4 of Colony node then the globe is clicked
			CLICK_TRIGGER [ 4 Colony ]
			
			// Called then player rotates the globe
			REMOTE Colony = {
				
			}
		}
		
		ColonyStateMap = {
			AREA_MASK [ 1 0.5 ] "Main/DataMaps/LandMasses.png"
			SIZE 512
			// Called then player rotates the globe
			REMOTE StateSize = {
				
			}
		}
	}
		
	Windows = {
		WinMilitary = {
			CUSTOM_NODE_WINDOW Main.MilitaryManpower
			POSITION [ 0 0 ]
			
			REMOTE MilitaryManpower = {
                IF Cavalry_value + Infantry_value + Missile_value + Mercenaries_value > 0
                    WINDOW_INTERCEPT WinMilitary [ 1 ] [ alpha = 1 ]
                    WINDOW_INTERCEPT WinMilitary [ 2 ] [ alpha = 1 fill = 0 + ( Cavalry_value + Missile_value + Mercenaries_value ) / ( Cavalry_value + Infantry_value + Missile_value + Mercenaries_value ) ]
                    WINDOW_INTERCEPT WinMilitary [ 3 ] [ alpha = 1 fill = 0 + ( Missile_value +  Mercenaries_value ) / ( Cavalry_value + Infantry_value + Missile_value + Mercenaries_value ) ]
                    WINDOW_INTERCEPT WinMilitary [ 4 ] [ alpha = 1 fill = Mercenaries_value / ( Cavalry_value + Infantry_value + Missile_value + Mercenaries_value ) ]
                ELSE
                    WINDOW_INTERCEPT WinMilitary [ 1 ] [ alpha = 0 ]
                    WINDOW_INTERCEPT WinMilitary [ 2 ] [ alpha = 0 ]
                    WINDOW_INTERCEPT WinMilitary [ 3 ] [ alpha = 0 ]
                    WINDOW_INTERCEPT WinMilitary [ 4 ] [ alpha = 0 ]
                ENDIF
            }
			
			CONTENT_HORIZONTAL = {
				CONTENT_VERTICAL = {
					CONTENT_TEXT [ height = 80 ]
					CONTENT_STACK = {
						CONTENT_IMAGE "Main/Images/Circle.png" [ y = 56 x = -80 width = 15 height = 15 color = 255 0 0 ]
						CONTENT_IMAGE .. [ y = 35 x = -80 width = 15 height = 15 color = 0 255 0 ]
						CONTENT_IMAGE .. [ y = 14 x = -80 width = 15 height = 15 color = 0 0 255 ]
						CONTENT_IMAGE .. [ y = -7 x = -80 width = 15 height = 15 color = 255 255 0 ]
						CONTENT_TEXT [ x = 25 ]
					}
				}
				CONTENT_STACK [ width = 140 ] = {
					CONTENT_IMAGE .. [ width = 224 height = 224 color = 0 0 0 ]
					CONTENT_TEXT [ width = 100 height = 30 color = 255 255 255 anchor = center ]
					CONTENT_IMAGE .. [ width = 220 height = 220 alpha = 0 color = 255 0 0 id = 1 ]
					CONTENT_IMAGE .. [ width = 220 height = 220 alpha = 0 color = 0 255 0 slice = clockwise id = 2 ]
					CONTENT_IMAGE .. [ width = 220 height = 220 alpha = 0 color = 0 0 255 slice = clockwise id = 3 ]
					CONTENT_IMAGE .. [ width = 220 height = 220 alpha = 0 color = 255 255 0 slice = clockwise id = 4 ]
				}
			}
		}	
		WinStateSize = {
			CUSTOM_NODE_WINDOW Main.StateSize
			POSITION [ 0 0 ]
			
			/// NEW ///
			REMOTE StateSize = {
				GLOBE_SET_AREA StateMap [ 0 ] [ GetLongitude() : GetLatitude() : value / 6000 : ]
				// Refresh globe
				GLOBE_SET_POINTER StateMap [ : ]
			}
			
			/// NEW ///
			CONTENT_HORIZONTAL = {
				CONTENT_TEXT
				CONTENT_STACK [ height = 590 ] = {
					CONTENT_GLOBE StateMap [ width = 240 height = 240 id = 1 ]
				}
			}
		}
		WinTravel = {
			CUSTOM_NODE_WINDOW Main.Travel
			POSITION [ 0 0 ]
			
			// Open window
			REMOTE Travel = {
				
			}
			
			CONTENT_VERTICAL = {
				CONTENT_TEXT [ height = 220 ]
				// Call TRIGGER_CUSTOM 3 from node Travel
				CONTENT_BUTTON Travel [ 3 ] [ height = 30 ]
			}
		}
		WinMove = {
			ABSOLUTE_PRIORITY
			SIZE [ 620 700 ]
			POSITION [ 0 0 ]
			
			// Open window
			REMOTE Travel = {
				// Call TRIGGER_CUSTOM 2
				ALARM [ once ] [ 2 Travel ] -1
				GLOBE_SET_AREA TravelMap [ 0 ] [ GetLongitude() : GetLatitude() : value / 500 : ]
				GLOBE_SET_ICON TravelMap [ 0 ] [ GetLongitude() : GetLatitude() : 0.02 : "Main/Images/OrganizedNomadism.png" : black ]
				// Refresh globe
				GLOBE_SET_POINTER TravelMap [ : ]
			}
			
			CONTENT_VERTICAL = {
				CONTENT_STACK [ height = 590 ] = {
					CONTENT_GLOBE TravelMap [ width = 560 height = 560 id = 1 ]
				}
				// Call TRIGGER_CUSTOM 1 from node Travel
				CONTENT_BUTTON Travel [ 1 ] [ height = 40 id = 2 ]
			}
		}		
		WinColonialStateSize = {
			CUSTOM_NODE_WINDOW Main.ColonialStateSize
			POSITION [ 0 0 ]
			
			/// NEW ///
			REMOTE ColonialStateSize = {
				GLOBE_SET_AREA ColonyStateMap [ 0 ] [ Colony.ColonyLongitude : Colony.ColonyLatitude : value / 3000 : ]
				// Refresh globe
				GLOBE_SET_POINTER ColonyStateMap [ : ]
			}
			
			/// NEW ///
			CONTENT_HORIZONTAL = {
				CONTENT_TEXT
				CONTENT_STACK [ height = 590 ] = {
					CONTENT_GLOBE ColonyStateMap [ width = 240 height = 240 id = 1 ]
				}
			}
		}
		WinColony = {
			CUSTOM_NODE_WINDOW Main.Colony
			POSITION [ 0 0 ]
			
			// Open window
			REMOTE Colony = {
					IF ( colonySettled == 1 )
						WINDOW_INTERCEPT WinColony [ 1 ] [ red = 0.2 green = 0.2 blue = 0.2 ]
					ENDIF
			}
			
			CONTENT_VERTICAL = {
				CONTENT_TEXT [ height = 220 ]
				// Call TRIGGER_CUSTOM 3 from node Colony
				CONTENT_BUTTON Colony [ 3 ] [ height = 30 id = 1 ]
			}
		}
		WinMoveColony = {
			ABSOLUTE_PRIORITY
			STOP_TIME
			SIZE [ 620 700 ]
			POSITION [ 0 0 ]
			
			// Open window
			REMOTE Colony = {
				// Call TRIGGER_CUSTOM 2
				ALARM [ once ] [ 2 Colony ] -1
				// GLOBE_SET_AREA ColonyMap [ 0 ] [ GetLongitude() : GetLatitude() : value / 500 : ]
				// GLOBE_SET_ICON ColonyMap [ 0 ] [ GetLongitude() : GetLatitude() : 0.02 : "Main/Images/OrganizedNomadism.png" : black ]
				// Refresh globe
				GLOBE_SET_POINTER ColonyMap [ : ]
			}
			
			CONTENT_VERTICAL = {
				CONTENT_STACK [ height = 590 ] = {
					CONTENT_GLOBE ColonyMap [ width = 560 height = 560 id = 1 ]
				}
				// Call TRIGGER_CUSTOM 1 from node Colony
				CONTENT_BUTTON Colony [ 1 ] [ height = 40 id = 2 ]
			}
		}

	}
	
	Eras = {
		StoneAge = { AGE -10000 }
		BronzeAge = { AGE -5000 }
		IronAge = { AGE -2000 }
		LateAntiquity = { AGE 300 }
		FeudalAge = { AGE 1000 }
		DiscoveryAge = { AGE 1500 }
		ImperialismAge = { AGE 1650 }
		IndustrialAge = { AGE 1820 }
		AtomicAge = { AGE 1940 }
	}
	
	Alerts = {
		LowFood = {
			PRIORITY [ 3 ]
			MUTE_TIME 100
		}
		Stability = {
			PRIORITY [ 1 ]
			MUTE_TIME 100
		}
		Invasions = {
			PRIORITY [ 1 ]
			MUTE_TIME 100
		}
		Fire = {
			PRIORITY [ 2 ]
			MUTE_TIME 100
		}
		MilitaryCoup = {
			PRIORITY [ 1 ]
			MUTE_TIME 100
		}
		MassiveNomadInvasion = {
			PRIORITY [ 1 ]
			MUTE_TIME 100
		}
		Invaded = {
			PRIORITY [ 1 ]
			MUTE_TIME 100
		}
		CannotColony = {
			PRIORITY [ 3 ]
			MUTE_TIME 1
			PREVIEW
		}
		CannotTravel = {
			PRIORITY [ 3 ]
			MUTE_TIME 1
			PREVIEW
		}
		ColonyIndependance = {
			PRIORITY [ 1 ]
			MUTE_TIME 100
		}
		EnforcedPeaceAlert = {
			PRIORITY [ 1 ]
			MUTE_TIME 100
		}
	}
	
	Nodes = {
		States = {
		::APPEND "Main/Nomads.txt" Nomads.Nodes.States
		::APPEND "Main/Religious.txt" Religious.Nodes.States
			Population = {
				VALUE value [ 0 5 10000 ]
				DISPLAY_VALUE
				
				TICK = {
					PROCESS $PoliticalPower += PerSeconds(1.1)
					PROCESS Food -= PerSeconds(value * value / 2000 * ( 0.99 ? 1.01 ))
					IF value == 0
						GAMEOVER
					ENDIF
				}
				LINK Food = {
					FLUX 0.5 + value / 500
					COLOR red
				}
				TRIGGER_SPAWN Population = {
}
			}	
			Food = {
				VALUE value [ 0 5 100 ]
				DISPLAY_VALUE
				RELATED_INFO = {
					RELATED_LINK Food
				}
				
                TRIGGER_TRAVEL = {
                    PROCESS value = GetPresetValue(value)
                }
				TICK = {
					IF Food < 10
						// ALERT LowFood
					ENDIF
				}
				LINK Natalism = {
				WEIGHT [ to ]
			}
			}			
			Temperature = {
				VALUE value [ 0 50 100 ]
				DISPLAY_VALUE

				RELATED_INFO = {
					RELATED_LINK Flora
				}
				
                TRIGGER_TRAVEL = {
                    PROCESS value = GetPresetValue(value)
					IF HasValueFromCustomPreset(Main.Temperature.value)
						PROCESS Main.Temperature.value = GetPresetValue(Main.Temperature.value)
					ELSE
						PROCESS Main.Temperature.value = DataMapGetR("Main\DataMaps\Temperature.png",GetLongitude(),GetLatitude()) * 100
					ENDIF
				BREAK
                }
				LINK Flora = {
					WEIGHT [ to ]
				}
				
			}		
			SoilFertility = {
				VALUE value [ 0 50 100 ]
				DISPLAY_VALUE				
				RELATED_INFO = {
					RELATED_LINK Agriculture
				}
				SLEEP = {
					IF ~Agriculture
						SPAWN
					ENDIF
				}
				
                TRIGGER_TRAVEL = {
                    PROCESS value = GetPresetValue(value)
                }
				LINK Agriculture = {
					WEIGHT [ to ]
				}
			}
			Natalism = {
				VALUE value [ 0 50 100 ]			
				RELATED_INFO = {
					RELATED_UNLOCK Fishing
					RELATED_LINK Population Food
				}
				DISPLAY_VALUE
				TICK = {
					IF ( value > 53 )
                        PROCESS Population += PerSeconds(value / 650 * ( 0.9 ? 1.1 ) )
                    ENDIF
					
					IF ( value < 47 )
                        PROCESS Population += ( value < 47 ) * PerSeconds( ( ( 100 - value ) / 650 ) * -1 * ( 0.9 ? 1.1 ) )
                    ENDIF
					
					IF ( value == 50 )
                        PROCESS Population += PerSeconds( -0.05 ? 0.05 )
                    ENDIF
					
					IF (Food > ( Population * 0.9)) *  (Food < ( Population * 1))
                        PROCESS Natalism = 50
                    ENDIF
					
					IF (Food >= ( Population * 1)) * (Food < ( Population * 2.5))
                        PROCESS Natalism = 55
                    ENDIF
					
					IF (Food > ( Population * 0.5)) * (Food <= ( Population * 0.9))
                        PROCESS Natalism = 45
                    ENDIF
					
					IF Food <= ( Population * 0.5) 
                        PROCESS Natalism = 25
                    ENDIF
					
					IF Food <= ( Population * 0.25) 
                        PROCESS Natalism = 1
                    ENDIF
					
					IF (Food >= ( Population * 2.5) )
                        PROCESS Natalism = 100
                    ENDIF
					
					
				}
				LINK Population = {
					IF value > 53
						FLUX 1 + value/100
						COLOR green
					ENDIF
					IF value < 47
						FLUX 1 + ( 100 - value ) /100
						COLOR red
					ENDIF
				}
			}
			Coastline = {
				VALUE value [ 0 20 100 ]
				DISPLAY_VALUE
				RELATED_INFO = {
					RELATED_UNLOCK Fishing
					RELATED_LINK Harbours
				}
				
				
                TRIGGER_TRAVEL = {
                    PROCESS value = GetPresetValue(value)
					IF HasValueFromCustomPreset(Main.Coastline.value)
				PROCESS Main.Coastline.value = GetPresetValue(Main.Coastline.value)
			ELSE
				PROCESS Main.Coastline.value = DataMapGetR("Main\DataMaps\Coastline.png",GetLongitude(),GetLatitude()) * 120
			ENDIF
                }
                
				
				TICK = {
					SET Harbours.value [ : : Coastline.value * 2 ]
				}
				
				LINK Harbours = {
				WEIGHT [ max ] value * 2
				}
				
			}
			Island = {
				VALUE value [ 0 100 100 ]
				DISPLAY_VALUE
				
                TRIGGER_TRAVEL = {
                    PROCESS value = GetPresetValue(value)
                }
				
				RELATED_INFO = {
				}
				TICK = {
				}
				
			}		
			NewWorld = {
				VALUE value [ 0 100 100 ]
				VALUE invaderDiscovered [ 0 0 1 ]
				VALUE invaderPlagueTrigger [ 0 0 10000 ]
				VALUE westernized [ 0 0 1 ]
				DISPLAY_VALUE
				
                TRIGGER_TRAVEL = {
                    PROCESS value = GetPresetValue(value)
                }
				
				RELATED_INFO = {
				}
				TICK = {
				IF invaderPlagueTrigger > 0
					PROCESS invaderPlagueTrigger -= PerSeconds(1 * 0.95 ? 1.05)
				ENDIF
				}
				
			}
			Flora = {
				VALUE value [ 0 65 100 ]
				DISPLAY_VALUE

				RELATED_INFO = {
					RELATED_UNLOCK Foraging
					RELATED_LINK Fauna Humidity
				}
				
				
				
                TRIGGER_TRAVEL = {
                    PROCESS value = GetPresetValue(value)
					IF HasValueFromCustomPreset(Main.Flora.value)
				PROCESS Main.Flora.value = GetPresetValue(Main.Flora.value)
			ELSE
				PROCESS Main.Flora.value = DataMapGetR("Main\DataMaps\Flora.png",GetLongitude(),GetLatitude()) * 120
			ENDIF
                }
				
				TICK = {
					IF (Fauna < Flora)
						PROCESS Fauna += PerSeconds(value / 20 * 0.99 ? 1.01)
					ENDIF
					IF (Fauna < Flora * 2)
						PROCESS Fauna += PerSeconds(value / 50 * 0.99 ? 1.01)
					ENDIF
					PROCESS value = Min(value, Humidity * 1.2)
				}
				LINK Fauna = {
					IF Fauna < ( Flora * 1.2 )
						FLUX value / 100
						COLOR green
					ENDIF
				}
			}
			Fauna = {
				VALUE value [ 0 40 100 ]
				DISPLAY_VALUE
				RELATED_INFO = {
					RELATED_UNLOCK Hunting
					RELATED_LINK Flora Population
				}
				
				
                TRIGGER_TRAVEL = {
                    PROCESS value = GetPresetValue(value)
                }
				
				TICK = {
				IF HasValueFromCustomPreset(Main.Fauna.value)
				PROCESS Main.Fauna.value = GetPresetValue(Main.Fauna.value)
			ELSE
				PROCESS Main.Fauna.value = DataMapGetR("Main\DataMaps\Flora.png",GetLongitude(),GetLatitude()) * 95
			ENDIF
					PROCESS value = Min(value, Flora * 2)
					PROCESS Flora -= PerSeconds(value / 35 * 0.99 ? 1.01 )
				}
				LINK Flora = {
					IF value > 0
						FLUX value / 100
						COLOR red
					ENDIF
				}
			}
			Humidity = {
				VALUE value [ 0 45 100 ]
				DISPLAY_VALUE
				RELATED_INFO = {
					RELATED_LINK Flora 
				}
				
				
                TRIGGER_TRAVEL = {
                    PROCESS value = GetPresetValue(value)
                }
				
				TICK = {
					IF Flora * 1.2 < Humidity
						PROCESS Flora += PerSeconds(value / 25 * 0.99 ? 1.01)
					ENDIF
				}
				LINK Flora = {
					FLUX value / 100
					COLOR green
				}
			}
			Travel = {
				VALUE value [ 0 10 100 ]
				VALUE distance [ 0 0 3 ]
				VALUE canMoveHere [ 0 0 1 ]
				DISPLAY_VALUE
				
				SLEEP = {
					IF ~OrganizedNomadism
						SPAWN
					ENDIF
				}				
				TICK = {
					PROCESS value += PerSeconds(2)
				}
				
				TRIGGER_SPAWN Travel = {
					GLOBE_SET_AREA TravelMap [ 0 ] [ GetLongitude() : GetLatitude() : value / 500 : green ]
					GLOBE_SET_ICON TravelMap [ 0 ] [ GetLongitude() : GetLatitude() : 0.03 : "Main/Images/OrganizedNomadism.png" : black ]
				}
				
				// Button
				TRIGGER_CUSTOM 1 = {
					// Call TRIGGER_CUSTOM 2
					ALARM [ once ] [ 2 Travel ] -1
					IF canMoveHere
						PROCESS value = 0
						TRAVEL [ GlobeGetClickLongitude(TravelMap) : GlobeGetClickLatitude(TravelMap) ]
						// Call TRIGGER_CUSTOM 2
						ALARM [ once ] [ 2 Travel ] -1
						GLOBE_SET_AREA TravelMap [ 0 ] [ GetLongitude() : GetLatitude() : value / 500 : ]
						GLOBE_SET_ICON TravelMap [ 0 ] [ GetLongitude() : GetLatitude() : : : ]
						GLOBE_SET_ICON TravelMap [ 1 ] [ : : 0 : : ]
						// Refresh globe
						GLOBE_SET_POINTER TravelMap [ : ]
						PROCESS canMoveHere = 0
					ELSE
						ALERT CannotTravel
					ENDIF
				}
				
				// Check if can travel here
				TRIGGER_CUSTOM 2 = {
					// Get distance between pointer and player
					PROCESS distance = PathGetLength(GetLongitude(), GetLatitude(), GlobeGetClickLongitude(TravelMap), GlobeGetClickLatitude(TravelMap))
					IF ( ( distance / 3 ) > ( value * 0.00209 ) ) + ( DataMapGetR("Main/DataMaps/LandMasses.png", GlobeGetClickLongitude(TravelMap), GlobeGetClickLatitude(TravelMap)) < 0.5 )
						WINDOW_INTERCEPT WinMove [ 2 ] [ red = 1 green = 0.2 blue = 0.2 ]
						PROCESS canMoveHere = 0
					ELSE
						WINDOW_INTERCEPT WinMove [ 2 ] [ red = 0.5 green = 1 blue = 0.5 ]
						PROCESS canMoveHere = 1
					ENDIF
				}
				
				// Open move window
				TRIGGER_CUSTOM 3 = {
					WINDOW_OPEN WinMove
				}
				
				TRIGGER_CUSTOM 4 = {
					GLOBE_SET_ICON TravelMap [ 1 ] [ GlobeGetClickLongitude(TravelMap) : GlobeGetClickLatitude(TravelMap) : 0.01 : "Main/Images/Circle.png" : red ]
					// Refresh globe
					GLOBE_SET_POINTER TravelMap [ : ]
					// Call TRIGGER_CUSTOM 2
					ALARM [ once ] [ 2 Travel ] -1
				}
			}			
			Entreprises = {
				VALUE value [ 0 0 500 ]
				DISPLAY_VALUE
				DISPLAY_DECAY
				RELATED_INFO = {
					RELATED_LINK TradeGoods OverlandTrade NavalTrade
				}
				SLEEP = {
					IF TradeGoods > 200
						SPAWN
					ENDIF
				}
				TICK = {
					IF ~Guilds
						PROCESS Entreprises = Entreprises - PerSeconds ( Entreprises * Entreprises / 3000 )
					ELSE
						PROCESS Entreprises = Entreprises - PerSeconds ( Entreprises * Entreprises / ( 3000 + Guilds * 10 )  )
					ENDIF
					
					IF ~Money == 0
						PROCESS OverlandTrade =  OverlandTrade + PerSeconds(value * 0.005 * 0.9 ? 1.1)
						PROCESS NavalTrade =  NavalTrade + PerSeconds(value * 0.005 * 0.9 ? 1.1)
					ELSE
						PROCESS OverlandTrade =  OverlandTrade + PerSeconds(value * 0.005 * ( Max( Money , 1) / 40) * 0.9 ? 1.1 )
						PROCESS NavalTrade =  NavalTrade + PerSeconds(value * 0.005 * ( Max( Money , 1) / 40) * 0.9 ? 1.1 )
					ENDIF
					
				}
				LINK NavalTrade = {
					IF (value > 0)
						FLUX value * 0.013 * 2
						COLOR green
					ENDIF
				}
				LINK OverlandTrade = {
					IF (value > 0)
						FLUX value * 0.013 * 2
						COLOR green
					ENDIF
				}
			}			
			TradeGoods = {
				VALUE value [ 0 0 1000 ] 
				DISPLAY_VALUE
				RELATED_INFO = {
					RELATED_UNLOCK OverlandTrade Entreprises Spices 
					RELATED_LINK OverlandTrade NavalTrade Money Spices Gold Salt
				}
				SLEEP = {
					IF ~Pottery
						SPAWN
					ENDIF
				}
				TICK = {
					IF ~Money == 0
						PROCESS OverlandTrade =  OverlandTrade + PerSeconds(value * 0.013 * 0.9 ? 1.1)
						PROCESS NavalTrade =  NavalTrade + PerSeconds(value * 0.013 * 0.9 ? 1.1)
					ELSE
						PROCESS OverlandTrade =  OverlandTrade + PerSeconds(value * 0.013 * ( Max( Money , 1) / 40) * 0.9 ? 1.1 )
						PROCESS NavalTrade =  NavalTrade + PerSeconds(value * 0.013 * ( Max( Money , 1) / 40) * 0.9 ? 1.1 )
					ENDIF
					IF ~Entreprises
						PROCESS Entreprises =  Entreprises + PerSeconds(value * 0.002 * 0.9 ? 1.1)
					ENDIF
				}
				LINK NavalTrade = {
					IF (value > 0)
						FLUX value * 0.013 * 2
						COLOR green
					ENDIF
				}
				LINK OverlandTrade = {
					IF (value > 0)
						FLUX value * 0.013 * 2
						COLOR green
					ENDIF
				}
				LINK Entreprises = {
					IF (value > 0)
						FLUX value * 0.02 * 2
						COLOR green
					ENDIF
				}
			}
			Gold = {
				VALUE value [ 0 0 100 ]
				VALUE output [ 0 0 100 ]
				DISPLAY_VALUE
				RELATED_INFO = {
					RELATED_LINK Mining TradeGoods
				}
				
                TRIGGER_TRAVEL = {
                    PROCESS value = GetPresetValue(value)
                }
				SLEEP = {
					IF ~Mining
						SPAWN
					ENDIF
				}
				TICK = {
					PROCESS output = ( Mining / 100 ) * value * value * 0.0002
					PROCESS TradeGoods = TradeGoods + PerSeconds(output)
				}
				LINK Mining = {
				WEIGHT [ from ]
				}
				LINK TradeGoods = {
					IF value > 0
						FLUX value / 100
						COLOR green
					ENDIF
				}
			}		
			Salt = {
				VALUE value [ 0 0 100 ]
				VALUE output [ 0 0 100 ]
				DISPLAY_VALUE
				RELATED_INFO = {
					RELATED_LINK Mining TradeGoods
				}
				SLEEP = {
					IF ~Mining
						SPAWN
					ENDIF
				}
				TICK = {
					PROCESS output = ( Mining / 100 ) * value * value * 0.0002
					PROCESS TradeGoods = TradeGoods + PerSeconds(output)
				}
				
				
                TRIGGER_TRAVEL = {
                    PROCESS value = GetPresetValue(value)
                }
				
				LINK Mining = {
				WEIGHT [ from ]
				}
				LINK TradeGoods = {
					IF value > 0
						FLUX value / 100
						COLOR green
					ENDIF
				}
			}				
			Slaves = {
				VALUE value [ 0 0 100 ]
				VALUE output [ 0 0 100 ]
				DISPLAY_VALUE
				DISPLAY_DECAY
				RELATED_INFO = {
					RELATED_LINK Expensionism TradeGoods
				}
				SLEEP = {
					IF ~Expensionism & ~AbolitionOfSlavery == 0
						SPAWN
					ENDIF
				}
				TICK = {
					PROCESS output = value * value * 0.00025
					PROCESS Slaves = Slaves - PerSeconds ( Slaves / 700 )
					PROCESS TradeGoods = TradeGoods + PerSeconds(output)
				}
				LINK TradeGoods = {
					IF value > 0
						FLUX value / 100
						COLOR green
					ENDIF
				}
			}				
			Spices = {
				VALUE value [ 0 0 100 ]
				VALUE output [ 0 0 100 ]
				DISPLAY_VALUE
				RELATED_INFO = {
					RELATED_LINK Agriculture TradeGoods
				}
				SLEEP = {
					IF ~Agriculture & ~TradeGoods
						SPAWN
					ENDIF
				}
				
                TRIGGER_TRAVEL = {
                    PROCESS value = GetPresetValue(value)
                }
				
				TICK = {
					PROCESS output =  value * value  * ( ( Agriculture / 100 ) * 0.00025 )
					PROCESS TradeGoods = TradeGoods + PerSeconds(output)
				}
				LINK Agriculture = {
				WEIGHT [ from ]
				}
				LINK TradeGoods = {
					IF value > 0
						FLUX value / 100
						COLOR green
					ENDIF
				}
			}
			Education = {
				VALUE value [ 0 5 5 ]
				DISPLAY_VALUE
				DISPLAY_DECAY
				RELATED_INFO = {
					RELATED_UNLOCK CelesteMandate
					RELATED_LINK Stability NonSecularEducation SecularEducation Stability
				}
				SLEEP = {
					IF ~NonSecularEducation + ~SecularEducation
						SPAWN
					ENDIF
				}
				TICK = {
					PROCESS $PoliticalPower = $PoliticalPower + PerSeconds(Education * 0.015)
					PROCESS Education = Education - PerSeconds( value * value / 5000)
					PROCESS Stability = Stability + PerSeconds(value/50000)
				}
				LINK Stability = {
					IF (value > 0)
						COLOR green
						FLUX value * 0.01
					ENDIF
				}
			}
			Livestock = {
				VALUE value [ 0 0 30 ]
				VALUE output [ 0 0 100 ]
				DISPLAY_VALUE
				RELATED_INFO = {
					RELATED_LINK Flora Fauna AnimalHusbandry
				}
				SLEEP = {
					IF ~AnimalHusbandry
						SPAWN
					ENDIF
				}
				TICK = {
					IF ~NationalReligion
						PROCESS output =  value * 0.0035 * ( 1 + NationalReligion.DevotionToTheHarvestUsedValue / 400 )
					ENDIF
					IF ~DevotionToTheHarvest
						PROCESS output =  value * 0.0035 * ( 1 + DevotionToTheHarvest / 400 )
					ELSE
						PROCESS output =  value * 0.0035 
					ENDIF
					
				
					PROCESS Flora = Flora - PerSeconds( output * 2.3 )
					PROCESS Food = Food + PerSeconds(output)
					PROCESS $Wealth = $Wealth + PerSeconds(output * 0.5)
				}
				LINK Flora = {
					IF value > 0
						COLOR red
						FLUX value * 0.01
					ENDIF
				}
				LINK Food = {
					IF output > 0
						COLOR green
						FLUX value / 100
					ENDIF
				}
			}
			ArtisanClass = {
				VALUE value [ 0 0 100 ]
				VALUE output [ 0 0 100 ]
				DISPLAY_VALUE
				DISPLAY_DECAY
				RELATED_INFO = {
					RELATED_UNLOCK Republic Mining CivilEngineering Forge Oligarchy
					RELATED_LINK ArtisanClass
				}
				SLEEP = {
					IF ~Pottery
						SPAWN
					ENDIF
				}
				TICK = {
					PROCESS output =  value * 0.1
					PROCESS value =  value - PerSeconds(ArtisanClass * ArtisanClass / 700)
				}
				}
			AristocracyClass = {
				VALUE value [ 0 10 100 ]
				DISPLAY_VALUE
				DISPLAY_DECAY
				RELATED_INFO = {
					RELATED_UNLOCK Officers Writing Monarchy Infantry
					RELATED_LINK Monarchy Officers Settlement Urbanization
				}
				SLEEP = {
					IF ( ~OrganizedNomadism & ~OralTradition ) + ~Settlement 
						SPAWN
					ENDIF
				}
				TICK = {
					PROCESS value =  value - PerSeconds(AristocracyClass/480)
					IF value > 100
						PROCESS value =  value - PerSeconds(AristocracyClass/4000)
					ENDIF
					IF VassalPower == 0
						SET Monarchy.value [ : :  Min ( Max ( 50 , 40 + AristocracyClass ) , 100 ) ]
					ENDIF
					IF GetCurrentEra() < 300 
						SET Officers.value [ : :  Min ( AristocracyClass , 100 ) ]
					ENDIF
				}
				LINK Monarchy = {
						IF ( ~VassalPower == 0 | VassalPower == 0 ) 
							WEIGHT [ max ]  Min ( Max ( 50 , 40 + AristocracyClass ) , 100 ) 
						ENDIF
				}
				LINK Officers = {
					IF GetCurrentEra() < 300 
						WEIGHT [ max ] value
					ENDIF
				}
			}
			PriestClass = {
				VALUE value [ 0 0 10 ]
				DISPLAY_VALUE
				
				DISPLAY_DECAY
				RELATED_INFO = {
					RELATED_UNLOCK Theocracy Piety NonSecularEducation
					RELATED_LINK Piety Pantheon NonSecularEducation ReligiousCeremony
				}
				SLEEP = {
					IF ~ReligiousCeremony
						SPAWN
					ENDIF
				}
				TICK = {
					PROCESS value =  value - PerSeconds(0.001)
					PROCESS Piety = Piety + PerSeconds( value / 200 )
					
					IF ~NationalReligion
						SET ReligiousLaw.value [ : : PriestClass * ( 1 + ( NationalReligion.DevotionToTheLawUsedValue / 400 ) ) ]
					ENDIF
					IF ~DevotionToTheLaw
						SET ReligiousLaw.value [ : : PriestClass * ( 1 + ( DevotionToTheLaw / 400 ) ) ]
					ELSE
						SET ReligiousLaw.value [ : : PriestClass ]
					ENDIF
					
					IF ( ~CelestialMonarchy == 0 & ~ClericalState == 0 )
						SET Theocracy.value [ : : PriestClass ]
					ENDIF	
						PROCESS Reactionnarism = Reactionnarism + PerSeconds( Max ( 0, (value - Secularism ) ) / 600)
				}
				LINK Piety = {
					IF (value > 0)
						COLOR green
						FLUX value * 0.01
					ENDIF
				}
				LINK Reactionnarism = {
					IF (value > 0)
						COLOR green
						FLUX value * 0.01
					ENDIF
				}
				LINK ReligiousLaw = {
						WEIGHT [ max ] value
				}
				LINK Theocracy = {
				IF ( ~CelestialMonarchy == 0 & ~ClericalState == 0 )
						WEIGHT [ max ] value
				ENDIF
				}			
			}
			Piety = {
				VALUE value [ 0 0 70 ]
				DISPLAY_VALUE
				DISPLAY_DECAY
				RELATED_INFO = {
					RELATED_UNLOCK CelesteMandate DivineRight
					RELATED_LINK PriestClass Stability DivineRight OverlandTrade NavalTrade
				}
				SLEEP = {
					IF ~PriestClass
						SPAWN
					ENDIF
				}
				TICK = { 
					PROCESS Piety = Piety - PerSeconds ( value / ( 150 - ( ( Heathens * (( 100 - ToleranceOfHeathens ) * ( 1 - ClergyCentralization / 400 ) )  * 0.01  ) + ( Heretics * (( 100 - ToleranceOfHeretics ) * ( 1 - ClergyCentralization / 400 ) ) * 0.005  ) ) ) )
					PROCESS Stability = Stability + PerSeconds(value/3000)
					SET DivineRight.value [ : : Min(100, Piety.value * 4 ) ]
				}
				LINK Stability = {
					IF (value > 0)
						COLOR green
						FLUX value * 0.01
					ENDIF
				}

				LINK DivineRight = {
						WEIGHT [ max ] Min(100, value * 4 )
				}
			}				
			OverlandTrade = {
				VALUE value [ 0 0 100 ]
				VALUE output [ 0 0 10000 ]
				DISPLAY_VALUE
				DISPLAY_DECAY
				RELATED_INFO = {
					RELATED_UNLOCK NavalTrade FoodExchange Money TradeTax LinguaFranca
					RELATED_LINK TradeGoods TradeTax Entreprises LootingCampaigns DraftAnimals Piety BorderControls Money
				}
				SLEEP = {
					IF TradeGoods > 30
						SPAWN
					ENDIF
				}
				TICK = { 
				
					IF ~LinguaFranca 
						PROCESS OverlandTrade = OverlandTrade - PerSeconds( value * value / 1100 * 0.9 ? 1.1 )
					ELSE
						PROCESS OverlandTrade = OverlandTrade - PerSeconds( value * value / 800 * 0.9 ? 1.1 )
					ENDIF
					
					IF ~DraftAnimals
						PROCESS output = value * 2 * Livestock / 130 * 0.75 ? 1.25
					ELSE
						PROCESS output = value * 0.2 * 0.75 ? 1.25
					ENDIF
					
					
					PROCESS Piety = Piety - PerSeconds( output / 1500 )
					
					IF ~Money & Money > 20
						PROCESS TradeGoods = TradeGoods - PerSeconds( output * output / 100 / ( Money / 35) )
					ELSE
						PROCESS TradeGoods = TradeGoods - PerSeconds( output * output / 100 )
					ENDIF
					
					
					
				}
				LINK Piety = {
					IF value > 0
						COLOR red
						FLUX output / 100
					ENDIF
				}
				LINK TradeTax = {
					WEIGHT [ to ]
				}			
				LINK TradeGoods = {
					IF value > 0
						COLOR red
						FLUX output / 50
					ENDIF
				}
			}
			NavalTrade = {
				VALUE value [ 0 0 100 ]
				DISPLAY_VALUE
				DISPLAY_DECAY
				RELATED_INFO = {
					RELATED_UNLOCK Money LinguaFranca
					RELATED_LINK Harbours TradeGoods TradeTax Entreprises LootingCampaigns Piety BorderControls Money
				}
				SLEEP = {
					IF OverlandTrade > 15 & ~Harbours
						SPAWN
					ENDIF
				}
				TICK = { 
					IF ~LinguaFranca 
						PROCESS NavalTrade = NavalTrade - PerSeconds( value * value / 1100 * 0.9 ? 1.1 )
					ELSE
						PROCESS NavalTrade = NavalTrade - PerSeconds( value * value / 800 * 0.9 ? 1.1 )
					ENDIF
					
					PROCESS Piety = Piety - PerSeconds( value / 1500 )
					IF ~Money & Money > 20
						PROCESS TradeGoods = TradeGoods - PerSeconds( NavalTrade * NavalTrade / 85 / ( Money / 35) )
					ELSE
						PROCESS TradeGoods = TradeGoods - PerSeconds( NavalTrade * NavalTrade / 85 )
					ENDIF
				}

				LINK Piety = {
					IF value > 0
						COLOR red
						FLUX value / 100
					ENDIF
				}
				LINK TradeTax = {
					WEIGHT [ to ]
				}				
				LINK TradeGoods = {
					IF value > 0
						COLOR red
						FLUX value / 50
					ENDIF
				}
			}
			Stability = {
				VALUE value [ 0 60 100 ]
				DISPLAY_VALUE
				DISPLAY_DECAY
				RELATED_INFO = {
					RELATED_UNLOCK NeighborhoodBellicism
					RELATED_LINK StateSize Bureaucracy Satrapy NationalCohesion Monarchy Theocracy Republic OrganizedNomadism CelesteMandate Empire Piety UrbanMilitia
				}
				SLEEP = {
					IF ~OrganizedNomadism + ~Settlement
						SPAWN
					ENDIF
				}
				TICK = {
					PROCESS value =  value - PerSeconds(value / 2200 )
					IF ~StateSize
						IF ~Feudality == 0
							IF ~Bureaucracy == 0 & ~Satrapy == 0 
								PROCESS $PoliticalPower = $PoliticalPower + PerSeconds(value * 0.046 * (100 / ( StateSize )))
							ELSE
								IF ~Bureaucracy
								PROCESS $PoliticalPower = $PoliticalPower + PerSeconds(value * 0.046 * (100 /  Max( 50 , ( StateSize - Bureaucracy))))
								ENDIF
								IF ~Satrapy
								PROCESS $PoliticalPower = $PoliticalPower + PerSeconds(value * 0.046 * (100 /  Max( 50 , ( StateSize - Satrapy ))))
								ENDIF
							ENDIF
							ELSE
								PROCESS $PoliticalPower = $PoliticalPower + PerSeconds(value * 0.046 * (100 / Max( 50 , ( StateSize - Feudality * 6 ))))
						ENDIF
					ENDIF	
					IF StateSize == 0
						PROCESS $PoliticalPower = $PoliticalPower + PerSeconds( value * 0.035 )
					ENDIF
				}
					
				TRIGGER_SPAWN Stability = {
					ERA BronzeAge
					ALERT Stability
				}
				
			}		
			StateSize = {
				VALUE value [ 0 100 2000 ]
				TAG Sedentary
				DISPLAY_VALUE

				RELATED_INFO = {
					RELATED_UNLOCK Fortifications NationalCohesion BorderControls Expensionism Empire MilitaryDictatorship
					RELATED_LINK Settlement Stability Fortifications NationalCohesion
				}
				SLEEP = {
					IF ~Settlement
						SPAWN
					ENDIF
				}
				TICK = {
					SET Settlement.value [ : : StateSize ]

                IF StateSize' > 0
					PROCESS Minorities = Minorities + StateSize' / 6
                ENDIF
				
					/// NEW ///
					IF ~WinStateSize
						ONCE_EVERY 2
							GLOBE_SET_AREA ColonyStateMap [ 0 ] [ GetLongitude() : GetLatitude() : value / 4500 : ]
							// Refresh globe
							GLOBE_SET_POINTER ColonyStateMap [ : ]
						ENDONCE
					ENDIF
					
					IF StateSize == 0
						GAMEOVER
					ENDIF
				}

				LINK Settlement = {
						WEIGHT [ max ] value
				}
				LINK Stability = {
						WEIGHT [ to ]
				}
				LINK Stability = {
				IF StateSize' > 0
					COLOR green
					FLUX 1
				ENDIF
				}
				
				/// NEW ///
				TRIGGER_SPAWN StateSize = {
					GLOBE_SET_AREA StateMap [ 0 ] [ GetLongitude() : GetLatitude() : value / 4500 : red ]
				}
			}		
			MilitaryManpower = {
				VALUE value [ 0 0 1000000 ]
				VALUE Cavalry_value [ 0 0 1000 ]
				VALUE Infantry_value [ 0 0 1000 ]
				VALUE Missile_value [ 0 0 1000 ]
				VALUE Mercenaries_value [ 0 0 1000 ]
				DISPLAY_VALUE
				DISPLAY_DECAY

				RELATED_INFO = {
					RELATED_UNLOCK MilitaryEfficiency MilitaryDictatorship Expensionism LootingCampaigns Militarism Fortifications Officers Mercenaries QualityVsQuantity BorderControls Forge Crossbow
					RELATED_LINK Infantry Cavalry Mercenaries Missile Expensionism LootingCampaigns QualityVsQuantity BorderControls
				}
				SLEEP = {
					IF ~Infantry + ~Cavalry
						SPAWN
					ENDIF
				}
				TICK = {
				PROCESS MilitaryManpower = ( MilitaryManpower.Cavalry_value + MilitaryManpower.Infantry_value + MilitaryManpower.Missile_value + MilitaryManpower.Mercenaries_value ) * MilitaryEfficiency / 100
				SET Expensionism.value [ : : Min(MilitaryManpower.value, 100) ]
				SET LootingCampaigns.value [ : : Min(MilitaryManpower.value, 100) ]
				SET BorderControls.value [ : : Min(MilitaryManpower.value, 100) ]
				SET MilitaryDictatorship.value [ : : Min(MilitaryManpower.value / 1.5, 100) ]
				
				
				IF ~QualityVsQuantity
					PROCESS $Wealth = $Wealth - PerSeconds(Cavalry_value*Cavalry_value/4000 * ( 1.5 - ( ( 100 - QualityVsQuantity ) /100 ) ) )
					PROCESS $Wealth = $Wealth - PerSeconds(Infantry_value*Infantry_value/4500 * ( 1.5 - ( ( 100 - QualityVsQuantity ) /100 ) ) )
					PROCESS $Wealth = $Wealth - PerSeconds(Missile_value*Missile_value/5000 * ( 1.5 - ( ( 100 - QualityVsQuantity ) /100 ) ) )
					IF ~MercenariesReform
					PROCESS $Wealth = $Wealth - PerSeconds(Mercenaries_value*Mercenaries_value/(2500 + MercenariesReform * 800) * ( 1.5 - ( ( 100 - QualityVsQuantity ) /100  ) ) )
					ELSE
					PROCESS $Wealth = $Wealth - PerSeconds(Mercenaries_value*Mercenaries_value/2500 * ( 1.5 - ( ( 100 - QualityVsQuantity ) /100  ) ) )
					ENDIF
				ENDIF
				IF  ~QualityVsQuantity == 0
					PROCESS $Wealth = $Wealth - PerSeconds(Cavalry_value*Cavalry_value/4000 * ( 1.5 - (50 /100 ) ))
					PROCESS $Wealth = $Wealth - PerSeconds(Infantry_value*Infantry_value/4500 * ( 1.5 - (50 /100 ) ))
					PROCESS $Wealth = $Wealth - PerSeconds(Missile_value*Missile_value/5000 * ( 1.5 - (50 /100 ) ))
					IF ~MercenariesReform
					PROCESS $Wealth = $Wealth - PerSeconds(Mercenaries_value*Mercenaries_value/(2500 + MercenariesReform * 800) * ( 1.5 - (50 /100 ) ))
					ELSE
					PROCESS $Wealth = $Wealth - PerSeconds(Mercenaries_value*Mercenaries_value/2500 * ( 1.5 - (50 /100 ) ))
					ENDIF
				ENDIF
				
				
				IF ~ModernWarfare
					PROCESS $Wealth = $Wealth - PerSeconds(Cavalry_value*Cavalry_value/2500 + Missile_value*Missile_value/2500 + Infantry_value*Infantry_value/6000 + Mercenaries_value*Mercenaries_value/6000)
				ENDIF
				
				
				IF Cavalry_value + Infantry_value + Missile_value + Mercenaries_value > 0
					WINDOW_INTERCEPT WinMilitary [ 1 ] [ alpha = 1 ]
					WINDOW_INTERCEPT WinMilitary [ 2 ] [ alpha = 1 fill = 0 + ( Cavalry_value + Missile_value + Mercenaries_value ) / ( Cavalry_value + Infantry_value + Missile_value + Mercenaries_value ) ]
					WINDOW_INTERCEPT WinMilitary [ 3 ] [ alpha = 1 fill = 0 + ( Missile_value +  Mercenaries_value ) / ( Cavalry_value + Infantry_value + Missile_value + Mercenaries_value ) ]
					WINDOW_INTERCEPT WinMilitary [ 4 ] [ alpha = 1 fill = Mercenaries_value / ( Cavalry_value + Infantry_value + Missile_value + Mercenaries_value ) ]
				ELSE
					WINDOW_INTERCEPT WinMilitary [ 1 ] [ alpha = 0 ]
					WINDOW_INTERCEPT WinMilitary [ 2 ] [ alpha = 0 ]
					WINDOW_INTERCEPT WinMilitary [ 3 ] [ alpha = 0 ]
					WINDOW_INTERCEPT WinMilitary [ 4 ] [ alpha = 0 ]
				ENDIF
				PROCESS Cavalry_value =  Cavalry_value - PerSeconds( value / 5000 )
				PROCESS Infantry_value =  Infantry_value - PerSeconds( value / 3500 )
				PROCESS Missile_value =  Missile_value - PerSeconds( value / 3500 )
				PROCESS Mercenaries_value =  Mercenaries_value - PerSeconds( value / 5000 )
				
				IF ( ( MilitaryManpower.Cavalry_value + MilitaryManpower.Infantry_value + MilitaryManpower.Missile_value + MilitaryManpower.Mercenaries_value ) * MilitaryEfficiency / 100 ) > ArmyQuota & ~ArmyQuota )
					PROCESS Cavalry_value =  Cavalry_value - PerSeconds( value / 300 )
					PROCESS Infantry_value =  Infantry_value - PerSeconds( value / 300 )
					PROCESS Missile_value =  Missile_value - PerSeconds( value / 300 )
					PROCESS Mercenaries_value =  Mercenaries_value - PerSeconds( value / 300 )
				ENDIF
				
				}
					
					
				LINK Expensionism = {
						WEIGHT [ max ] Min(MilitaryManpower.value, 100)
					}
				LINK LootingCampaigns = {
						WEIGHT [ max ] Min(MilitaryManpower.value, 100)
					}
				LINK BorderControls = {
						WEIGHT [ max ] Min(MilitaryManpower.value, 100)
					}
				LINK MilitaryDictatorship = {
						WEIGHT [ max ] Min(MilitaryManpower.value / 1.5, 100)
					}
				LINK WarStatus = {
					}
			}
			MilitaryEfficiency = {
				VALUE value [ 0 50 100 ]
				DISPLAY_VALUE

				RELATED_INFO = {
					RELATED_UNLOCK MilitaryTechnology QualityVsQuantity
					RELATED_LINK MilitaryTechnology QualityVsQuantity Militarism Officers MilitaryManpower Expensionism LootingCampaigns
				}
				
				SLEEP = {
					IF ~MilitaryManpower
						SPAWN
					ENDIF
				}
				
				
				TICK = {
				PROCESS MilitaryEfficiency = ( 30 * (QualityVsQuantity / 100 ) ) + ( 20 * (Officers / 100 ) ) + ( 30 * ~GreatGeneral ) + ( 50 * ( MilitaryTechnology / 100) ) + ( 20 * ( Militarism / 100) ) + ( -75 * ( Isolationism / 100) ) + ( -50 * ( Conscription / 100) )
				
				}
				LINK MilitaryManpower = {
				WEIGHT [ to ]
				}
			}		
			MilitaryTechnology = {
				VALUE value [ 0 50 100 ]
				DISPLAY_VALUE
				RELATED_INFO = {
					RELATED_UNLOCK TechnologicDecay Forge GenieCorps Crossbow
					RELATED_LINK TechnologicDecay MilitaryEfficiency Forge GenieCorps Crossbow
				}
				SLEEP = {
					IF ~MilitaryEfficiency + GameTime() > 4500
						SPAWN
					ENDIF
				}
				TICK = {
				}
				LINK MilitaryEfficiency = {
				WEIGHT [ to ]
				}
			}		
			TechnologicDecay = {
				VALUE value [ 0 0 10000 ]
				DISPLAY_VALUE

				RELATED_INFO = {
					RELATED_LINK MilitaryTechnology 
				}
				SLEEP = {
					IF ~MilitaryTechnology
						SPAWN
					ENDIF
				}
				TICK = {
				PROCESS value = Max ( (GameTime() - 2000 ) / 50 , 0 )
				PROCESS MilitaryTechnology = MilitaryTechnology - PerSeconds(value / 30)
				}

				LINK MilitaryTechnology = {
					IF value > 0
						COLOR red
						FLUX Min(5, value / 8 )
					ENDIF
				}
			}		
			HorseDomestication = {

				RELATED_INFO = {
					RELATED_UNLOCK Cavalry
				}
				
				VALUE value [ 100 100 100 ]
				DISPLAY_VALUE
				SLEEP = {
					IF ( ~OrganizedNomadism + ~GreatNomadInvasion ) & GameTime() > 550 & ~NewWorld == 0
						SPAWN
					ENDIF
				}
				TICK = {
				}
				
				LINK Cavalry = {
				WEIGHT [ to ]
				}
			}			
			DraftAnimals = {
				VALUE value [ 100 100 100 ]
				DISPLAY_VALUE
				SLEEP = {
					IF (Agriculture > 20 ) & (Livestock > 20 ) & ( Settlement > 10 )  & ~NewWorld == 0
						SPAWN
					ENDIF
				}

				TICK = {
					SET Livestock.value [ : : 75 ]
				}
				
				LINK Livestock = {
						WEIGHT [ max ] 75
				}
				
			}
			NeighborhoodBellicism = {
				DISPLAY_VALUE
				RELATED_INFO = {
					RELATED_UNLOCK Diplomacy
					RELATED_LINK Expensionism Diplomacy LootingCampaigns
				}
				
				VALUE value [ 0 30 100 ]
				VALUE coalitionTrigger [ 0 0 2 ]
				
                TRIGGER_TRAVEL = {
                    PROCESS value = GetPresetValue(value)
                }
				SLEEP = {
					IF ~Stability & GameTime() > 1000
						SPAWN
					ENDIF
				}
				TICK = {
					PROCESS value =  value + PerSeconds( 0.0035 )
				}

				TRIGGER_SPAWN NeighborhoodBellicism = {
					ALERT Invasions
				}
			}
			Navy = {
				VALUE value [ 0 0 1000 ]
				DISPLAY_VALUE
				DISPLAY_DECAY
				RELATED_INFO = {
					RELATED_LINK Harbours MilitaryShips
				}
				SLEEP = {
					IF ~MilitaryShips
						SPAWN
					ENDIF
				}
				TICK = {
					IF ~NavyTechnology == 0
						PROCESS $Wealth = $Wealth - PerSeconds( value * value / 2300 )
					ELSE
						PROCESS $Wealth = $Wealth - PerSeconds( value * value / 2000 * (NavyTechnology / 200 ) )
					ENDIF
					PROCESS value =  value - PerSeconds( value / 3500 )
					IF ~NavalSupremacy
						PROCESS NavalSupremacy += PerSeconds( value / ( 600 - AcrossTheOcean * 2)  )
					ENDIF

					}
				LINK NavalSupremacy = {
					COLOR green
					FLUX value / 25
				}
			}
			NationalCohesion = {
				VALUE value [ 0 0 100 ]
				DISPLAY_VALUE
				RELATED_INFO = {
					RELATED_UNLOCK LinguaFranca
					RELATED_LINK Stability StateSize Culture NationalCohesion
				}
				SLEEP = {
					IF StateSize > 125 + GameTime() > 5000
						SPAWN
					ENDIF
				}
				TICK = {
					PROCESS value = 95 - ( Max (StateSize - 100 - VassalPower * 4 - Satrapy - Bureaucracy, 0) /2 ) - ( Minorities * 1.5 ) + ( Culture * 1 )  + ( Isolationism * 0.5 )  + LinguaFranca + ( ~Democracy * Democracy ) - ((  Heretics * ( 100 - ToleranceOfHeretics ) /200) + (  Heathens * ( 100 - ToleranceOfHeathens ) /100)) - ((Foedus + BarbarianAtGates) * 0.75)
					IF value > 50
					PROCESS Stability = Stability + PerSeconds( ( value - 50) / 1200 )
					ELSE
					PROCESS Stability = Stability + PerSeconds( ( value - 50) / 180 )
					ENDIF
					}
					
				LINK Stability = {
					IF (value > 50)
						COLOR green
						FLUX ( value - 50 ) * 0.025
					ENDIF
					IF (value < 50)
						COLOR red
						FLUX ( 50 - value ) * 0.025
					ENDIF
				}
				
				
				LINK StateSize = {
				WEIGHT [ from ]
				}
				
			}	
			Culture = {
				VALUE value [ 0 0 200 ]
				DISPLAY_VALUE
				DISPLAY_DECAY
				RELATED_INFO = {
					RELATED_UNLOCK Litterature
					RELATED_LINK NationalCohesion Music ReligiousMonuments Litterature OralTradition
				}
				SLEEP = {
					IF ~Music + ~OralTradition
						SPAWN
					ENDIF
				}
				TICK = {
					PROCESS value =  value - PerSeconds(value * value / 3500 )
					PROCESS $PoliticalPower += PerSeconds(value * 0.01)
					}
					
				LINK NationalCohesion = {
				WEIGHT [ to ]
				}
				
					
			}		
			BarbarianAtGates = {
				VALUE value [ 0 3.5 200 ]
				DISPLAY_VALUE
				SLEEP = {
					IF ~BarbarianThrust
						SPAWN
					ENDIF
				}

				TICK = {
					PROCESS NeighborhoodBellicism += PerSeconds(value / 450)
					PROCESS Stability -= PerSeconds(value / 600)
					
					OVERRIDE_PARAM LinguaFranca.value = GetParam(LinguaFranca.value) - PerSeconds(0.02)
					PROCESS LinguaFranca = Min( GetParam(LinguaFranca.value), LinguaFranca )
					
					SET Auxiliaries.value [ : :  ( Foedus + BarbarianAtGates ) / 2 ]
					SET Infantry.value [ : : Max ( 0 , 50 - BarbarianAtGates / 2 ) ]
					SET Missile.value [ : : Max ( 0 , 50 - BarbarianAtGates / 2 ) ]
					
					IF BarbarianAtGates == 0
						REMOVE BarbarianAtGates
					ENDIF
				}
				
				LINK Auxiliaries = {
				WEIGHT [ max ] ( Foedus + BarbarianAtGates ) / 2
				}

				LINK Infantry = {
				WEIGHT [ max ] Max ( 0 , 50 - BarbarianAtGates / 2 )
				}

				LINK Missile = {
				WEIGHT [ max ] Max ( 0 , 50 - BarbarianAtGates / 2 )
				}
			
				LINK NeighborhoodBellicism = {
					COLOR green
					FLUX 1
				}
				
				LINK Stability = {
					COLOR red
					FLUX 1
				}
				
				LINK LinguaFranca = {
					COLOR red
					FLUX 1
				}
			
				TRIGGER_LEAVE BarbarianAtGates = {
						REMOVE Auxiliaries
						REMOVE Foedus
						SET Infantry.value [ : : 50 ]
						SET Missile.value [ : : 50 ]
				}
				
			}					
			NavyTechnology = {
				VALUE value [ 0 0 500 ]
				DISPLAY_VALUE
				SLEEP = {
					IF ~Longship | ~GreekFire | ~DevotionToSea | ~NavigationTools
						SPAWN
					ENDIF
				}
				TICK = {
				
				IF ~NationalReligion
					PROCESS value = ( 50 * (Longship / 100 ) ) + ( 50 * (GreekFire / 100 ) ) + ( 50 * (NavigationTools / 100 ) + ( 50 * ( Caravel / 100 ) )  + 100 * ( LargeSailboats / 100 )   +  ( NationalReligion.DevotionToSeaUsedValue / 500 ) )
				ENDIF
				IF ~DevotionToSea
					PROCESS value = ( 50 * (Longship / 100 ) ) + ( 50 * (GreekFire / 100 ) ) + ( 50 * (NavigationTools / 100 ) + ( 50 * ( Caravel / 100 ) )  + 100 * ( LargeSailboats / 100 )   +  ( DevotionToSea / 500 ) )
				ELSE
					PROCESS value = 50 * (Longship / 100 ) + 50 * (GreekFire / 100 )  + 50 * (NavigationTools / 100 ) + 50 * ( Caravel / 100 ) + 100 * ( LargeSailboats / 100 ) 
				ENDIF
					
				
				}
				LINK Navy = {
				WEIGHT [ to ]
				}
				LINK MilitaryShips = {
				WEIGHT [ to ]
				} 
			}				
			VassalPower = {
				VALUE value [ 0 0 100 ]
				DISPLAY_VALUE
				DISPLAY_DECAY

				SLEEP = {
					IF ~Feudality
						SPAWN
					ENDIF
				}
				TICK = {
					PROCESS VassalPower =  VassalPower - PerSeconds(value / 1500 )
					PROCESS BarbarianAtGates =  BarbarianAtGates - PerSeconds(value / 100 )
					IF VassalPower > 35
						REMOVE BarbarianThreat
					ENDIF
					SET Empire.value [ : : 100 - VassalPower.value ]
					SET BarbarianMonarchy.value [ : : 200 - VassalPower.value * 2 ]
					SET Monarchy.value [ : : 100 - VassalPower.value ]
					SET Republic.value [ : : 150 - VassalPower.value ]
				}
				
				LINK Stability = {
					COLOR green
					FLUX 1
				}
				LINK BarbarianAtGates = {
					COLOR red
					FLUX value / 25
				}

				LINK NationalCohesion = {
						 WEIGHT [ to ] 
				}
				
				LINK Empire = {
						 WEIGHT [ max ] 100 - VassalPower
				}
				
				LINK Monarchy = {
						 WEIGHT [ max ] 100 - VassalPower
				}
				
				LINK Republic = {
						 WEIGHT [ max ] 100 - VassalPower
				}
				
				LINK BarbarianMonarchy = {
						 WEIGHT [ max ] 200 - VassalPower * 2
				}
				

			}		
			TradeRoads = {
				VALUE value [ 0 0 100 ]
				DISPLAY_VALUE
				RELATED_INFO = {
					RELATED_LINK Diplomacy LootingCampaigns OverlandTrade NavalTrade Harbours
				}
				SLEEP = {
					IF ~MerchantExplorer | ~TradeCompagnies
						SPAWN
					ENDIF
				}
				TICK = { 
					SET OverlandTrade.value [ : : Max(100, 100 + value ) ]
				}

				LINK OverlandTrade = {
						WEIGHT [ max ] Max(100, 100 + value )
				}
				
				LINK NavalTrade = {
					WEIGHT [ to ]
				}	
				LINK Harbours = {
					WEIGHT [ to ]
				}	
			}		
			ScienceKnowledge = {
				VALUE value [ 0 0 10000 ]
				DISPLAY_VALUE
				SLEEP = {
					IF ~Alchemy
						SPAWN
					ENDIF
				}
				TICK = {
				
				}
				} 			
			Minorities = {
				VALUE value [ 0 0 100 ]
				DISPLAY_VALUE
				DISPLAY_DECAY
				RELATED_INFO = {
				}
				SLEEP = {
					IF ~Heretics | ~Heathens | OverlandTrade >= 100
						SPAWN
					ENDIF
				}
				TICK = {
					PROCESS value =  value - PerSeconds(value / 4000 )
					IF ~Money == 0
						PROCESS OverlandTrade =  OverlandTrade + PerSeconds(value * 0.001 * 0.9 ? 1.1)
						PROCESS NavalTrade =  NavalTrade + PerSeconds(value * 0.001 * 0.9 ? 1.1)
					ELSE
						PROCESS OverlandTrade =  OverlandTrade + PerSeconds(value * 0.001 * ( Max( Money , 1) / 40) * 0.9 ? 1.1 )
						PROCESS NavalTrade =  NavalTrade + PerSeconds(value * 0.001 * ( Max( Money , 1) / 40) * 0.9 ? 1.1 )
					ENDIF
					
				}
				LINK NavalTrade = {
					IF (value > 0)
						FLUX value * 0.013
						COLOR green
					ENDIF
				}
				LINK OverlandTrade = {
					IF (value > 0)
						FLUX value * 0.013 
						COLOR green
					ENDIF
				}
				LINK NationalCohesion = {
					WEIGHT [ to ]
				}	
			}	
			CraftmanshipSkills = {
				VALUE value [ 0 0 100 ]
				DISPLAY_VALUE

				SLEEP = {
					IF ~Guilds
						SPAWN
					ENDIF
				}
				TICK = {
				IF ~Guilds
					PROCESS value = value + PerSeconds( 0.02 * Guilds / 100 )
				ENDIF
				SET Pottery.value [ : : 100 + CraftmanshipSkills ]
				SET ArtisanClass.value [ : : 100 + CraftmanshipSkills * 3 ]
				}

				LINK Guilds = {
					WEIGHT [ from ]
				}
				
				LINK Pottery = {
						WEIGHT [ max ] 100 + value
				}
				LINK ArtisanClass = {
						WEIGHT [ max ] 100 + CraftmanshipSkills * 3
				}
				
			}			
			RoadsSafety = {
				VALUE value [ 0 0 100 ]
				DISPLAY_VALUE

				SLEEP = {
					IF ( GetCurrentEra() >= GetEra(LateAntiquity) & OverlandTrade > 50 )
						SPAWN
					ENDIF
				}
				TICK = {
					PROCESS value = value + PerSeconds ( Max( 0.0001 , StateSize - UrbanMilitia * 2 ) / 1000  )
				
					PROCESS OverlandTrade = OverlandTrade - PerSeconds(value / 50 * 0.75 ? 1.25)
					PROCESS TradeGoods = TradeGoods - PerSeconds(value / 20 * 0.75 ? 1.25)
				}
				
				LINK OverlandTrade = {
					COLOR red
					FLUX value / 25
				}
				LINK TradeGoods = {
					COLOR red
					FLUX value / 25
				}

				LINK UrbanMilitia = {
					WEIGHT [ from ]
				}
				
			}				
			ColonialStateSize = {
				TAG ColonyTag
				VALUE value [ 0 30 2000 ]
				DISPLAY_VALUE

				SLEEP = {
					IF ( ~Colony & Colony.colonySettled == 1 )
						SPAWN
					ENDIF
				}
				TICK = {
					IF ~WinStateSize
						ONCE_EVERY 2
							GLOBE_SET_AREA ColonyStateMap [ 0 ] [ Colony.ColonyLongitude : Colony.ColonyLatitude : value / 4500 : ]
							// Refresh globe
							GLOBE_SET_POINTER ColonyStateMap [ : ]
						ENDONCE
					ENDIF
					IF value <= 0
						PROCESS Colony.colonySettled = 0
						REMOVE ColonyTag
					ENDIF
				}

				LINK Colony = {
				}
				
				LINK ColonialProsperity = {
					WEIGHT [ to ]
				}
				/// NEW ///
				TRIGGER_SPAWN ColonialStateSize = {
					GLOBE_SET_AREA ColonyStateMap [ 0 ] [ GetLongitude() : GetLatitude() : value / 3000 : green ]
				}
			}
			ColonialProsperity = {
				TAG ColonyTag
				VALUE value [ 0 0 2000 ]
				DISPLAY_VALUE

				SLEEP = {
					IF ( ~Colony & Colony.colonySettled == 1 )
						SPAWN
					ENDIF
				}
				TICK = {
					PROCESS value = value + PerSeconds ( ( Colony.hiddenProsperity / 500 * ColonialStateSize / 300 ) * -0.25 ? 1.5 )
				}

				LINK Colony = {
				}
				
				LINK ColonialPiracy = {
					IF (value > 0)
						FLUX value * 0.005 
						COLOR green
					ENDIF
				}
				
			}
			NavalSupremacy = {
				VALUE value [ 0 0 2000 ]
				DISPLAY_VALUE
				DISPLAY_DECAY

				SLEEP = {
					IF ~AcrossTheOcean
						SPAWN
					ENDIF
				}
				TICK = {
					PROCESS value =  value - PerSeconds(value * value / 2000 )
				}
				
			}		
			ModernWarfare = {
				VALUE value [ 0 0 0 ]

				SLEEP = {
					IF ~Arquebus
						SPAWN
					ENDIF
				}
				TICK = {
				}

				
				TRIGGER_SPAWN ModernWarfare = {
					DROPDOWN_VISIBLE Diplomacy
					DROPDOWN_BUTTON_VISIBLE Diplomacy.DeclareWar
					DROPDOWN_BUTTON_VISIBLE Diplomacy.MakePeace
					DROPDOWN_BUTTON_VISIBLE Diplomacy.WhitePeace
					DROPDOWN_BUTTON_VISIBLE Diplomacy.SeparatePeace
					DROPDOWN_BUTTON_DISABLE Diplomacy.MakePeace
					DROPDOWN_BUTTON_DISABLE Diplomacy.WhitePeace
					DROPDOWN_BUTTON_DISABLE Diplomacy.SeparatePeace
					REMOVE LongRangeRaid
					REMOVE LootingCampaigns
					REMOVE HolyWar
					REMOVE Expensionism
					REMOVE FlowerWar
					REMOVE Fortifications
				}
			}		
			Humanism = {
				VALUE value [ 0 0 0 ]

				SLEEP = {
					IF ~Renaissance
						SPAWN
					ENDIF
				}
				TICK = {
				}

			}
			ColonialPiracy = {
				TAG ColonyTag
				VALUE value [ 0 0 500 ]
				DISPLAY_VALUE
				DISPLAY_DECAY

				SLEEP = {
					IF ( ColonialProsperity > 25 )
						SPAWN
					ENDIF
				}
				TICK = {
					PROCESS value =  value - PerSeconds(value / ( 15 + ColonialProsperity * 10 ) )
					PROCESS value = value + PerSeconds ( ColonialProsperity * 0.008 )
					PROCESS ColonialProsperity = ColonialProsperity - PerSeconds ( ColonialProsperity / 100 * ( value / 40 )  * 0.25 ? 1 )
				}

				LINK Colony = {
				}
				
				LINK ColonialProsperity = {
					IF (value > 0)
						FLUX value * 0.013 
						COLOR red
					ENDIF
				}
				
			}
			ColonialAutonomyDesire = {
				TAG ColonyTag
				VALUE value [ 0 0 100 ]
				DISPLAY_VALUE
				DISPLAY_DECAY

				SLEEP = {
					IF ( ColonialTariffs > 5 )
						SPAWN
					ENDIF
				}
				TICK = {
					PROCESS value =  value - PerSeconds(value / ( 1000 ) )
				}

				LINK Colony = {
				}
				
				LINK ColonialStateSize = {
				}
				
			}
			Colony = {
				TAG ColonyTag
				TYPE Cultural
				VALUE value [ 0 0 0 ]
				VALUE canMoveHere [ 0 0 1 ]
				VALUE colonySettled [ 0 0 1 ]
				VALUE hiddenProsperity [ 0 0 100 ]
				VALUE ColonyLongitude [ -180 0 180 ]
				VALUE ColonyLatitude [ -180 0 180 ]
				VALUE ColonialDistance [ 0 0 500 ]
				
				SLEEP = {
					IF ( ~AcrossTheOcean & AcrossTheOcean >= 30 & ~ColonialRebellion == 0 )
						SPAWN
					ENDIF
				}
				
				TICK = {
				}
				
				TRIGGER_SPAWN Colony = {
				}
				
				// Button
				TRIGGER_CUSTOM 1 = {
					// Call TRIGGER_CUSTOM 2
					ALARM [ once ] [ 2 Colony ] -1
					IF canMoveHere
						PROCESS value = 0
						// Refresh globe
						GLOBE_SET_POINTER ColonyMap [ : ]
						PROCESS canMoveHere = 0
						PROCESS colonySettled = 1
						PROCESS ColonyLongitude = GlobeGetClickLongitude(ColonyMap)
						PROCESS ColonyLatitude = GlobeGetClickLatitude(ColonyMap)
						PROCESS hiddenProsperity = DataMapGetR("Main\DataMaps\ColonialProsperity.png",ColonyLongitude,ColonyLatitude) * 100
						PROCESS ColonialDistance = PathGetLength(GetLongitude(), GetLatitude(), ColonyLongitude, ColonyLatitude) * 100
						
						GLOBE_SET_ICON ColonyMap [ 0 ] [ ColonyLongitude : ColonyLatitude : : : ]
						WINDOW_INTERCEPT WinColony [ 1 ] [ red = 0.2 green = 0.2 blue = 0.2 ]
						WINDOW_CLOSE WinMoveColony
					ELSE
						ALERT CannotColony
					ENDIF
				}
				
				// Check if can travel here
				TRIGGER_CUSTOM 2 = {
					// Get distance between pointer and player
					IF ( DataMapGetR("Main/DataMaps/LandMasses.png", GlobeGetClickLongitude(ColonyMap), GlobeGetClickLatitude(ColonyMap)) < 0.5 ) + ( DataMapGetR("Main/DataMaps/ColoniesTarget.png", GlobeGetClickLongitude(ColonyMap), GlobeGetClickLatitude(ColonyMap)) < 0.3 ) + colonySettled == 1
						WINDOW_INTERCEPT WinMoveColony [ 2 ] [ red = 1 green = 0.2 blue = 0.2 ]
						PROCESS canMoveHere = 0
					ELSE
						WINDOW_INTERCEPT WinMoveColony [ 2 ] [ red = 0.5 green = 1 blue = 0.5 ]
						PROCESS canMoveHere = 1
					ENDIF
				}
				
				// Open move window
				TRIGGER_CUSTOM 3 = {
				IF (colonySettled == 0)
					WINDOW_OPEN WinMoveColony
				ENDIF
				
				}
				
				TRIGGER_CUSTOM 4 = {
					GLOBE_SET_ICON ColonyMap [ 1 ] [ GlobeGetClickLongitude(ColonyMap) : GlobeGetClickLatitude(ColonyMap) : 0.01 : "Main/Images/Circle.png" : red ]
					// Refresh globe
					GLOBE_SET_POINTER ColonyMap [ : ]
					// Call TRIGGER_CUSTOM 2
					ALARM [ once ] [ 2 Colony ] -1
				}
				
				TRIGGER_LEAVE Colony = {
				 PROCESS colonySettled = 0
				}
			}
			InvadersForce = {
				VALUE value [ 0 10 200 ]
				DISPLAY_VALUE
				SLEEP = {
					IF ~Invaders
						SPAWN
					ENDIF
				}

				TICK = {
					PROCESS NeighborhoodBellicism += PerSeconds(value / 350)
					PROCESS Stability -= PerSeconds(value / 600)
					
					IF InvadersForce == 0 & Embassies >= 50
						REMOVE InvadersForce
					ENDIF
				}

				LINK NeighborhoodBellicism = {
					COLOR green
					FLUX 2.5
				}
				
				LINK Stability = {
					COLOR red
					FLUX 1
				}
				
			}
			WarStatus = {
				TAG WarSystemTag
				VALUE value [ 0 50 100 ]
				VALUE WarTimer [ 0 0 100000 ]
				VALUE peaceProposal_valueNeeded [ -10000 0 100000 ]
				VALUE peaceProposal_ColonySize [ -10000 0 100000 ]
				VALUE peaceProposal_StateSize [ -10000 0 100000 ]
				VALUE peaceProposal_Wealth [ -10000 0 100000 ]
				VALUE peaceProposal_ColonialPreference [ 0 0 150 ]
				VALUE revolutionnaryWar [ 0 0 2 ]
				DISPLAY_VALUE
				
				SLEEP = {
					IF DropdownIsState(Diplomacy.War)
						PROCESS value = 50
						SPAWN
						IF ~Democracy | ~RevolutionaryRepublic & NeighborhoodBellicism.coalitionTrigger == 2
							PROCESS WarStatus.revolutionnaryWar = 2
						ENDIF
					ENDIF
				}
				
				RELATED_INFO = {
				}
				TICK = {
				//White Peace if too close
				IF ( value < 53 & value > 47 )
					PROCESS peaceProposal_valueNeeded = 0
				ENDIF
				//You are loosing the war
				IF value < 47
					PROCESS peaceProposal_valueNeeded = ( 50 - value ) * -5
				ENDIF
				//You are wining the war
				IF value > 53
					PROCESS peaceProposal_valueNeeded = ( value - 50 ) * 4
				ENDIF
				
				PROCESS WarTimer += PerSeconds ( 1 )
				
				IF ~ColonialStateSize
				   PROCESS peaceProposal_ColonialPreference = ColonialStateSize / 1.8 + TradeCompagnies / 2 + StockExchange / 3 + NavalSupremacy / 1.5
				ELSE
					PROCESS peaceProposal_ColonialPreference = 0
				ENDIF
				
				
				
				PROCESS peaceProposal_Wealth = ( value - 50 ) * 6
				PROCESS peaceProposal_ColonySize = 0
				PROCESS peaceProposal_StateSize = 0
				
				// Colonial Peace Deal
				IF peaceProposal_ColonialPreference > 0
					//Winning Colonial
					IF peaceProposal_valueNeeded > 0
						IF peaceProposal_valueNeeded < peaceProposal_ColonialPreference
							PROCESS peaceProposal_ColonySize = peaceProposal_valueNeeded * 1.5
							PROCESS peaceProposal_valueNeeded = 0
						ELSE
							PROCESS peaceProposal_ColonySize = peaceProposal_ColonialPreference * 1.5
							PROCESS peaceProposal_valueNeeded -= peaceProposal_ColonialPreference
						ENDIF
						
					ENDIF
					
					//Loosing Colonial
					IF peaceProposal_valueNeeded < 0
						IF Abs( peaceProposal_valueNeeded ) < peaceProposal_ColonialPreference
							PROCESS peaceProposal_ColonySize = peaceProposal_valueNeeded * 1.5
							PROCESS peaceProposal_valueNeeded = 0
						ELSE
							PROCESS peaceProposal_ColonySize = -1 * peaceProposal_ColonialPreference * 1.5
							PROCESS peaceProposal_valueNeeded += peaceProposal_ColonialPreference
						ENDIF
						
					ENDIF
				ENDIF
				
				//Territories changes
				IF peaceProposal_valueNeeded > 0
							PROCESS peaceProposal_StateSize = peaceProposal_valueNeeded
				ENDIF
				
				IF peaceProposal_valueNeeded < 0
					IF 	peaceProposal_valueNeeded > -80
								PROCESS peaceProposal_StateSize = peaceProposal_valueNeeded
							ELSE
								PROCESS peaceProposal_StateSize = -80
								PROCESS peaceProposal_valueNeeded -= 80
								PROCESS peaceProposal_Wealth = ( peaceProposal_valueNeeded ) * 4
					ENDIF
				ENDIF
				
				// Will block early peace out if war is not decided
				IF value < 65 & value > 30 & WarTimer < 150
				DROPDOWN_BUTTON_DISABLE Diplomacy.MakePeace
				ELSE
				DROPDOWN_BUTTON_ENABLE Diplomacy.MakePeace
				ENDIF
				IF value < 55
				PROCESS WarExhaustion += PerSeconds(  (60 - value / 3000 ) + WarTimer / 20000 )
				ENDIF
				
				
				IF value > 50 & WarTimer > 200
					DROPDOWN_BUTTON_ENABLE Diplomacy.WhitePeace
				ELSE
					DROPDOWN_BUTTON_DISABLE Diplomacy.WhitePeace
				ENDIF
				
				IF value > 60
					DROPDOWN_BUTTON_ENABLE Diplomacy.SeparatePeace
				ELSE
					DROPDOWN_BUTTON_DISABLE Diplomacy.SeparatePeace
				ENDIF
				}
				
				LINK FoeLandForces = {
				}
				
				LINK FoeNavalForces = {
				}
				
				LINK WarExhaustion = {
					IF value < 60
						COLOR green
						FLUX 1
					ENDIF
				}
				
			}
			FoeLandForces = {
				TAG WarSystemTag
				VALUE value [ 0 0 2000 ]
				DISPLAY_VALUE

				SLEEP = {
					IF DropdownIsState(Diplomacy.War)
						SPAWN
					ENDIF
				}
				TICK = {
					PROCESS value =  value + PerSeconds( 0.3 + 0.2 ? 1.3 * ( StateSize / 150 ) )
				}
				
				
				
				TRIGGER_SPAWN FoeLandForces = {
					PROCESS FoeLandForces = ( 60 + StateSize / 1.1 ) * 0.7 ? 1.2
					IF ~HostileCoalition | ~Coalition
						PROCESS FoeLandForces = FoeLandForces * 1 ? 2
					ENDIF
				}
				
			}
			FoeNavalForces = {
				TAG WarSystemTag
				VALUE value [ 0 0 2000 ]
				DISPLAY_VALUE

				SLEEP = {
					IF DropdownIsState(Diplomacy.War) & Coastline > 0
						SPAWN
					ENDIF
				}
				TICK = {
					PROCESS value =  value + PerSeconds( 0.3 + 0.2 ? 1.4 * ( ( Coastline + NavalSupremacy  ) / 125 ) )
				}
				
				
				
				TRIGGER_SPAWN FoeNavalForces = {
					PROCESS FoeNavalForces = ( 50 + NavalSupremacy * 2.5 + Coastline * 2 ) * 0.7 ? 1.2 
					IF ~HostileCoalition | ~Coalition
						PROCESS FoeNavalForces = FoeNavalForces * 1 ? 2
					ENDIF
				}
				
			}		
			WarExhaustion = {
				TAG WarSystemTag
				VALUE value [ 0 0 2000 ]
				DISPLAY_VALUE

				SLEEP = {
					IF DropdownIsState(Diplomacy.War) & ( WarStatus < 40 | WarStatus.WarTimer > 400 )
						PROCESS value = 0
						SPAWN
					ENDIF
				}
				TICK = {
					PROCESS Stability -= PerSeconds(value / 500)
				}
				
				
				LINK Stability = {
					COLOR red
					FLUX value / 100
				}
				
			}
			PeasantryClass = {
				VALUE value [ 0 0 10000 ]
				DISPLAY_VALUE
				
				DISPLAY_DECAY
				SLEEP = {
					IF ~Agriculture & ( ~Mill  | GetCurrentEra() >= GetEra(DiscoveryAge) )
						SPAWN
					ENDIF
				}
				
				TRIGGER_SPAWN PeasantryClass = {
					PROCESS PeasantryClass = ( Population * 0.9)
				}
				
				TICK = {
					IF PeasantryClass > Population * ( 0.88 ? 0.91 )
						PROCESS PeasantryClass =  PeasantryClass - PerSeconds(PeasantryClass / 300)
					ENDIF
					
				}
				LINK Agriculture = {
					WEIGHT [ to ]
				}	
				
			}		
			BourgoisieClass = {
				VALUE value [ 0 0 10000 ]
				DISPLAY_VALUE
				
				DISPLAY_DECAY
				SLEEP = {
					IF ~Urbanization & ( ~Guilds  | GetCurrentEra() >= GetEra(DiscoveryAge) )
						SPAWN
					ENDIF
				}
				
				TRIGGER_SPAWN BourgoisieClass = {
					PROCESS BourgoisieClass = ( Urbanization * 0.4 )
				}
				
				TICK = {
						PROCESS BourgoisieClass =  BourgoisieClass - PerSeconds( BourgoisieClass / 1200 )					
						PROCESS OverlandTrade = OverlandTrade + PerSeconds(value / 200)
						PROCESS NavalTrade = NavalTrade + PerSeconds(value / 200)
						PROCESS Entreprises = Entreprises + PerSeconds(value / 800)
				}
				
				LINK NavalTrade = {
					COLOR green
					FLUX value / 50
				}
				LINK Entreprises = {
					COLOR green
					FLUX value / 25
				}
				LINK OverlandTrade = {
					COLOR green
					FLUX value / 25
				}
			}		
			Nationalism = {
				VALUE value [ 0 0 100 ]
				DISPLAY_VALUE
				DISPLAY_DECAY

				SLEEP = {
					IF SchoolOfThought > 50 & NationalCohesion > 50
						SPAWN
					ENDIF
				}
				TICK = {
					PROCESS Stability += PerSeconds( (value - 20 ) / 500)
					PROCESS Nationalism =  Nationalism - PerSeconds( ( Nationalism + StateSize / 1.8 + Minorities / 3 ) / 2000 )		
				}

				LINK Stability = {
					IF value >= 20
						COLOR green
						FLUX value - 20 / 100
					ELSE
						COLOR red
						FLUX ( 100 - value * 2 ) / 100
					ENDIF
				}
				
				
				TRIGGER_SPAWN Nationalism = {
					PROCESS Nationalism = NationalCohesion / 2.5
					REMOVE NationalCohesion
				}
				
				
				LINK StateSize = {
					WEIGHT [ from ]
				}	
				LINK Minorities = {
					WEIGHT [ from ]
				}	
			}
			Allies = {
				VALUE value [ 0 0 10000 ]
				DISPLAY_VALUE
				DISPLAY_DECAY
				SLEEP = {
					IF Diplomacy > 30 & ~ModernWarfare & GetCurrentEra() >= GetEra(DiscoveryAge)
						SPAWN
					ENDIF
				}
				
				TRIGGER_SPAWN Allies = {
					PROCESS Allies = ( Diplomacy * 0.6 )
				}
				
				TICK = {
						PROCESS Allies =  Allies - PerSeconds( ( Allies + StateSize ) / 4000 )		
						IF ~WarStatus
							PROCESS Allies =  Allies - PerSeconds( ( Allies + StateSize ) / 3000 )
							PROCESS WarStatus = WarStatus + PerSeconds(value / 800 )
							IF ~Coalition
								PROCESS WarStatus = WarStatus + PerSeconds( value / 1200 )
								PROCESS Coalition = Coalition - PerSeconds(value / 500 )
							ENDIF
						ENDIF
				}
				
				LINK WarStatus = {
					COLOR green
					FLUX value / 100
				}
				
				LINK Coalition = {
					COLOR red
					FLUX value / 100
				}

				LINK StateSize = {
					WEIGHT [ from ]
				}	

			}				
			Coalition = {
				VALUE value [ 0 1500 10000 ]
				DISPLAY_VALUE
				DISPLAY_DECAY
				SLEEP = {
					IF StateSize <= 150 & ~NeighborhoodRise &  (  ~Musket | ~ManOfWar | SchoolOfThought >= 50 | GameTime() > 13000 ) & GetCurrentEra() >= GetEra(DiscoveryAge) & NeighborhoodBellicism.coalitionTrigger == 0
						SPAWN
					ENDIF
				}
				
				TRIGGER_SPAWN Coalition = {
					PROCESS NeighborhoodBellicism.coalitionTrigger = 1
					PROCESS NeighborhoodBellicism = 100
					ERA ImperialismAge
					SPAWN FoeGreatAdmiral
					SPAWN FoeGreatGeneral
					
				}
				
				TICK = {
						PROCESS NeighborhoodBellicism =  NeighborhoodBellicism + PerSeconds( 1.5 )	
						IF ~WarStatus == 0
							PROCESS Allies =  Allies + PerSeconds( 2.5 )	
						ENDIF
						IF Coalition <= 0
							PROCESS NeighborhoodBellicism = 0
							PROCESS NeighborhoodBellicism.coalitionTrigger = 2
							REMOVE Coalition
						ENDIF
				}
				
				LINK NeighborhoodBellicism = {
					COLOR green
					FLUX 2
				}
				LINK Allies = {
						IF ~WarStatus == 0
							COLOR green
							FLUX 2.5
						ENDIF
				}

			}					
			HostileCoalition = {
				VALUE value [ 0 1300 10000 ]
				DISPLAY_VALUE
				DISPLAY_DECAY
				SLEEP = {
					IF ( StateSize > 150 | ColonialStateSize > 300 )  & ( ~Musket | ~ManOfWar | SchoolOfThought >= 50 | ColonialStateSize >= 200 | GameTime() > 13000 ) & GetCurrentEra() >= GetEra(DiscoveryAge) & NeighborhoodBellicism.coalitionTrigger == 0
						SPAWN
					ENDIF
				}
				
				TRIGGER_SPAWN HostileCoalition = {
					PROCESS NeighborhoodBellicism.coalitionTrigger = 1
					PROCESS NeighborhoodBellicism = 100
					ERA ImperialismAge
				}
				
				TICK = {
						PROCESS HostileCoalition =  HostileCoalition - PerSeconds( 0.75 )		
						PROCESS NeighborhoodBellicism =  NeighborhoodBellicism + PerSeconds( 1.5 )		
						IF HostileCoalition <= 0
							PROCESS NeighborhoodBellicism = 0
							PROCESS NeighborhoodBellicism.coalitionTrigger = 2
							REMOVE HostileCoalition
						ENDIF
				}
				
				LINK NeighborhoodBellicism = {
					COLOR green
					FLUX 1
				}
				

			}
			BarbarianThreat = {
				VALUE value [ 0 0 100 ]
				DISPLAY_VALUE
				SLEEP = {
					IF ~StateSize & GameTime() > 2800 &  ( GameTime() > 5000 |  GetCurrentEra() >= GetEra(IronAge) ) & GameTime() < 9500 & GetCurrentEra() < GetEra(DiscoveryAge)  & ~BarbarianMonarchy == 0 & VassalPower < 30
						SPAWN
					ENDIF
				}
				TICK = {
						PROCESS BarbarianThreat +=  PerSeconds( 0.024 )	
						IF  ( StateSize > 120 | Stability < 20 )
							PROCESS BarbarianThreat +=  PerSeconds( StateSize / 7000 )	
						ENDIF
						IF GameTime() > 9500 | GetCurrentEra() >= GetEra(DiscoveryAge)
							REMOVE BarbarianThreat
						ENDIF
						IF  ( value > 99.8 & value < 100)
							SPAWN BarbarianThrust
						ENDIF
				}
				
				LINK StateSize = {
					WEIGHT [ from ]
				}	
				LINK Stability = {
					WEIGHT [ from ]
				}	
				LINK BarbarianThrust = {
				}	
				
			}
			RevolutionIdeals = {
				VALUE value [ 0 0 100 ]
				DISPLAY_VALUE
				SLEEP = {
					IF ~RevolutionAttempt | ~RevolutionaryRepublic | ~ConstitutionalMonarchy | ~ExpensionofTheRevolution | ( NeighborhoodBellicism.coalitionTrigger == 2 & ~Democracy ) 
						SPAWN
					ENDIF
				}
				TICK = {
						PROCESS RevolutionIdeals -= PerSeconds( 0.021 * 0.75 ? 1.25 )
						PROCESS Nationalism = Nationalism + PerSeconds(value / 2500)
				}
				LINK Nationalism = {
					IF (value > 0)
						COLOR green
						FLUX value * 0.04
					ENDIF
				}
				
				
			}
			Reactionnarism = {
				VALUE value [ 0 0 100 ]
				DISPLAY_VALUE
				SLEEP = {
					IF RevolutionIdeals > 5 | ~RevolutionaryRepublic
						SPAWN
					ENDIF
				}
				TICK = {
				}
				
				TRIGGER_SPAWN Reactionnarism = {
					PROCESS value = AristocracyClass / 2.5 + PriestClass / 2
				}
				
			}
			Parliement = {
				VALUE value [ 0 0 100 ]
				DISPLAY_VALUE
				SLEEP = {
					IF ~UpperHouse
						SPAWN
					ENDIF
				}
				TICK = {
				}
				
			}
			}
		Levers = {
		::APPEND "Main/Nomads.txt" Nomads.Nodes.Levers
		::APPEND "Main/Religious.txt" Religious.Nodes.Levers
			Hunting = {
				TYPE Technological
				VALUE value [ 0 5 100 >> 1 ]
				VALUE output [ 0 0.05 1 ]

				RELATED_INFO = {
					RELATED_UNLOCK Missile AnimalHusbandry
					RELATED_LINK Food Fauna OrganizedNomadism
				}
				TICK = {
					PROCESS output = value * 0.01 * Fauna / 100
					PROCESS $Wealth += PerSeconds(output * 0.5)
					
					IF ~NationalReligion
						PROCESS Fauna = Fauna - PerSeconds(output * ( 5.5 - NationalReligion.DevotionToNatureUsedValue / 100 ) )
					ENDIF
					IF ~DevotionToNature
						PROCESS Fauna = Fauna - PerSeconds(output * ( 5.5 - DevotionToNature / 100 ) )
					ENDIF
					IF ~DevotionToNature == 0 & ~NationalReligion == 0
						PROCESS Fauna = Fauna - PerSeconds(output * 5.5 )
					ENDIF
					
					PROCESS Food = Food + PerSeconds(output *0.15)
				}
				//SLEEP = {
					//IF Fauna > 20
						//SPAWN
					//ENDIF
				//}
				UNLOCK_CONDITIONS = {
					HINT ~Mill == 0
					CONDITION_VALUE Fauna > 20
					CONDITION_NODE - Mill
				}
				PRICE = {
					$PoliticalPower = 10
				}
				UPGRADE = {
					PoliticalPower = 1
				}
				LINK Fauna = {
					IF output > 0
						COLOR red
						FLUX output * 2.5
					ENDIF
				}
				LINK Food = {
					IF output > 0
						COLOR green
						FLUX output * 2.5
					ENDIF
				}
			}
			Fishing = {
				TYPE Technological
				VALUE value [ 0 10 100 >> 1 ]
				VALUE output [ 0 0 100 ]

				RELATED_INFO = {
					RELATED_UNLOCK Harbours
					RELATED_LINK Food Coastline
				}
				
				// SLEEP = {
					// IF Coastline > 1
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					CONDITION_VALUE Coastline > 1
				}
				
				TICK = {
				
					IF ~NationalReligion
						PROCESS output =  value * 0.05 * ( Coastline / 100 ) * ( 1 + NationalReligion.DevotionToSeaUsedValue / 400 )
					ENDIF
					IF ~DevotionToSea
						PROCESS output =  value * 0.05 * ( Coastline / 100 ) * ( 1 + DevotionToSea / 400 )
					ENDIF
					IF ~DevotionToSea == 0 & ~NationalReligion == 0
						PROCESS output =  value * 0.05 * ( Coastline / 100 )
					ENDIF
					
						
					IF ~NavigationTools
					PROCESS output =  output * ( 100 + NavigationTools * 1.5 ) / 100
					ENDIF
					PROCESS Food = Food + PerSeconds(output)
					PROCESS $Wealth = $Wealth + PerSeconds(output * 0.5 )
					
				}
				PRICE = {
					$PoliticalPower = 20
				}
				UPGRADE = {
					$PoliticalPower = 1.2
				}
				LINK Coastline = {
				WEIGHT [ from ]
				}
				LINK Food = {
					IF output > 0
						COLOR green
						FLUX output * 5
					ENDIF
				}
			}
			Harbours = {
				TAG Sedentary
				TYPE Technological
				VALUE value [ 0 0 100 >> 1 ]
				VALUE output [ 0 0 100 ]

				RELATED_INFO = {
					RELATED_LINK Coastline NavalTrade Navy
				}
				
				UNLOCK_CONDITIONS = {
					HINT ~Fishing
					CONDITION_NODE + Settlement
					CONDITION_VALUE Fishing >= 30
				}
				
				TICK = {
					IF ~TradeRoads
						SET NavalTrade.value [ : : Harbours + TradeRoads ]
					ELSE
						SET NavalTrade.value [ : : Harbours ]
					ENDIF
					
					SET NavalTrade.value [ : : Harbours ]
					SET Navy.value [ : : Harbours * 2.5 ]
				}
				
				PRICE = {
					$PoliticalPower = 50
					$Wealth = 10
				}
				UPGRADE = {
					$PoliticalPower = 2
					$Wealth = 0.5
				}
				
				
				LINK NavalTrade = {
				WEIGHT [ max ] Harbours + TradeRoads
				}
				LINK Navy = {
				WEIGHT [ max ] Harbours * 2.5
				}
			}			
			AnimalHusbandry = {
				TYPE Technological
				VALUE value [ 0 51 100 >> 1 middle ]
				RELATED_INFO = {
					RELATED_UNLOCK Livestock PastoralNomadism OrganizedNomadism
					RELATED_LINK Livestock
				}

				// SLEEP = {
					// IF Fauna > 15 & Hunting > 15
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~Hunting
					CONDITION_VALUE Fauna > 15
					CONDITION_VALUE Hunting > 15
				}
				PRICE = {
					$PoliticalPower = 20
				}
				UPGRADE = {
					$PoliticalPower = 1
				}
				TICK = {
					IF value > 50
						PROCESS Livestock = Livestock + PerSeconds((value - 45) / 100)
					ENDIF
					IF value < 20
						PROCESS Livestock = Livestock - PerSeconds((1 - value) / 100)
					ENDIF
				}
				LINK Livestock = {
					IF value > 50
						COLOR green
						FLUX ( value - 50 ) / 10
					ENDIF
					IF value <= 15
						COLOR red
						FLUX (1 - value) / 5
					ENDIF
				}
			}	
			FoodExchange = {
				TYPE Technological
				VALUE value [ 0 50 100 >> 1 middle ]
				RELATED_INFO = {
					RELATED_LINK Food NavalTrade OverlandTrade
				}
				// SLEEP = {
					// IF ~OverlandTrade
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT 0
					CONDITION_NODE + OverlandTrade
				}
				PRICE = {
					$PoliticalPower = 50
				}
				UPGRADE = {
					$PoliticalPower = 1
				}
				TICK = {
					IF FoodExchange > 55
						PROCESS Food = Food + PerSeconds( ((value - 50) / 10) * ( Max(NavalTrade, OverlandTrade) / 100 ) )
						PROCESS $Wealth = $Wealth - PerSeconds((value - 50) * 0.15)
					ENDIF
					IF FoodExchange < 45
						PROCESS Food = Food - PerSeconds((100 - 50 - value) / 10 )
						PROCESS $Wealth = $Wealth + PerSeconds((100 - 50 - value) * 0.15 * ( Max(NavalTrade, OverlandTrade) / 100 ) )
					ENDIF
				}
				LINK Food = {
					IF value > 55
						COLOR green
						FLUX (value - 50) / 10
					ENDIF
					IF value < 45
						COLOR red
						FLUX (100 - 50 - value) / 10
					ENDIF
				}
			}
			Foraging = {
				TYPE Technological
				VALUE value [ 0 5 100 >> 1 ]
				VALUE output [ 0 0 100 ]
				RELATED_INFO = {
					RELATED_UNLOCK Agriculture
					RELATED_LINK Flora Food
				}
				// SLEEP = {
					// IF Flora > 20
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~Mill == 0
					CONDITION_VALUE Flora > 20
					CONDITION_NODE - Mill
				}
				PRICE = {
					$PoliticalPower = 10
				}
				UPGRADE = {
					$PoliticalPower = 1
				}
				TICK = {
					PROCESS output = value * ( Flora / 100 ) * .01 
					PROCESS Food = Food + PerSeconds(output *0.15)
					PROCESS $Wealth = $Wealth + PerSeconds(output*0.5)
					
					IF ~NationalReligion
						PROCESS Flora = Flora - PerSeconds(output * ( 2.5 - NationalReligion.DevotionToNatureUsedValue / 300 ) )
					ENDIF
					IF ~DevotionToNature
						PROCESS Flora = Flora - PerSeconds(output * ( 2.5 - DevotionToNature / 300 ) )
					ENDIF
					IF ~DevotionToNature == 0 & ~NationalReligion == 0
						PROCESS Flora = Flora - PerSeconds(output * 2.5 )
					ENDIF
						
				}
				LINK Flora = {
					IF output > 0
						COLOR red
						FLUX output * 3
					ENDIF
				}
				LINK Food = {
					IF output > 0
						COLOR green
						FLUX output * 5
					ENDIF
				}
				
				
			}	
			Pottery = {
				TYPE Technological
				VALUE value [ 0 5 100 >> 1 ]
				VALUE output [ 0 0 100 ]

				RELATED_INFO = {
					RELATED_UNLOCK ArtisanClass TradeGoods Granary
					RELATED_LINK ArtisanClass TradeGoods Population
				}
				
				// SLEEP = {
					// IF (Settlement > 20 )+ (OrganizedNomadism > 20 )
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~Settlement | ~OrganizedNomadism
					CONDITION_VALUE Settlement > 20
					OR
					CONDITION_VALUE OrganizedNomadism > 20
				}
				PRICE = {
					$PoliticalPower = 40
				}
				UPGRADE = {
					$PoliticalPower = 2.5
				}
				TICK = {
					PROCESS output = value * Population / 1800
					IF (output > 0)
						PROCESS ArtisanClass = ArtisanClass + PerSeconds(output)
						PROCESS TradeGoods = TradeGoods + PerSeconds(output * 1)
					ENDIF
					PROCESS $Wealth = $Wealth + PerSeconds(output * 0.05 )
				}
				LINK Population = {
				
				WEIGHT [ from ]
					
				}
				LINK ArtisanClass = {
					IF (output > 0)
						COLOR green
						FLUX output / 5
					ENDIF
				}
				LINK TradeGoods = {
					IF (output > 0)
						COLOR green
						FLUX output / 5
					ENDIF
				}

			}
			Mining = {
				TAG Sedentary
				TYPE Technological
				VALUE value [ 0 5 100 >> 1 ]
				VALUE output [ 0 0 100 ]
				RELATED_INFO = {
					RELATED_UNLOCK Gold Salt Forge Money
					RELATED_LINK ArtisanClass TradeGoods Population Gold Salt
				}
				// SLEEP = {
					// IF (Settlement > 40 ) & (ArtisanClass > 10 )
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~Settlement | ~ArtisanClass
					CONDITION_VALUE Settlement > 40
					CONDITION_VALUE ArtisanClass > 10
				}
				PRICE = {
					$PoliticalPower = 60
				}
				UPGRADE = {
					$PoliticalPower = 3
				}
				TICK = {
					PROCESS output = value * .02 * ( Population / 250 + Slaves / 150 )
					IF (output > 0)
						PROCESS TradeGoods = TradeGoods + PerSeconds(output)
					ENDIF
					PROCESS $Wealth = $Wealth + PerSeconds(output * 0.1 )
				}
				LINK Population = {			
				WEIGHT [ from ]
				}
				LINK Slaves = {			
				WEIGHT [ from ]
				}
				LINK TradeGoods = {
					IF (output > 0)
						COLOR green
						FLUX output * 5
					ENDIF
				}

			}				
			Granary = {
				TAG Sedentary
				TYPE Technological
				VALUE value [ 0 1 100 >> 1 ]
				RELATED_INFO = {
					RELATED_LINK Settlement Food
				}
				// SLEEP = {
					// IF (Pottery > 50 ) & (Settlement > 20 )
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~Pottery
					CONDITION_VALUE Pottery > 50
					CONDITION_VALUE Settlement > 20
				}
				PRICE = {
					$PoliticalPower = 50
					$Wealth = 50
				}
				UPGRADE = {
					$PoliticalPower = 5
					$Wealth = 5
				}
				TICK = {
						SET Food.value [ : : 100 + ( 1.25 * Granary.value ) ]
				}
				
				LINK Food = {
						WEIGHT [ max ] 100 + ( 1.25 * Granary.value )
				}

			}	
			Agriculture = {
				IMAGE "Main/Images/Agriculture.png"
				TYPE Technological
				VALUE value [ 0 5 40 >> 1 ]
				VALUE output [ 0 0 1000 ]
				RELATED_INFO = {
					RELATED_UNLOCK Settlement Spices SoilFertility FarmingTools
					RELATED_LINK Food SoilFertility FarmingTools Temperature Humidity Settlement Population DraftAnimals Livestock
				}
				// SLEEP = {
					// IF (Foraging > 30 ) * ( Humidity > 20 ) * ( Temperature > 20 ) * (Temperature < 80)
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~Foraging
					CONDITION_VALUE Foraging > 30
					CONDITION_VALUE Humidity > 20
					CONDITION_VALUE Temperature > 20
					CONDITION_VALUE Temperature < 80
				}
				PRICE = {
					$PoliticalPower = 20
				}
				UPGRADE = {
					$PoliticalPower = 2
				}
				TICK = {
					
					IF ( DraftAnimals >= 0 * ~DraftAnimals )
						PROCESS output = value * 0.6 * ( Humidity / 50 ) * ( Temperature / 100 ) * ( SoilFertility * 2 / 200 )  * ( Livestock / 500 ) * Population / 100
					ENDIF
					IF ( ~DraftAnimals == 0 )
						PROCESS output = value * 0.6 * ( Humidity / 50 ) * ( Temperature / 100 ) * ( SoilFertility * 2 / 200 ) * 0.05 * Population / 100
					ENDIF
					IF ~FarmingTools
						PROCESS output = output * ( 1 + ( FarmingTools / 150 ) )
					ENDIF
					IF ~Mill
						PROCESS output = output * ( 1 + ( Mill / 200 ) )
					ENDIF
					IF ~DevotionToTheHarvest
						PROCESS output = output * ( 1 + ( DevotionToTheHarvest / 400 ) )
					ENDIF
					IF ~NationalReligion
						PROCESS output = output * ( 1 + ( NationalReligion.DevotionToTheHarvestUsedValue / 400 ) )
					ENDIF
					IF ~AbolitionOfSerfdom
						PROCESS output = output * 1.05
					ENDIF
					
					IF ~PeasantryClass
						PROCESS Food = Food + PerSeconds( ( PeasantryClass / Population) * output * 1.2 )
					ELSE
						PROCESS Food = Food + PerSeconds(output)
					ENDIF
					
					
					PROCESS PeasantryClass = PeasantryClass + PerSeconds(value / 100)
					IF output > 20
						PROCESS $Wealth = $Wealth + PerSeconds(10 + (output - 20) * 0.22 )
					ELSE
						PROCESS $Wealth = $Wealth + PerSeconds(output * 0.5)
					ENDIF
					
				}
				
				LINK Food = {
					IF output > 0
						COLOR green
						FLUX output * 3
					ENDIF
				}
				LINK Temperature = {
				WEIGHT [ from ]
				}
				LINK Population = {
				WEIGHT [ from ]
				}
				LINK Humidity = {
				WEIGHT [ from ]
				}
				LINK DraftAnimals = {
				WEIGHT [ from ]
				}
			
			}
			Settlement = {
				TAG Sedentary
				TYPE Cultural
				VALUE value [ 0 5 100 >> 1 ]
				RELATED_INFO = {
					RELATED_LINK Urbanization AristocracyClass Agriculture Granary 
				}
				// SLEEP = {
					// IF Population >= 10 * ~Agriculture  * ( ~OrganizedNomadism == 0 )
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~Foraging
					CONDITION_NODE + Agriculture
					CONDITION_NODE - OrganizedNomadism
					CONDITION_VALUE Population >= 10
				}
				PRICE = {
					$PoliticalPower = 30
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(Settlement) + 1) * 0.35
				}
				TICK = {
					SET Agriculture.value [ : : 40 + (Settlement.value * 0.6) ]
					SET Granary.value [ : : Settlement.value  ]
					SET Urbanization.value [ : : Settlement.value ]
					IF value > 50
						PROCESS AristocracyClass = AristocracyClass + PerSeconds(value / 5000)
					ENDIF
				}
				TRIGGER_SPAWN Settlement = {
					RESOURCE_MAX $Wealth = 200
					SET Fishing.value [ : : 100 ]
					REMOVE TAG Nomadic
				}
				LINK AristocracyClass = {
					IF (value > 50)
						COLOR green
						FLUX value * 0.01
					ENDIF
				}
				
				LINK Agriculture = {
						WEIGHT [ max ] 40 + (Settlement.value * 0.6)
				}

				LINK Granary = {
						WEIGHT [ max ] Settlement.value
				}
				LINK Urbanization = {
						WEIGHT [ max ] Settlement.value 
				}
				
			}
			Urbanization = {
				TAG Sedentary
				TYPE Cultural
				VALUE value [ 0 5 100 >> 1 ]
				RELATED_INFO = {
					RELATED_UNLOCK Urbanization Writing Monarchy Republic UrbanMilitia CivilEngineering Infantry
					RELATED_LINK Settlement ReligiousMonuments UrbanMilitia CivilEngineering AristocracyClass
				}
				// SLEEP = {
					// IF Population > 25 & Settlement > 50
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~Settlement
					CONDITION_VALUE Settlement > 50
					CONDITION_VALUE Population > 25
				}
				PRICE = {
					$PoliticalPower = 30
					$Wealth = 50
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(Urbanization) + 1) * 0.35
					$Wealth = (LinkCount(Urbanization) + 1) * 0.75
				}

				TRIGGER_SPAWN Urbanization = {
					IF ~Money == 0 & ~Banks == 0
					RESOURCE_MAX $Wealth = 250
					ENDIF
					}
				TICK = {
				
					IF ~ReligiousArt == 0
						SET ReligiousMonuments.value [ : : Min (100 , Urbanization.value * 0.7 + 30 ) ]
					ENDIF 
					
					IF ~NationalReligion
						SET UrbanMilitia.value [ : : Urbanization.value + 10 * ( 1 + ( NationalReligion.DevotionToTheLawUsedValue / 500 ) )  ]
					ENDIF
					IF ~DevotionToTheLaw
						SET UrbanMilitia.value [ : : Urbanization.value + 10 * ( 1 + ( DevotionToTheLaw / 500 ) )  ]
					ENDIF
					IF  ~DevotionToTheLaw == 0 & ~NationalReligion == 0
						SET UrbanMilitia.value [ : : Urbanization.value + 10 ]
					ENDIF
						
					PROCESS BourgoisieClass = BourgoisieClass + PerSeconds ( value * 0.002 )
					
					IF GetCurrentEra() < 300
						PROCESS AristocracyClass = AristocracyClass + PerSeconds(value / 500)
					ENDIF
				}
				LINK ReligiousMonuments = {
					IF ~ReligiousArt == 0
						WEIGHT [ max ] Min (100 , Urbanization.value * 0.7 + 30 )
						ENDIF
				}
				LINK UrbanMilitia = {
						WEIGHT [ max ] Min (100 , Urbanization.value + 10 )
				}
				LINK BourgoisieClass = {
						COLOR green
						FLUX value / 35
				}	
				LINK AristocracyClass = {
					IF (value > 0 & GetCurrentEra() < 300)
						COLOR green
						FLUX value * 0.05
					ENDIF
				}
				}
			OralTradition = {
				TYPE Cultural
				VALUE value [ 0 6 100 >> 1 ]
				RELATED_INFO = {
					RELATED_UNLOCK Culture 
					RELATED_LINK Education Culture
					RELATED_LOCK Writing
				}
				// SLEEP = {
					// IF Population > 10 & ( ~Writing == 0 ) & ~NodeTuto == 0
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					CONDITION_NODE - Writing
					CONDITION_NODE - University
					CONDITION_VALUE Population > 10
				}
				PRICE = {
					$PoliticalPower = 30
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(OralTradition) + 1) * 0.8
				}
				TICK = {
					SET Education.value [ : : 20 + OralTradition.value / 10) ]
					PROCESS Culture = Culture + PerSeconds ( value * 0.004 )
				}
				LINK Education = {
						WEIGHT [ max ] 20 + OralTradition.value / 10
				}
			
				LINK Culture = {
						COLOR green
						FLUX value / 35
				}				
			}		
			BorderControls = {
				TAG Sedentary
				TYPE Cultural
				VALUE value [ 0 0 100 >> 1 ]
				RELATED_INFO = {
					RELATED_LINK MilitaryManpower NeighborhoodBellicism NavalTrade OverlandTrade
				}
				// SLEEP = {
					// IF ~StateSize & Fortifications > 20 & ~MilitaryManpower
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~MilitaryManpower
					CONDITION_NODE + MilitaryManpower
					CONDITION_NODE + StateSize
					CONDITION_VALUE Fortifications > 20
				}
				PRICE = {
					$PoliticalPower = 25
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(OralTradition) + 1) * 0.25
				}
				TICK = {
					PROCESS NeighborhoodBellicism = NeighborhoodBellicism - PerSeconds(value * 0.0025)
					PROCESS BarbarianAtGates -= PerSeconds(value * 0.0005)
					IF BorderControls > 50
						PROCESS OverlandTrade = OverlandTrade - PerSeconds(value * 0.005)
						PROCESS NavalTrade = NavalTrade - PerSeconds(value * 0.005)
					ENDIF
					
				}
				
				LINK NeighborhoodBellicism = {
					COLOR red
					FLUX value /50
				}
				
				LINK BarbarianAtGates = {
					COLOR red
					FLUX value / 50
				}

				LINK OverlandTrade = {
					IF BorderControls > 50
						COLOR red
						FLUX value /50
					ENDIF
				}
				

				LINK NavalTrade = {
						IF BorderControls > 50
						COLOR red
						FLUX value /50
					ENDIF
				}
			}			
			Writing = {
				TYPE Cultural
				VALUE value [ 0 6 100 >> 1 ]
				RELATED_INFO = {
					RELATED_UNLOCK Litterature
					RELATED_LINK Education
					RELATED_LOCK OralTradition
				}
				// SLEEP = {
					// IF (Urbanization > 10 + AristocracyClass > 15) * ( ~OralTradition == 0 )
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~AristocracyClass & ~Urbanization
					CONDITION_NODE - OralTradition
					CONDITION_VALUE Urbanization > 10
					CONDITION_VALUE AristocracyClass > 15
				}
				PRICE = {
					$PoliticalPower = 35
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(Writing) + 1) * 1.2
				}
				TICK = {
					IF ~University == 0
						SET Education.value [ : : 30 + Writing.value / 5 ]
					ENDIF
				}
				LINK Education = {
					IF ~University == 0
						WEIGHT [ max ] 30 + Writing.value / 5
					ENDIF
				}
				
				
				TRIGGER_LEAVE Writing = {
						REMOVE University
						REMOVE Litterature
				}
			}	
			Pantheon = {
				TYPE Cultural
				VALUE value [ 0 0 100 >> 1 ]
				VALUE AsSpawn [ 0 0 1 ]
				RELATED_INFO = {
					RELATED_UNLOCK CelesteMandate
					RELATED_LINK PriestClass
				}
				SLEEP = {
					 IF AsSpawn == 1
						SET PriestClass.value [ : : Min ( 100 , NationalReligion.PantheonValue + 10 ) ]
					ENDIF
				}
				 
				UNLOCK_CONDITIONS = {
					HINT ~ReligiousMonuments | ~ReligiousCeremony & ~Religiosity == 0
					CONDITION_NODE - Religiosity
					CONDITION_NODE + ReligiousMonuments
					CONDITION_NODE + ReligiousCeremony
					
				}
				PRICE = {
					$PoliticalPower = 0
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(Pantheon) + 1 ) * 3
				}
				TICK = {
					SET PriestClass.value [ : : Min ( 100 , Pantheon.value + 10 ) ]
				}
				
				TRIGGER_SPAWN Pantheon = {
				PROCESS AsSpawn = 1
				}
				
				LINK PriestClass = {
						WEIGHT [ max ] Min ( 100 , Pantheon.value + 10 )
				}

			}
			Theocracy = {
				TYPE Cultural
				TAG Government
				VALUE value [ 0 1 100 >> 1 ]
				RELATED_INFO = {
					RELATED_LINK Piety
					RELATED_LOCK OrganizedNomadism Monarchy Republic CelesteMandate Empire MilitaryDictatorship
				}
				// SLEEP = {
					// IF (PriestClass > 50 ) & ( ~OrganizedNomadism == 0 ) & ( ~Monarchy == 0 )  & ( ~Republic == 0 ) & ( ~CelesteMandate == 0 ) & ( ~Empire == 0 ) & ( ~MilitaryDictatorship == 0 )
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~PriestClass
					CONDITION_EXCLUDE Government
					CONDITION_VALUE PriestClass > 50
				}
				PRICE = {
					$PoliticalPower = 80
					$Wealth = 30
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(Theocracy) + 1) * 1
				}
				TICK = {
					IF ~CelestialMonarchy == 0 & ~ClericalState == 0
						RESOURCE_MAX $PoliticalPower = 200
					ENDIF
					SET Piety.value [ : : 70 + Theocracy.value / 1.5 ]
					PROCESS $Wealth = $Wealth - PerSeconds(value * 0.02)
				}
				
				LINK Piety = {
						WEIGHT [ max ] 70 + Theocracy.value / 2
				}
				
				TRIGGER_LEAVE Theocracy = {
						REMOVE CelestialMonarchy
						REMOVE ClericalState
				}
				
				}					
			Monarchy = {
				TYPE Cultural
				TAG Government
				VALUE value [ 0 1 50 >> 1 ]
				RELATED_INFO = {
					RELATED_UNLOCK CelesteMandate Empire DivineRight
					RELATED_LINK Stability AristocracyClass
					RELATED_LOCK OrganizedNomadism Theocracy Republic 
				}
				// SLEEP = {
					// IF (AristocracyClass > 25 ) & (Urbanization > 20 ) & ( ~Theocracy == 0 ) & ( ~OrganizedNomadism == 0 ) & ( ~Republic == 0 ) & ( ~CelesteMandate == 0 ) & ( ~Empire == 0 )
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~AristocracyClass
					CONDITION_EXCLUDE Government
					CONDITION_VALUE AristocracyClass > 15
					CONDITION_VALUE Urbanization > 20
				}
				PRICE = {
					$PoliticalPower = 50
					$Wealth = 15
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(Monarchy) + 1) * 2
				}
				TICK = {
					PROCESS Stability = Stability + PerSeconds(value/4000)
				}
				LINK Stability = {
					IF (value > 0)
						COLOR green
						FLUX value * 0.02
					ENDIF
				}
				TRIGGER_SPAWN Monarchy = {
						RESOURCE_MAX $PoliticalPower = 200
						REMOVE MilitaryDictatorship
					}
				}		
			MilitaryDictatorship = {
				TYPE Cultural
				TAG Government
				VALUE value [ 0 1 100 >> 1 ]
				RELATED_INFO = {
					RELATED_LINK Stability MilitaryManpower
					RELATED_LOCK OrganizedNomadism Monarchy Theocracy Republic
				}
				// SLEEP = {
					// IF Officers > 30 & MilitaryManpower > 50 & ~StateSize 
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~Officers
					CONDITION_NODE + StateSize
					CONDITION_VALUE Officers > 30
					CONDITION_VALUE MilitaryManpower > 50
				}
				PRICE = {
					$PoliticalPower = 0
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(MilitaryDictatorship) + 1) * 3.5
				}
				TICK = {
					PROCESS Stability = Stability + PerSeconds(value/5000)
				}
				LINK Stability = {
					IF (value > 0)
						COLOR green
						FLUX value * 0.01
					ENDIF
				}
				TRIGGER_SPAWN MilitaryDictatorship = {
						RESOURCE_MAX $PoliticalPower = 275
						PROCESS $PoliticalPower = 100
						PROCESS Stability = Stability + 30
						REMOVE Government
						OVERRIDE_PARAM MilitaryDictatorship.value = 100
						PROCESS MilitaryDictatorship = 100
					}
				}				
			Empire = {
				TYPE Cultural
				TAG Government
				VALUE value [ 0 20 100 >> 1 ]
				RELATED_INFO = {
					RELATED_UNLOCK Bureaucracy Satrapy DivineRight
					RELATED_LINK Stability
					RELATED_LOCK OrganizedNomadism Monarchy Theocracy Republic CelesteMandate
				}
				// SLEEP = {
					// IF (StateSize >= 200 ) & (Monarchy >= 60 + MilitaryDictatorship >= 100 ) 
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~Monarchy | ~MilitaryDictatorship
					CONDITION_VALUE Monarchy >= 50
					OR
					CONDITION_VALUE MilitaryDictatorship >= 70
					ALWAYS
					CONDITION_VALUE StateSize >= 180
				}
				PRICE = {
					$PoliticalPower = 195
					$Wealth = 30
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(Empire) + 1) * 3
				}
				TICK = {
					PROCESS Stability = Stability + PerSeconds(value/5000)
				}
				LINK Stability = {
					IF (value > 0)
						COLOR green
						FLUX value * 0.01
					ENDIF
				}

				TRIGGER_SPAWN Empire = {
					REMOVE Monarchy
					REMOVE MilitaryDictatorship
					RESOURCE_MAX $PoliticalPower = 500
					ERA IronAge
					}
				}	
			BarbarianMonarchy = {
				TYPE Cultural
				TAG Government
				VALUE value [ 0 50 200 >> 1 ]
				UNLOCK_CONDITIONS = {
					HINT ( ~Monarchy | ~MilitaryDictatorship | ~Empire ) & ~BarbarianAtGates
					CONDITION_VALUE Monarchy >= 50
					OR
					CONDITION_VALUE MilitaryDictatorship >= 100
					OR
					CONDITION_VALUE Empire >= 20
					OR
					CONDITION_VALUE CelesteMandate >= 20
					OR
					CONDITION_EXCLUDE Government
					ALWAYS
					CONDITION_NODE + BarbarianAtGates
				}
				PRICE = {
					$PoliticalPower = 195
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(BarbarianMonarchy) + 1) * 3
				}
				TICK = {
					PROCESS Stability = Stability + PerSeconds(value/4000)
					PROCESS BarbarianAtGates = BarbarianAtGates - PerSeconds(value/5000)
				}
				LINK Stability = {
					IF (value > 0)
						COLOR green
						FLUX value * 0.01
					ENDIF
				}
				LINK BarbarianAtGates = {
					IF (value > 0)
						COLOR red
						FLUX value * 0.01
					ENDIF
				}

				TRIGGER_SPAWN BarbarianMonarchy = {
					REMOVE Monarchy
					REMOVE CelesteMandate
					REMOVE Empire
					REMOVE MilitaryDictatorship
					PROCESS AristocracyClass -= 25
					PROCESS BarbarianAtGates -= 20
					REMOVE Empire
					REMOVE BarbarianThreat
					RESOURCE_MAX $PoliticalPower = 500
					}
				}	
			CelesteMandate = {
				TYPE Cultural
				TAG Government
				VALUE value [ 0 50 100 >> 1 middle]
				RELATED_INFO = {
					RELATED_LINK Stability
					RELATED_UNLOCK Bureaucracy
					RELATED_LOCK OrganizedNomadism Theocracy Republic Monarchy Empire MilitaryDictatorship
				}
				// SLEEP = {
					// IF (Monarchy >= 25 ) & (Philosophy == 100 ) & (Education > 30 ) & (Piety > 20 ) & (Pantheon >= 50 ) & (Pantheon < 70 )
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~Monarchy & ~Philosophy & ~Pantheon
					CONDITION_VALUE Monarchy >= 60
					OR
					CONDITION_VALUE MilitaryDictatorship >= 100
					ALWAYS
					CONDITION_VALUE StateSize >= 100
					CONDITION_VALUE Philosophy >= 100
					CONDITION_VALUE Education >= 30
					CONDITION_VALUE Piety >= 20
					CONDITION_VALUE Pantheon >= 50
					CONDITION_VALUE Pantheon <= 70
				}
				PRICE = {
					$PoliticalPower = 195
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(CelesteMandate) + 1) * 3
				}
				TICK = {
					PROCESS Stability = Stability + PerSeconds( ( value - 50) / 100)
				}
				LINK Stability = {
					IF (value > 50)
						COLOR green
						FLUX ( value - 50 ) * 0.025
					ENDIF
					IF (value < 50)
						COLOR red
						FLUX ( 50 - value ) * 0.025
					ENDIF
				}
				
				TRIGGER_SPAWN CelesteMandate = {
					REMOVE Government		
					ERA IronAge
					PROCESS CelesteMandate = 50
					RESOURCE_MAX $PoliticalPower = 500
					}
				}	
			Republic = {
				TYPE Cultural
				TAG Government
				VALUE value [ 0 1 100 >> 1 ]
				
				RELATED_INFO = {
					RELATED_LINK Stability ArtisanClass
					RELATED_LOCK OrganizedNomadism Theocracy Republic Monarchy CelesteMandate Empire MilitaryDictatorship
					RELATED_UNLOCK Legislation Democracy Oligarchy
				}
				// SLEEP = {
					// IF (ArtisanClass > 30 ) & (Urbanization > 50 ) & ( ~Theocracy == 0 ) & ( ~Monarchy == 0 ) & ( ~OrganizedNomadism == 0 ) & ( ~CelesteMandate == 0 ) & ( ~Empire == 0 ) & ( ~MilitaryDictatorship == 0 )
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~Settlement
					CONDITION_EXCLUDE Government
					CONDITION_VALUE ArtisanClass > 30
					CONDITION_VALUE Urbanization > 40
				}
				PRICE = {
					$PoliticalPower = 50
					
					$Wealth = 15
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(Republic) + 1) * 2
				}
				TICK = {
					PROCESS $PoliticalPower = $PoliticalPower + PerSeconds(value * 0.01)
					SET TradeTax.value [ : : 20 ]
					PROCESS Stability = Stability + PerSeconds(value/5000)
				}
				
				
				LINK TradeTax = {
						WEIGHT [ max ] 20
				}
				
				
				LINK Stability = {
					IF (value > 0)
						COLOR green
						FLUX value * 0.01
					ENDIF
				}
				
					TRIGGER_SPAWN Republic = {
						RESOURCE_MAX $PoliticalPower = 250
				}
				
					TRIGGER_LEAVE Republic = {
						REMOVE Democracy
						REMOVE Oligarchy
						REMOVE MerchantRepublic
						SET TradeTax.value [ : : 60 ]
				}
				}
			Democracy = {
				TYPE Cultural
				VALUE value [ 0 0 100 >> 1 ]
				RELATED_INFO = {
					RELATED_LINK Republic NationalCohesion
					RELATED_LOCK Oligarchy
				}
				// SLEEP = {
					// IF Republic == 100 & Legislation > 50 & Philosophy >= 30 & ~Oligarchy == 0
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~Republic & ~MerchantRepublic == 0
					CONDITION_NODE - Oligarchy
					CONDITION_NODE - MerchantRepublic
					CONDITION_VALUE Republic >= 100
					CONDITION_VALUE Legislation > 50
					CONDITION_VALUE Philosophy >= 30
				}
				PRICE = {
					$PoliticalPower = 195
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(Democracy) + 1) * 3.5
				}
				TICK = {
				  IF ~VassalPower == 0
					SET Republic.value [ : : 100 + Democracy.value ]
				ENDIF
						PROCESS RevolutionIdeals += PerSeconds( 0.011 * 0.75 ? 1.25 )
				}
				
				LINK Republic = {
				  IF ~VassalPower == 0
					WEIGHT [ max ] 100 + Democracy.value
				ENDIF
				}
				LINK NationalCohesion = {
					WEIGHT [ to ]
				}
				LINK RevolutionIdeals = {
					FLUX value / 25
					COLOR green
				}
				
				TRIGGER_SPAWN Democracy = {
						RESOURCE_MAX $PoliticalPower = 500
				}
				TRIGGER_LEAVE Democracy = {
						SET Republic.value [ : : 100 ]
				}
			}
			Oligarchy = {
				TYPE Cultural
				VALUE value [ 0 0 100 >> 1 ]
				RELATED_INFO = {
					RELATED_LINK Republic
					RELATED_LOCK Democracy
				}
				// SLEEP = {
					// IF Republic >= 50 & Legislation > 20 & ArtisanClass >= 30 & ~Democracy == 0
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~Republic & ~MerchantRepublic == 0
					CONDITION_NODE - Democracy
					CONDITION_NODE - MerchantRepublic
					CONDITION_VALUE Republic >= 50
					CONDITION_VALUE Legislation > 20
					CONDITION_VALUE ArtisanClass >= 30
				}
				PRICE = {
					$PoliticalPower = 120
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(Oligarchy) + 1) * 2.5
				}
				TICK = {
				  IF ~VassalPower == 0
					SET Republic.value [ : : 100 + Oligarchy.value ]
				ENDIF
				}
				
				LINK Republic = {
				  IF ~VassalPower == 0
					WEIGHT [ max ] 100 + Oligarchy.value
				ENDIF
				}
				
				TRIGGER_SPAWN Oligarchy = {
						RESOURCE_MAX $PoliticalPower = 500
				}
				TRIGGER_LEAVE Oligarchy = {
						SET Republic.value [ : : 100 ]
				}
			}	
			MerchantRepublic = {
				TYPE Cultural
				VALUE value [ 0 50 200 >> 1 ]

				UNLOCK_CONDITIONS = {
					HINT ~Republic & ~Legislation
					CONDITION_VALUE NavalTrade >= 80
					OR
					CONDITION_VALUE OverlandTrade >= 80
					ALWAYS
					CONDITION_VALUE Republic >= 200
					CONDITION_VALUE Legislation >= 100
					CONDITION_VALUE ArtisanClass >= 90
					CONDITION_VALUE AristocracyClass >= 35
					CONDITION_VALUE Stability >= 70
				}
				PRICE = {
					$PoliticalPower = 120
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(MerchantRepublic) + 1) * 2.5
				}
				TICK = {
				  IF ~VassalPower == 0
					SET Republic.value [ : : 150 + MerchantRepublic.value ]
					ENDIF
				}
				
				LINK Republic = {
					IF ~VassalPower == 0
						WEIGHT [ max ] 150 + MerchantRepublic.value
					ENDIF
				}
				
				TRIGGER_SPAWN MerchantRepublic = {
						RESOURCE_MAX $PoliticalPower = 800
						REMOVE Democracy Oligarchy
				}
				TRIGGER_LEAVE MerchantRepublic = {
						SET Republic.value [ : : 100 ]
				}
			}	
			ReligiousCeremony = {
				TYPE Cultural
				VALUE value [ 0 5 20 >> 1 ]
				VALUE AsSpawn [ 0 0 1 ]
				VALUE Savevalue [ 0 5 20 ]

				RELATED_INFO = {
					RELATED_UNLOCK PriestClass Pantheon NonSecularEducation
					RELATED_LINK PriestClass ReligiousMonuments
				}
				
				SLEEP = {
					IF AsSpawn == 1
						PROCESS PriestClass =  PriestClass + PerSeconds( NationalReligion.ReligiousCeremonyUsedValue ) / 500 )
					ENDIF
				}
				
				UNLOCK_CONDITIONS = {
					HINT ~ReligiousMonuments | ~OrganizedNomadism & ~Religiosity == 0
					CONDITION_NODE + OrganizedNomadism
					OR
					CONDITION_VALUE ReligiousMonuments > 5
					ALWAYS
					CONDITION_NODE - Religiosity
				}
				PRICE = {
					$PoliticalPower = 10
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(ReligiousCeremony) + 1) * 0.8
				}
				TICK = {
				PROCESS PriestClass =  PriestClass + PerSeconds( value / 500 )
				}
				
				TRIGGER_SPAWN ReligiousCeremony = {
				PROCESS AsSpawn = 1
				}
				
				TRIGGER_LEAVE ReligiousCeremony = {
				PROCESS Savevalue = value 
				}
				
				LINK PriestClass = {
					FLUX value / 25
					COLOR green
				}

			}
			ReligiousMonuments = {
				TYPE Technological
				VALUE value [ 0 1 30 >> 1 ]

				RELATED_INFO = {
					RELATED_UNLOCK Pantheon ReligiousCeremony
					RELATED_LINK PriestClass ReligiousMonuments Culture
				}
				
				// SLEEP = {
					// IF (Settlement > 20 + OrganizedNomadism > 20)
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~Settlement | ~OrganizedNomadism
					CONDITION_VALUE Settlement > 20
					OR
					CONDITION_VALUE OrganizedNomadism > 20
				}
				PRICE = {
					$PoliticalPower = 10
					$Wealth = 30
				}
				UPGRADE = {
					$PoliticalPower = 2
					$Wealth = 5
				}
				TICK = {
				SET ReligiousCeremony.value [ : : ReligiousMonuments * 0.85 + 15 ]
				PROCESS Culture = Culture + PerSeconds ( value * 0.008 )
				}
				
				LINK ReligiousCeremony = {
						WEIGHT [ max ] ReligiousMonuments * 0.85 + 15
				}

			
				LINK Culture = {
						COLOR green
						FLUX value / 25
				}
				
			}				
			NonSecularEducation = {
				TYPE Cultural
				VALUE value [ 0 6 100 >> 1 ]
				VALUE cost [ 0 0 100 ]

				RELATED_INFO = {
					RELATED_LINK Education
					RELATED_LOCK SecularEducation
				}
				
				// SLEEP = {
					// IF (ReligiousCeremony > 10 + PriestClass > 5) & ( ~SecularEducation == 0 )
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~ReligiousCeremony | ~PriestClass
					CONDITION_VALUE ReligiousCeremony > 10
					CONDITION_NODE - SecularEducation
					CONDITION_VALUE PriestClass > 10
				}
				PRICE = {
					$PoliticalPower = 10
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(NonSecularEducation) + 1) * 1.2
				}
				TICK = {
					PROCESS cost =  value * value * 0.0002
					PROCESS PriestClass =  PriestClass + PerSeconds( value / 500)
					IF ( $Wealth > 5 & PriestClass > 10)
						IF ~Monasteries
							PROCESS Education = Education + PerSeconds(value / ( 150 - Monasteries / 2 ))
							PROCESS $Wealth = $Wealth - PerSeconds( Max ( 0 , cost * 1 - Monasteries / 200 ))
						ELSE
							PROCESS Education = Education + PerSeconds(value / 150)
							PROCESS $Wealth = $Wealth - PerSeconds(cost)
						ENDIF
					ENDIF
				}
				LINK Education = {
				IF value > 0 & ( $Wealth > 5) & (PriestClass > 10)
					FLUX value / 25
					COLOR green
				ENDIF
				}
				LINK PriestClass = {
				IF value > 0
					FLUX value / 25
					COLOR green
				ENDIF
				}
			}
			SecularEducation = {
				TYPE Cultural
				VALUE value [ 0 6 100 >> 1 ]
				VALUE cost [ 0 0 100 ]
				RELATED_INFO = {
					RELATED_LINK Education
					RELATED_LOCK SecularEducation
				}
				// SLEEP = {
					// IF (Philosophy > 20) & ( ~NonSecularEducation == 0 )
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~Philosophy
					CONDITION_NODE - NonSecularEducation
					CONDITION_VALUE Philosophy > 20
				}
				PRICE = {
					$PoliticalPower = 50
					$Wealth = 50
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(NonSecularEducation) + 1) * 1.2
				}
				TICK = {
					PROCESS cost =  value * value * 0.001
					IF ( $Wealth > 5)
						PROCESS Education = Education + PerSeconds(value / 150)
						PROCESS $Wealth = $Wealth - PerSeconds(cost)
					ENDIF
				}
				LINK Education = {
				IF value > 0 & ( $Wealth > 5)
					FLUX value / 25
					COLOR green
				ENDIF
				}
			}		
			Legislation = {
				SOUND_WINDOW "Main/SFX/ToomuchPP.wav"
				TYPE Cultural
				VALUE value [ 0 0 100 >> 1 ]
				RELATED_INFO = {
				RELATED_UNLOCK Democracy Oligarchy
				}
				// SLEEP = {
					// IF Mathematics > 75 & Philosophy > 50  & ( ~Bureaucracy + ~Satrapy + ~Republic )
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~Bureaucracy | ~Satrapy | ~Republic | ~Mathematics
					CONDITION_NODE + Bureaucracy
					OR
					CONDITION_NODE + Satrapy
					OR
					CONDITION_NODE + Republic
					OR
					CONDITION_VALUE Philosophy > 95
					CONDITION_VALUE Mathematics > 95
					CONDITION_VALUE Stability > 60
					ALWAYS
					CONDITION_NODE - ReligiousLaw
					CONDITION_VALUE Mathematics > 75
					CONDITION_VALUE Philosophy > 50
				}
				PRICE = {
					$PoliticalPower = 195
					$Wealth = 150
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(Legislation) + 1) * 3
					$Wealth = (LinkCount(Legislation) + 1) * 1
				}
				TICK = {
						PROCESS $PoliticalPower = $PoliticalPower + PerSeconds(Legislation / 50)
				}
			}
			ReligiousLaw = {
				SOUND_WINDOW "Main/SFX/ToomuchPP.wav"
				TYPE Cultural
				VALUE value [ 0 0 100 >> 1 ]

				UNLOCK_CONDITIONS = {
					HINT ~PriestClass
					CONDITION_VALUE Monarchy >= 75
					OR
					CONDITION_VALUE Empire >= 75
					OR
					CONDITION_VALUE MilitaryDictatorship >= 75
					OR
					CONDITION_VALUE BarbarianMonarchy >= 75
					OR
					CONDITION_VALUE Republic >= 150
					OR
					CONDITION_VALUE Theocracy >= 50
					ALWAYS
					CONDITION_NODE - Legislation
					CONDITION_VALUE Piety >= 10
					CONDITION_VALUE PriestClass >= 40
					CONDITION_VALUE Pantheon >= 50
				}
				PRICE = {
					$PoliticalPower = 195
					$Wealth = 150
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(Legislation) + 1) * 3
					$Wealth = (LinkCount(Legislation) + 1) * 1
				}
				TICK = {
						PROCESS $PoliticalPower = $PoliticalPower + PerSeconds(ReligiousLaw / 68)
				}
			}
			EconomicCharters = {
				TYPE Cultural
				VALUE value [ 0 0 100 >> 1 ]

				UNLOCK_CONDITIONS = {
					HINT ( ~Monarchy | ~Empire | ~BarbarianMonarchy | ~CelesteMandate ) & ~Legislation
					CONDITION_NODE + Monarchy
					OR
					CONDITION_NODE + Empire
					OR
					CONDITION_NODE + BarbarianMonarchy
					OR
					CONDITION_NODE + CelesteMandate
					ALWAYS
					CONDITION_VALUE Legislation > 75
					CONDITION_VALUE Mathematics >= 100
				}
				PRICE = {
					$PoliticalPower = 195
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(EconomicCharters) + 1) * 3
				}
				TICK = {
						PROCESS $Wealth += PerSeconds(EconomicCharters / 50)
						PROCESS $PoliticalPower -= PerSeconds(EconomicCharters / 125)
						SET TradeTax.value [ : : 30 ]
				}
				
				LINK TradeTax = {
						WEIGHT [ max ] 30
				}
			}		
			Mathematics = {
				TYPE Technological
				VALUE value [ 0 5 100 >> 1 ]
				RELATED_INFO = {
					RELATED_UNLOCK Fortifications Philosophy GenieCorps Crossbow Money Legislation
					RELATED_LINK CivilEngineering Fortifications
				}
				// SLEEP = {
					// IF (ReligiousMonuments > 20) + (Education > 20 )
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~ReligiousMonuments + ~Education
					CONDITION_VALUE ReligiousMonuments > 20
					OR
					CONDITION_VALUE Education > 20
				}
				PRICE = {
					$PoliticalPower = 50
				}
				UPGRADE = {
					$PoliticalPower = 3
				}
				TICK = {
				SET CivilEngineering.value [ : : Min ( Urbanization , Mathematics ) ]
				SET Fortifications.value [ : : StateSize * Mathematics / 100 ]
				PROCESS ScienceKnowledge =  ScienceKnowledge + PerSeconds(value / 12000 )
				}
				
				LINK ScienceKnowledge = {
				IF value > 0
					FLUX value / 60
					COLOR green
				ENDIF
				}	
				
				LINK Fortifications = {
						WEIGHT [ max ] StateSize * Mathematics / 100
				}
				
				
				LINK CivilEngineering = {
						WEIGHT [ max ] Min ( Urbanization , Mathematics )
				}

			}		
			Philosophy = {
				TYPE Cultural
				RELATED_INFO = {
					RELATED_UNLOCK SecularEducation CelesteMandate Legislation Democracy Litterature
				}
				VALUE value [ 0 1 100 >> 1 ]
				// SLEEP = {
					// IF (Mathematics > 30)
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~Mathematics
					CONDITION_VALUE Mathematics > 30
				}
				PRICE = {
					$PoliticalPower = 50
				}
				UPGRADE = {

					$PoliticalPower = (LinkCount(Philosophy) + 1) * 1.5
				}
				TICK = {
				}
				LINK Syncretism = {
					WEIGHT [ to ]
				}


			}						
			UrbanMilitia = {
				TAG Sedentary
				TYPE Cultural
				VALUE value [ 0 10 50 >> 1 ]
				VALUE cost [ 0 0 100 ]
				RELATED_INFO = {
					RELATED_LINK Urbanization Stability
				}
				// SLEEP = {
					// IF (Urbanization > 40)
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~Urbanization
					CONDITION_VALUE Urbanization > 40
				}
				PRICE = {
					$PoliticalPower = 80
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(UrbanMilitia) + 1) * 0.75
				}
				
				TICK = {
					PROCESS cost =  value * 0.004
					IF ( $PoliticalPower > 5)
						PROCESS Stability = Stability + PerSeconds(value/5000)
						PROCESS $PoliticalPower = $PoliticalPower - PerSeconds(cost)
					ENDIF
				PROCESS RoadsSafety = RoadsSafety - PerSeconds(value * 0.02)
				}
				
				LINK RoadsSafety = {
				IF value > 0
					FLUX value / 10
					COLOR red
				ENDIF
				}
				
				LINK Stability = {
					IF (value > 0) & ( $PoliticalPower > 5)
						COLOR green
						FLUX value * 0.01
					ENDIF
				}

			}					
			Militarism = {
				TYPE Cultural
				VALUE value [ 0 10 50 >> 1 ]
				VALUE cost [ 0 0 100 ]
				RELATED_INFO = {
					RELATED_LINK MilitaryEfficiency
				}
				// SLEEP = {
					// IF MilitaryManpower > 70
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~MilitaryManpower
					CONDITION_VALUE MilitaryManpower > 70
				}
				PRICE = {
					$PoliticalPower = 80
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(Militarism) + 1) * 2.2
				}
				
				TICK = {
					SET Diplomacy.value [ : :  Max (0, 100 - Militarism.value * 2 ) ]
				}
				
				LINK MilitaryEfficiency = {
						 WEIGHT [ to ] 
				}
				LINK Diplomacy = {
						 WEIGHT [ max ] Max (0, 100 - Militarism.value * 2 )
				}

				TRIGGER_SPAWN Militarism = {
					ERA IronAge
				}
				TRIGGER_LEAVE Militarism = {
					SET Diplomacy.value [ : : 100 ]
				}
			}		
			DivineRight = {
				TYPE Cultural
				VALUE value [ 0 0 100 >> 1 ]
				RELATED_INFO = {
					RELATED_LINK Monarchy Empire Piety
				}
				// SLEEP = {
					// IF ( ~Monarchy + ~Empire ) & Piety > 10
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~Monarchy | ~Empire
					CONDITION_NODE + Monarchy
					OR
					CONDITION_NODE + Empire
					OR
					CONDITION_NODE + BarbarianMonarchy
					ALWAYS
					CONDITION_VALUE Piety > 10
				}
				PRICE = {
					$PoliticalPower = 80
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(DivineRight) + 1) * 2.2
				}
				
				TICK = {
					IF ~Monarchy == 0 & ~Empire == 0 & ~BarbarianMonarchy == 0
						REMOVE DivineRight
					ENDIF
					PROCESS $PoliticalPower = $PoliticalPower + PerSeconds(value * 0.0025)
				}
				LINK Monarchy = {
						 WEIGHT [ to ] 
				}
				
				LINK Empire = {
						 WEIGHT [ to ] 
				}
				
			}	
			Diplomacy = {
				TYPE Cultural
				VALUE value [ 0 0 100 >> 1 ]
				RELATED_INFO = {
					RELATED_LINK NeighborhoodBellicism Militarism
				}

				UNLOCK_CONDITIONS = {
					HINT 0
					CONDITION_NODE + NeighborhoodBellicism
				}
				PRICE = {
					$PoliticalPower = 80
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(Diplomacy) + 1) * 2.2
				}
				
				TICK = {
				PROCESS NeighborhoodBellicism = NeighborhoodBellicism - PerSeconds(value * 0.0025)
				PROCESS InvadersForce = InvadersForce - PerSeconds(value * 0.0025)
				PROCESS $Wealth = $Wealth - PerSeconds(Diplomacy * 0.02)
				PROCESS TradeRoads = TradeRoads + PerSeconds(Diplomacy * 0.001)
				PROCESS Allies = Allies + PerSeconds(Diplomacy * 0.002)
				}
				LINK NeighborhoodBellicism = {
				IF value > 0
					FLUX value / 25
					COLOR red
				ENDIF
				}
				
			LINK InvadersForce = {
				IF value > 0
					FLUX value / 25
					COLOR red
				ENDIF
				}
				
			LINK TradeRoads = {
				IF value > 0
					FLUX value / 25
					COLOR green
				ENDIF
				}
			LINK Allies = {
				IF value > 0
					FLUX value / 30
					COLOR green
				ENDIF
				}
			}				
			CivilEngineering = {
				TAG Sedentary
				TYPE Technological
				VALUE value [ 0 25 50 >> 1 ]
				VALUE cost [ 0 0 100 ]
				RELATED_INFO = {
					RELATED_LINK Urbanization Mathematics
				}
				// SLEEP = {
					// IF (Urbanization > 40) & (Mathematics > 25) & (ArtisanClass > 30)
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ( ~Urbanization + ~Mathematics + ~ArtisanClass ) > 1
					CONDITION_VALUE Urbanization > 40
					CONDITION_VALUE Mathematics > 40
					CONDITION_VALUE ArtisanClass > 40
				}
				PRICE = {
					$PoliticalPower = 80
					$Wealth = 30
				}
				UPGRADE = {
					$PoliticalPower = 5
					$Wealth = 2
				}
				
				TICK = {
					
				}
				
				LINK Urbanization = {
				WEIGHT [ from ]
				}
				

			}			
			Cavalry = {
				TYPE Technological
				VALUE value [ 0 0 50 >> 3 ]
				RELATED_INFO = { 
					RELATED_UNLOCK MilitaryManpower
					RELATED_LINK MilitaryManpower Population OrganizedNomadism
				}
				// SLEEP = {
					// IF ~HorseDomestication
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT 0
					CONDITION_NODE + HorseDomestication
				}
				PRICE = {
					$PoliticalPower = 35
				}
				UPGRADE = {
					$PoliticalPower = 1
				}
				
				
				TICK = {
					IF ( ~ArmyQuota == 0 | MilitaryManpower < ArmyQuota )
						IF ~OrganizedNomadism
							PROCESS MilitaryManpower.Cavalry_value = MilitaryManpower.Cavalry_value + PerSeconds(value * Population / 7000)
							PROCESS $Wealth = $Wealth - PerSeconds(value * 0.005)
						ELSE
							PROCESS MilitaryManpower.Cavalry_value = MilitaryManpower.Cavalry_value + PerSeconds(value * Population / 12000)
							PROCESS $Wealth = $Wealth - PerSeconds(value * 0.12)
						ENDIF
					ENDIF
					
				}
				LINK OrganizedNomadism = {
				WEIGHT [ from ]
				}	
				LINK Population = {
				WEIGHT [ from ]
				}	
				
				LINK MilitaryManpower = {
				IF value > 0
					FLUX value / 25
					COLOR green
				ENDIF
				}		

			}	
			Missile = {
				TYPE Technological
				VALUE value [ 0 0 50 >> 3 ]
				RELATED_INFO = { 
					RELATED_UNLOCK Crossbow 
					RELATED_LINK MilitaryManpower Population
				}
				// SLEEP = {
					// IF ~Infantry & Hunting > 50
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~Infantry 
					CONDITION_VALUE Hunting > 25
					OR
					CONDITION_NODE + Mill
					ALWAYS
					CONDITION_NODE + Infantry
					CONDITION_NODE - Arquebus
				}
				PRICE = {
					$PoliticalPower = 30
				}
				UPGRADE = {
					$PoliticalPower = 0.35
				}
				
				TICK = {
					IF ( ~ArmyQuota == 0 | MilitaryManpower < ArmyQuota )
						PROCESS MilitaryManpower.Missile_value = MilitaryManpower.Missile_value + PerSeconds(value * Population / 8000 )
					PROCESS $Wealth = $Wealth - PerSeconds(value * 0.04)
					ENDIF
				}
			
				LINK MilitaryManpower = {
				IF value > 0
					FLUX value / 25
					COLOR green
				ENDIF
				}		
				LINK Population = {
				WEIGHT [ from ]
				}	

			}			
			Infantry = {
				TYPE Technological
				VALUE value [ 0 0 50 >> 3 ]
				RELATED_INFO = { 
					RELATED_UNLOCK MilitaryManpower Missile
					RELATED_LINK MilitaryManpower Population
				}
				UNLOCK_CONDITIONS = {
					HINT ~AristocracyClass
					CONDITION_NODE + Urbanization
					OR
					CONDITION_VALUE Population > 75
					OR
					CONDITION_NODE + Cavalry
					ALWAYS
					CONDITION_NODE + AristocracyClass
				}
				PRICE = {
					$PoliticalPower = 45
				}
				UPGRADE = {
					$PoliticalPower = 0.5
				}
				
				TICK = {
					IF ( ~ArmyQuota == 0 | MilitaryManpower < ArmyQuota )
						PROCESS MilitaryManpower.Infantry_value = MilitaryManpower.Infantry_value + PerSeconds(value * Population / 10000)
						PROCESS $Wealth = $Wealth - PerSeconds(value * 0.09)
					ENDIF
				}
				
				LINK MilitaryManpower = {
				IF value > 0
					FLUX value / 25
					COLOR green
				ENDIF
				}	
				LINK Population = {
				WEIGHT [ from ]
				}	
			}
			Auxiliaries = {
				TYPE Technological
				VALUE value [ 0 0 50 >> 3 ]
				RELATED_INFO = { 
				}
				UNLOCK_CONDITIONS = {
					HINT 0
					CONDITION_NODE + BarbarianAtGates
					CONDITION_NODE + Infantry
				}
				PRICE = {
					$Wealth = 80
				}
				UPGRADE = {
					$Wealth = 0.5
				}
				
				TICK = {
					IF ( ~ArmyQuota == 0 | MilitaryManpower < ArmyQuota )
						PROCESS $Wealth = $Wealth - PerSeconds(value * 0.2)
						PROCESS MilitaryManpower.Infantry_value += PerSeconds(value * BarbarianAtGates / 12000)
						PROCESS MilitaryManpower.Missile_value += PerSeconds(value * BarbarianAtGates / 10000)
						IF ~HorseDomestication
							PROCESS MilitaryManpower.Cavalry_value += PerSeconds(value * BarbarianAtGates / 15000)
						ENDIF
					ENDIF
				}
				
				LINK MilitaryManpower = {
					IF value > 0
					FLUX value / 25
					COLOR green
					ENDIF
				}
			}				
			MilitaryShips = {
				TYPE Technological
				VALUE value [ 0 0 100 >> 3 ]
				RELATED_INFO = { 
					RELATED_UNLOCK Navy
					RELATED_LINK Navy Harbours Population
				}
				// SLEEP = {
					// IF ~Harbours
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT 0
					CONDITION_NODE + Harbours
				}
				PRICE = {
					$PoliticalPower = 50
				}
				UPGRADE = {
					$PoliticalPower = 0.5
				}
				
				TICK = {
					IF ~NavyTechnology == 0
						PROCESS Navy = Navy + PerSeconds(value * Harbours / 12000)
					ELSE
						PROCESS Navy = Navy + PerSeconds(value * (NavyTechnology + Harbours ) / 12000)
					ENDIF
					
					IF ( Navy < NavyQuota | ~NavyQuota == 0 )
						PROCESS $Wealth = $Wealth - PerSeconds(value * 0.15)
					ENDIF
					
					
				}
				
				LINK Navy = {
				IF value > 0
					FLUX value / 25
					COLOR green
				ENDIF
				}	
				LINK Harbours = {
				WEIGHT [ from ]
				}	
				
			}		
			Longship = {
				TYPE Technological
				VALUE value [ 0 10 100 >> 1 ]

				UNLOCK_CONDITIONS = {
					HINT ~Navy
					CONDITION_VALUE Temperature < 40
					CONDITION_VALUE Navy >= 50
					OR
					CONDITION_VALUE LootingCampaigns >= 30
					CONDITION_VALUE Navy >= 150
				}
				
				PRICE = {
					$PoliticalPower = 300
				}
				UPGRADE = {
					$PoliticalPower = 3.5
				}
				
				TICK = {
				}
				
				LINK NavyTechnology = {
						 WEIGHT [ to ] 
				}
				
			}
			GreekFire = {
				TYPE Technological
				VALUE value [ 0 10 100 >> 1 ]

				UNLOCK_CONDITIONS = {
					HINT ~Navy
					CONDITION_VALUE Mathematics >= 100
					CONDITION_VALUE Philosophy >= 100
					CONDITION_VALUE Navy >= 200
					OR
					CONDITION_VALUE Alchemy >= 50
					
				}		
				
				PRICE = {
					$PoliticalPower = 300
				}
				UPGRADE = {
					$PoliticalPower = 5
				}
						
				
				TICK = {
				}
				
				LINK NavyTechnology = {
						 WEIGHT [ to ] 
				}
				
			}		
			Mercenaries = {
				TYPE Technological
				VALUE value [ 0 0 50 >> 3 ]
				VALUE outValue [ 0 0 5000 ]
				RELATED_INFO = { 
					RELATED_LINK MilitaryManpower
				}
				// SLEEP = {
					// IF ~MilitaryManpower
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT 0
					CONDITION_NODE + MilitaryManpower
				}
				PRICE = {
					$PoliticalPower = 75
				}
				UPGRADE = {
					$PoliticalPower = 1.5
				}
				
				TICK = {
					PROCESS outValue = value
					IF ~MercenariesReform
						PROCESS outValue = value * ( 1 + ( MercenariesReform / 20 ) ) 
					ENDIF
					IF ( ~ArmyQuota == 0 | MilitaryManpower < ArmyQuota )
						PROCESS MilitaryManpower.Mercenaries_value = MilitaryManpower.Mercenaries_value + PerSeconds(outValue / 90)
						PROCESS $Wealth = $Wealth - PerSeconds(value * 0.2)
					ENDIF
				}
			
				LINK MilitaryManpower = {
				IF value > 0
					FLUX value / 25
					COLOR green
				ENDIF
				}		
			

			}
			Fortifications = {
				TYPE Technological
				VALUE value [ 0 0 100 >> 0.5 ]
				RELATED_INFO = { 
					RELATED_LINK Mathematics StateSize
				}
				// SLEEP = {
					// IF MilitaryManpower > 10 & Mathematics > 30 & ~StateSize
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ( ( ~MilitaryManpower + ~Mathematics + ~StateSize ) > 1 & ~ModernWarfare == 0 )
					CONDITION_NODE + StateSize
					CONDITION_VALUE MilitaryManpower > 10
					CONDITION_VALUE Mathematics > 30
					CONDITION_NODE - ModernWarfare
				}
				PRICE = {
					$PoliticalPower = 75
				}
				UPGRADE = {
					$PoliticalPower = 2
					$Wealth = 5
				}
				
				TICK = {
						PROCESS $Wealth = $Wealth - PerSeconds(value * 0.015)
				}
				
			

			}		
			Expensionism = {
				TAG Sedentary
				TYPE Cultural
				VALUE value [ 0 0 100 >> 3 ]
				RELATED_INFO = { 
					RELATED_LINK MilitaryManpower MilitaryEfficiency StateSize NeighborhoodBellicism Slaves
				}
				// SLEEP = {
					// IF (MilitaryManpower > 50) & ~StateSize
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ( ~MilitaryManpower | ~Navy ) & ~StateSize & ~ModernWarfare == 0 
					CONDITION_VALUE MilitaryManpower > 50
					CONDITION_NODE - Island
					OR
					CONDITION_VALUE MilitaryManpower > 50
					CONDITION_VALUE Navy > 50
					ALWAYS
					CONDITION_NODE + StateSize
					CONDITION_NODE - ModernWarfare
					CONDITION_NODE - Isolationism
				}
				PRICE = {
					$PoliticalPower = 115
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(Expensionism) + 1) * 1.2
				}
				
				TICK = {
				IF ( MilitaryManpower > 40 & (  ~Island == 0 | StateSize < 150 ) )
					PROCESS MilitaryManpower.Infantry_value = MilitaryManpower.Infantry_value - PerSeconds(value / 60 * ( 1.5 - MilitaryEfficiency /100 ) )
					PROCESS MilitaryManpower.Cavalry_value = MilitaryManpower.Cavalry_value - PerSeconds(value / 80 * ( 1.5 - MilitaryEfficiency /100 ) )
					PROCESS MilitaryManpower.Missile_value = MilitaryManpower.Missile_value - PerSeconds(value / 40 * ( 1.5 - MilitaryEfficiency /100 ) )
					PROCESS MilitaryManpower.Mercenaries_value = MilitaryManpower.Mercenaries_value - PerSeconds(value / 80 * ( 1.5 - MilitaryEfficiency /100 ) )
					IF ~BarbarianAtGates | ~InvadersForce
						PROCESS BarbarianAtGates -= PerSeconds(value / 175)
						PROCESS InvadersForce -= PerSeconds(value / 250)
					ELSE
						PROCESS StateSize = StateSize + PerSeconds(value / 175)
					ENDIF
					PROCESS NeighborhoodBellicism = NeighborhoodBellicism - PerSeconds(value * 0.0025)
					PROCESS Slaves = Slaves + PerSeconds(value / 150)
				ENDIF
				IF (MilitaryManpower > 40 & Navy > 40 & ~Island & StateSize >= 150 )
					PROCESS Navy = Navy - PerSeconds(value / 75)
					PROCESS MilitaryManpower.Infantry_value = MilitaryManpower.Infantry_value - PerSeconds(value / 80 * ( 1.5 - MilitaryEfficiency /100 ) )
					PROCESS MilitaryManpower.Cavalry_value = MilitaryManpower.Cavalry_value - PerSeconds(value / 100 * ( 1.5 - MilitaryEfficiency /100 ) )
					PROCESS MilitaryManpower.Missile_value = MilitaryManpower.Missile_value - PerSeconds(value / 60 * ( 1.5 - MilitaryEfficiency /100 ) )
					PROCESS MilitaryManpower.Mercenaries_value = MilitaryManpower.Mercenaries_value - PerSeconds(value / 100 * ( 1.5 - MilitaryEfficiency /100 ) )
					IF ~BarbarianAtGates | ~InvadersForce
						PROCESS BarbarianAtGates -= PerSeconds(value / 175)
						PROCESS InvadersForce -= PerSeconds(value / 250)
					ELSE
						PROCESS StateSize = StateSize + PerSeconds(value / 175)
					ENDIF
					PROCESS NeighborhoodBellicism = NeighborhoodBellicism - PerSeconds(value * 0.0025)
					PROCESS Slaves = Slaves + PerSeconds(value / 150)
				ENDIF
				}
				
				LINK MilitaryManpower = {
				IF (MilitaryManpower > 40 & ~Island == 0) | ( MilitaryManpower > 40 & Navy > 40 & ~Island )
					COLOR red
					FLUX value /25
				ENDIF
				}
				
				LINK Navy = {
				IF MilitaryManpower > 40 & Navy > 40 & ~Island
					COLOR red
					FLUX value /25
				ENDIF
				}
				
				LINK BarbarianAtGates = {
				IF (MilitaryManpower > 40 & ~Island == 0) | ( MilitaryManpower > 40 & Navy > 40 & ~Island )
					COLOR red
					FLUX value /50
				ENDIF
				}
				
				LINK Slaves = {
				IF (MilitaryManpower > 40 & ~Island == 0) | ( MilitaryManpower > 40 & Navy > 40 & ~Island )
					COLOR green
					FLUX value /25
				ENDIF
				}

				LINK StateSize = {
				IF (MilitaryManpower > 40 & ~Island == 0) | ( MilitaryManpower > 40 & Navy > 40 & ~Island )
					COLOR green
					FLUX value /50
				ENDIF
				}
				

				LINK NeighborhoodBellicism = {
				IF (MilitaryManpower > 40 & ~Island == 0) | ( MilitaryManpower > 40 & Navy > 40 & ~Island )
					COLOR red
					FLUX value /50
				ENDIF
				}

			}	
			QualityVsQuantity = {
				TYPE Technological
				VALUE value [ 0 50 100 >> 0.5 middle ]

				RELATED_INFO = { 
					RELATED_LINK MilitaryManpower MilitaryEfficiency
				}
				// SLEEP = {
					// IF ~MilitaryEfficiency
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT 0
					CONDITION_NODE + MilitaryEfficiency
				}
				PRICE = {
					$PoliticalPower = 0
				}
				UPGRADE = {
					$PoliticalPower = 1.5
				}
				
				TICK = {
				}
			
				LINK MilitaryManpower = {
				WEIGHT [ to ]
				}		
				LINK MilitaryEfficiency = {
				WEIGHT [ to ]
				}		
			

			}
			Officers = {
				TYPE Technological
				VALUE value [ 0 1 40 >> 1 ]
				RELATED_INFO = { 
					RELATED_UNLOCK MilitaryDictatorship GenieCorps
					RELATED_LINK MilitaryEfficiency
				}
				// SLEEP = {
					// IF MilitaryManpower > 50 & AristocracyClass > 25 
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~MilitaryManpower & ~AristocracyClass
					CONDITION_VALUE MilitaryManpower > 50
					CONDITION_VALUE AristocracyClass > 25
				}
				PRICE = {
					$PoliticalPower = 100
				}
				UPGRADE = {
					$PoliticalPower = 2.5
				}
				
				TICK = {
					PROCESS $Wealth = $Wealth - PerSeconds(value * value / 2500)
					IF GetCurrentEra() >= 300 & ~RevolutionaryRepublic == 0
						PROCESS AristocracyClass = AristocracyClass + PerSeconds(value / 400)
					ENDIF
					
				}
			
				LINK MilitaryEfficiency = {
				WEIGHT [ to ]
				}		
			
				LINK AristocracyClass = {
					IF (value > 0 & GetCurrentEra() >= 300 & ~RevolutionaryRepublic == 0)
						COLOR green
						FLUX value * 0.05
					ENDIF
				}
				
			}
			Forge = {
				TYPE Technological
				VALUE value [ 0 5 100 >> 1 ]
				RELATED_INFO = { 
					RELATED_UNLOCK FarmingTools
					RELATED_LINK MilitaryTechnology
				}
				// SLEEP = {
					// IF MilitaryManpower > 30 & ArtisanClass > 40 & Mining > 40 & ~MilitaryTechnology
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ( ~MilitaryManpower + ~ArtisanClass + ~Mining + ~MilitaryTechnology ) > 1
					CONDITION_VALUE MilitaryManpower > 25
					OR
					CONDITION_VALUE OverlandTrade > 30
					ALWAYS
					CONDITION_VALUE ArtisanClass > 40
					CONDITION_NODE + MilitaryTechnology
					CONDITION_VALUE Mining > 40
				}
				PRICE = {
					$PoliticalPower = 100
				}
				UPGRADE = {
					$PoliticalPower = 2.5
				}
				
				TICK = {
				PROCESS MilitaryTechnology = MilitaryTechnology + PerSeconds(value / 100)
				}

				LINK MilitaryTechnology = {
					IF value > 0
						COLOR green
						FLUX value / 25
					ENDIF
				}


				TRIGGER_SPAWN Forge = {
					ERA IronAge
					SET Mining.value [ : : 200 ]
					
				}
			}
			Crossbow = {
				TYPE Technological
				VALUE value [ 0 5 100 >> 1 ]
				RELATED_INFO = { 
					RELATED_LINK MilitaryTechnology
				}
				// SLEEP = {
					// IF MilitaryManpower > 70 & Missile > 30 & Mathematics > 60 & ~MilitaryTechnology
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ( ~MilitaryManpower + ~Missile + ~Mathematics + ~MilitaryTechnology ) > 1
					CONDITION_NODE + MilitaryTechnology
					CONDITION_VALUE MilitaryManpower > 70
					CONDITION_VALUE Missile > 30
					CONDITION_VALUE Mathematics > 60
				}
				PRICE = {
					$PoliticalPower = 150
				}
				UPGRADE = {
					$PoliticalPower = 3
				}
				
				TICK = {
				PROCESS MilitaryTechnology = MilitaryTechnology + PerSeconds(value / 100)
				}

				LINK MilitaryTechnology = {
					IF value > 0
						COLOR green
						FLUX value / 25
					ENDIF
				}


				TRIGGER_SPAWN Crossbow = {
					ERA IronAge
				}
			}			
			Money = {
				TYPE Technological
				VALUE value [ 0 80 100 >> 1 ]
				RELATED_INFO = { 
					RELATED_LINK TradeGoods OverlandTrade NavalTrade
				}
				// SLEEP = {
					// IF (OverlandTrade > 20 + NavalTrade > 20) & Mining > 70 & Mathematics > 75
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ( ~OverlandTrade | ~NavalTrade ) & ~Mining & ~Mathematics
					CONDITION_VALUE OverlandTrade > 20
					OR
					CONDITION_VALUE NavalTrade > 20
					ALWAYS
					CONDITION_VALUE Mining > 70
					CONDITION_VALUE Mathematics > 75
				}
				PRICE = {
					$PoliticalPower = 175
				}
				UPGRADE = {
					$PoliticalPower = 5
				}
				
				TICK = {
				}


				TRIGGER_SPAWN Money = {
					IF ~Banks == 0
						RESOURCE_MAX $Wealth = 1000
					ENDIF
				}					
				
				LINK TradeGoods = {
				 WEIGHT [ to ] 
				}
				LINK NavalTrade = {
				 WEIGHT [ to ] 
				}
				LINK OverlandTrade = {
				 WEIGHT [ to ] 
				}

			}	
			GenieCorps = {
				TYPE Technological
				VALUE value [ 0 5 100 >> 1 ]
				RELATED_INFO = { 
					RELATED_LINK MilitaryTechnology
				}
				// SLEEP = {
					// IF Mathematics > 80 & Officers > 20 & ~MilitaryTechnology
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~Officers
					CONDITION_NODE + MilitaryTechnology
					CONDITION_VALUE Mathematics > 80
					CONDITION_VALUE Officers > 20
				}
				PRICE = {
					$PoliticalPower = 100
				}
				UPGRADE = {
					$PoliticalPower = 2.5
				}
				
				TICK = {
				PROCESS MilitaryTechnology = MilitaryTechnology + PerSeconds(value / 100)
				}

				LINK MilitaryTechnology = {
					IF value > 0
						COLOR green
						FLUX value / 25
					ENDIF
				}

			}
			BarbariansAdvancement = {
				TAG BarbarianTech
				TYPE Technological
				VALUE value [ 0 5 100 >> 1 ]
				RELATED_INFO = { 
					RELATED_LINK MilitaryTechnology
				}
				UNLOCK_CONDITIONS = {
					HINT ~BarbarianThreat | ~Forge
					CONDITION_VALUE BarbarianThreat >= 100
					OR
					CONDITION_NODE + BarbarianAtGates
					OR
					CONDITION_NODE + BarbarianMonarchy
					OR
					CONDITION_ERA >= FeudalAge
					ALWAYS
					CONDITION_NODE + MilitaryTechnology
				}
				PRICE = {
					$PoliticalPower = 195
				}
				UPGRADE = {
					$PoliticalPower = 3
				}
				
				TICK = {
				PROCESS MilitaryTechnology = MilitaryTechnology + PerSeconds(value / 100)
				}

				LINK MilitaryTechnology = {
					IF value > 0
						COLOR green
						FLUX value / 25
					ENDIF
				}

			}
			Stirrups = {
				TAG BarbarianTech
				TYPE Technological
				VALUE value [ 0 5 100 >> 1 ]
				RELATED_INFO = { 
					RELATED_LINK MilitaryTechnology
				}
				UNLOCK_CONDITIONS = {
					HINT ~BarbarianAtGates | ~OrganizedNomadism
					CONDITION_NODE + BarbarianAtGates
					OR
					CONDITION_NODE + OrganizedNomadism
					OR
					CONDITION_ERA >= FeudalAge
					ALWAYS
					CONDITION_NODE + MilitaryTechnology
					CONDITION_VALUE Cavalry >= 30
				}
				PRICE = {
					$PoliticalPower = 195
				}
				UPGRADE = {
					$PoliticalPower = 3
				}
				
				TICK = {
				PROCESS MilitaryTechnology = MilitaryTechnology + PerSeconds(value / 100)
				}

				LINK MilitaryTechnology = {
					IF value > 0
						COLOR green
						FLUX value / 25
					ENDIF
				}

			}
			Cataphracts = {
				TAG BarbarianTech
				TYPE Technological
				VALUE value [ 0 5 100 >> 1 ]
				RELATED_INFO = { 
					RELATED_LINK MilitaryTechnology
				}
				UNLOCK_CONDITIONS = {
					HINT ~Cavalry
					CONDITION_NODE + MilitaryTechnology
					CONDITION_VALUE Cavalry >= 30
					CONDITION_VALUE Forge >= 100
				}
				PRICE = {
					$PoliticalPower = 195
				}
				UPGRADE = {
					$PoliticalPower = 3
				}
				
				TICK = {
				PROCESS MilitaryTechnology = MilitaryTechnology + PerSeconds(value / 100)
				}

				LINK MilitaryTechnology = {
					IF value > 0
						COLOR green
						FLUX value / 25
					ENDIF
				}

			}			
			LootingCampaigns = {
				TYPE Cultural
				VALUE value [ 0 0 100 >> 1 ]
				RELATED_INFO = { 
					RELATED_LINK MilitaryManpower MilitaryEfficiency OverlandTrade NavalTrade Food NeighborhoodBellicism TradeRoads
				}
				// SLEEP = {
					// IF (MilitaryManpower > 30 + ( ~OrganizedNomadism & MilitaryManpower ) )
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~MilitaryManpower & ~ModernWarfare == 0 
					CONDITION_NODE + OrganizedNomadism
					CONDITION_NODE + MilitaryManpower
					OR
					CONDITION_VALUE MilitaryManpower > 30
					ALWAYS
					CONDITION_NODE - ModernWarfare
				}
				PRICE = {
					$PoliticalPower = 60
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(LootingCampaigns) + 1) * 1
				}
				
				TICK = {
				IF MilitaryManpower > 20
					PROCESS MilitaryManpower.Infantry_value = MilitaryManpower.Infantry_value - PerSeconds(value / 100 * (1.5 - MilitaryEfficiency /100 ) )
					PROCESS MilitaryManpower.Cavalry_value = MilitaryManpower.Cavalry_value - PerSeconds(value / 75 * (1.5 - MilitaryEfficiency /100 ) )
					PROCESS MilitaryManpower.Missile_value = MilitaryManpower.Missile_value - PerSeconds(value / 200 * (1.5 - MilitaryEfficiency /100 ) )
					PROCESS MilitaryManpower.Mercenaries_value = MilitaryManpower.Mercenaries_value - PerSeconds(value / 75 * ( 1.5 - MilitaryEfficiency /100 ) )
					PROCESS OverlandTrade = OverlandTrade - PerSeconds(value / 25)
					PROCESS NavalTrade = NavalTrade - PerSeconds(value / 25)
					PROCESS NeighborhoodBellicism = NeighborhoodBellicism + PerSeconds(value / 55)
					PROCESS Food = Food + PerSeconds(value / 10)
					PROCESS TradeRoads = TradeRoads - PerSeconds(value / 10)
					PROCESS $Wealth = $Wealth + PerSeconds(value/13)
				ENDIF
				
				}
				

				LINK MilitaryManpower = {
				IF MilitaryManpower > 20
					COLOR red
					FLUX value /25
				ENDIF
				}
				LINK OverlandTrade = {
				IF MilitaryManpower > 20
					COLOR red
					FLUX value /12
				ENDIF
				}
				LINK NavalTrade = {
				IF MilitaryManpower > 20
					COLOR red
					FLUX value /12
				ENDIF
				}
				LINK NavalTrade = {
				IF TradeRoads > 20
					COLOR red
					FLUX value /12
				ENDIF
				}
				LINK NeighborhoodBellicism = {
				IF MilitaryManpower > 20
					COLOR green
					FLUX value /25
				ENDIF
				}
				LINK Food = {
				IF MilitaryManpower > 20
					COLOR green
					FLUX value /25
				ENDIF
				}
	

			}	
			LongRangeRaid = {
				TYPE Cultural
				VALUE value [ 0 0 100 >> 1 ]
				RELATED_INFO = { 
					RELATED_LINK MilitaryManpower MilitaryEfficiency OverlandTrade NavalTrade Food NeighborhoodBellicism
				}
				// SLEEP = {
					// IF (MilitaryManpower > 30 + ( ~OrganizedNomadism & MilitaryManpower ) )
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~Longship & Coastline > 30 & ~ModernWarfare == 0 
					CONDITION_NODE + Longship
					CONDITION_VALUE MilitaryManpower > 30
					CONDITION_VALUE Navy > 75
					CONDITION_VALUE Coastline > 30
					CONDITION_NODE - ModernWarfare
				}
				PRICE = {
					$PoliticalPower = 150
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(LongRangeRaid) + 1) * 3
				}
				
				TICK = {
				IF MilitaryManpower > 20 & Navy > 50
					PROCESS Navy = Navy - PerSeconds(value / 50)
					PROCESS MilitaryManpower.Infantry_value = MilitaryManpower.Infantry_value - PerSeconds(value / 80 * (1.5 - MilitaryEfficiency /100 ) )
					PROCESS MilitaryManpower.Cavalry_value = MilitaryManpower.Cavalry_value - PerSeconds(value / 200 * (1.5 - MilitaryEfficiency /100 ) )
					PROCESS MilitaryManpower.Missile_value = MilitaryManpower.Missile_value - PerSeconds(value / 175 * (1.5 - MilitaryEfficiency /100 ) )
					PROCESS MilitaryManpower.Mercenaries_value = MilitaryManpower.Mercenaries_value - PerSeconds(value / 200 * ( 1.5 - MilitaryEfficiency /100 ) )
					PROCESS $Wealth = $Wealth + PerSeconds(value/5)
					PROCESS TradeGoods = TradeGoods + PerSeconds(value/20)
				ENDIF
				
				}
				

				LINK MilitaryManpower = {
				IF MilitaryManpower > 20
					COLOR red
					FLUX value /25
				ENDIF
				}
				

				LINK Navy = {
				IF Navy > 20
					COLOR red
					FLUX value /12
				ENDIF
				}
				
				
				LINK TradeGoods = {
				IF Navy > 20 & MilitaryManpower > 20
					COLOR red
					FLUX value / 20
				ENDIF
				}
	

			}
			Bureaucracy = {
				TAG Sedentary
				TYPE Technological
				VALUE value [ 0 5 200 >> 1 ]
				RELATED_INFO = {
					RELATED_UNLOCK PopulationTax Legislation
					RELATED_LINK Stability
					RELATED_LOCK Satrapy
				}
				// SLEEP = {
					// IF ( ~CelesteMandate + ~Empire ) & ~Satrapy == 0
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT 0
					CONDITION_NODE + CelesteMandate
					OR
					CONDITION_NODE + Empire
					OR
					CONDITION_VALUE Tribunal >= 50
					ALWAYS
					CONDITION_NODE - Satrapy
				}
				PRICE = {
					$PoliticalPower = 175
				}
				UPGRADE = {
					$PoliticalPower = 2.5
				}
				TICK = {
						PROCESS $PoliticalPower = $PoliticalPower + PerSeconds(Bureaucracy / 500)
					
				}
				LINK Stability = {
						 WEIGHT [ to ] 
				}
			}	
			Satrapy = {
				TAG Sedentary
				TYPE Technological
				VALUE value [ 0 5 500 >> 1 ]
				RELATED_INFO = {
					RELATED_UNLOCK Legislation
					RELATED_LINK Stability
					RELATED_LOCK Bureaucracy
				}
				// SLEEP = {
					// IF ~Empire & ~Bureaucracy == 0
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT 0
					CONDITION_NODE + Empire
					CONDITION_NODE - Bureaucracy
					CONDITION_NODE - Feudality
				}
				PRICE = {
					$PoliticalPower = 50
				}
				UPGRADE = {
					$PoliticalPower = 1.75
				}
				TICK = {
					
				}
				LINK Stability = {
						 WEIGHT [ to ] 
				}
				LINK NationalCohesion = {
						 WEIGHT [ to ] 
				}
			}	
			Foedus = {
				TAG Sedentary
				TYPE Technological
				VALUE value [ 0 0 100 >> 1 ]
				
				UNLOCK_CONDITIONS = {
					HINT 0
					CONDITION_NODE + BarbarianAtGates
				}
				PRICE = {
					$Wealth = 40
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(Foedus) + 1) * 0.1
					$Wealth = (LinkCount(Foedus) + 1) * 2.2
				}
				TICK = {
					PROCESS BarbarianAtGates -= PerSeconds ( value / 12 )
					PROCESS StateSize -= PerSeconds ( value / 17 )
					PROCESS $Wealth -= PerSeconds(value / 20 )
					
				}

				LINK NationalCohesion = {
				WEIGHT [ to ]
				}
				
				LINK BarbarianAtGates = {
					COLOR red
					FLUX value / 25
				}
				LINK StateSize = {
					COLOR red
					FLUX value / 40
				}
			}				
			PopulationTax = {
				TAG Sedentary
				TYPE Cultural
				VALUE value [ 0 5 20 >> 1 ]
				RELATED_INFO = {
					RELATED_LINK Population
				}
				// SLEEP = {
					// IF Population > 50 & Bureaucracy
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~Bureaucracy | ~Legislation
					CONDITION_NODE + Bureaucracy
					OR
					CONDITION_NODE + Legislation
					ALWAYS
					CONDITION_VALUE Population > 50
				}
				PRICE = {
					$PoliticalPower = 60
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(PopulationTax) + 1) * 2.2
				}
				
				TICK = {
				PROCESS $Wealth = $Wealth + PerSeconds(value / 100 * Population ) / 6)
				PROCESS NavalTrade = NavalTrade - PerSeconds( NavalTrade * NavalTrade / 2500  * value / 40 * 0.9 ? 1.1 )
				PROCESS OverlandTrade = OverlandTrade - PerSeconds( OverlandTrade * OverlandTrade / 2500  * value / 40 * 0.9 ? 1.1 )
				}
				
				LINK Population = {
				WEIGHT [ from ] 
				}
				LINK OverlandTrade = {
					COLOR red
					FLUX value / 25
				}
				LINK NavalTrade = {
					COLOR red
					FLUX value / 25
				}

			}	
			FarmingTools = {
				TYPE Technological
				VALUE value [ 0 20 100 >> 1 ]
				RELATED_INFO = {
					RELATED_LINK Agriculture
				}
				// SLEEP = {
					// IF Forge > 50 & Agriculture
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~Forge
					CONDITION_NODE + Agriculture
					CONDITION_VALUE Forge > 50
				}
				PRICE = {
					$PoliticalPower = 100
				}
				UPGRADE = {
					$PoliticalPower = 5
				}
				
				TICK = {
				}
				
				LINK Agriculture = {
				WEIGHT [ to ] 
				}

			}		
			TradeTax = {
				TYPE Cultural
				VALUE value [ 0 5 60 >> 1 ]
				RELATED_INFO = {
					RELATED_LINK NavalTrade OverlandTrade
				}
				// SLEEP = {
					// IF ~OverlandTrade
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT 0
					CONDITION_NODE + OverlandTrade
				}
				PRICE = {
					$PoliticalPower = 10
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(TradeTax) + 1) * 2.2
				}
				
				TICK = {
					PROCESS $Wealth = $Wealth + PerSeconds( NavalTrade * 0.4 * TradeTax / 42 )
					PROCESS $Wealth = $Wealth + PerSeconds( OverlandTrade.output * 0.23  * TradeTax / 42 )
					PROCESS NavalTrade = NavalTrade - PerSeconds( NavalTrade * NavalTrade / 800  * value / 40 * 0.9 ? 1.1 )
					PROCESS OverlandTrade = OverlandTrade - PerSeconds( OverlandTrade * OverlandTrade / 800  * value / 40 * 0.9 ? 1.1 )
				}

				LINK OverlandTrade = {
					COLOR red
					FLUX value / 25
				}
				LINK NavalTrade = {
					COLOR red
					FLUX value / 25
				}

			}	
			Music = {
				TYPE Cultural
				VALUE value [ 0 10 100 >> 1 ]

				RELATED_INFO = {
					RELATED_UNLOCK Culture
					RELATED_LINK Culture
				}
				
				// SLEEP = {
					// IF ( Population > 8 + ~Culture ) & ~NodeTuto == 0
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~Culture
					CONDITION_NODE + Culture
					OR
					CONDITION_VALUE Population > 8
				}
				
				TICK = {
					PROCESS Culture = Culture + PerSeconds ( value * 0.008 )
				}
				PRICE = {
					$PoliticalPower = 20
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(Music) + 1) * 1
				}
				LINK Culture = {
						COLOR green
						FLUX value / 25
				}
			}		
			Litterature = {
				TYPE Cultural
				VALUE value [ 0 10 100 >> 1 ]

				RELATED_INFO = {
					RELATED_LINK Culture
				}
				
				// SLEEP = {
					// IF ~Culture & Philosophy >= 30 & ~Writing
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~Culture & ~Writing
					CONDITION_NODE + Culture
					CONDITION_NODE + Writing
					CONDITION_VALUE Philosophy >= 30
				}
				
				TICK = {
					PROCESS Culture = Culture + PerSeconds ( value * 0.012 )
				}
				PRICE = {
					$PoliticalPower = 80
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(Litterature) + 1) * 1
				}
				LINK Culture = {
						COLOR green
						FLUX value / 25
				}
			}		
			LinguaFranca = {
				TYPE Cultural
				VALUE value [ 0 10 100 >> 1 ]

				RELATED_INFO = {
					RELATED_LINK NationalCohesion
				}
				
				// SLEEP = {
					// IF ~NationalCohesion & ( NavalTrade > 35 + OverlandTrade > 35)
						// SPAWN
					// ENDIF
				// }
				UNLOCK_CONDITIONS = {
					HINT ~NationalCohesion
					CONDITION_VALUE NavalTrade > 35
					OR
					CONDITION_VALUE OverlandTrade > 35
					ALWAYS
					CONDITION_NODE + NationalCohesion
				}
				
				TICK = {
						PROCESS Nationalism = Nationalism + PerSeconds(value / 1000)
				}
				PRICE = {
					$PoliticalPower = 150
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(LinguaFranca) + 1) * 3
				}
				
				LINK Nationalism = {
						COLOR green
						FLUX value / 25
				}
				
				LINK NationalCohesion = {
						WEIGHT [ to ] 
				}
				
				LINK NavalTrade = {
						WEIGHT [ to ] 
				}
				
				LINK OverlandTrade = {
						WEIGHT [ to ] 
				}
			}
			Feudality = {
				TYPE Cultural
				VALUE value [ 0 50 100 >> 1 ]
				
				RELATED_INFO = {}

				UNLOCK_CONDITIONS = {
					HINT ~BarbarianAtGates | ~BarbariansAdvancement
					CONDITION_NODE + BarbariansAdvancement
				}
				PRICE = {
					$Wealth = 300
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(Feudality) + 1) * 3
				}
				TICK = {
						SET Banners.value [ : : Feudality.value ]
						SET Infantry.value [ : : Max (50 - Feudality.value / 2, 0) ]
						SET Cavalry.value [ : : Max (50 - Feudality.value, 0) ]
						SET Missile.value [ : : Max (50 - Feudality.value / 2.5, 0) ]
						PROCESS VassalPower = VassalPower + PerSeconds(value / 700)
						PROCESS AristocracyClass = AristocracyClass + PerSeconds(value / 250)
				}
				LINK VassalPower = {
						COLOR green
						FLUX value / 25
				}
				
				LINK AristocracyClass = {
						COLOR green
						FLUX value / 10
				}
				
				LINK Banners = {
						 WEIGHT [ max ] Feudality
				}
				
				LINK Infantry = {
						 WEIGHT [ max ] Max (50 - Feudality.value / 2, 0)
				}
				LINK Cavalry  = {
						 WEIGHT [ max ] Max (50 - Feudality.value, 0)
				}
				LINK Missile = {
						 WEIGHT [ max ] Max (50 - Feudality.value / 2.5, 0)
				}
				
				TRIGGER_LEAVE Feudality = {
						SET Banners.value [ : : 0 ]
						SET Infantry.value [ : : Max (50 - 0, 0) ]
						SET Cavalry.value [ : : Max (50 - 0, 0) ]
						SET Missile.value [ : : Max (50 - 0, 0) ]
				}	
	
				TRIGGER_SPAWN Feudality = {
				ERA FeudalAge
				REMOVE Bureaucracy
				REMOVE Satrapy
				IF ~MilitaryDictatorship
						REMOVE MilitaryDictatorship
						SPAWN Monarchy
				ENDIF
				}				
				
			}
			Banners = {
				TYPE Technological
				VALUE value [ 0 20 50 >> 3 ]
				VALUE multiplier [ 0 0 100 >> 1 ]
				UNLOCK_CONDITIONS = {
					HINT 0
					CONDITION_NODE + Feudality
				}
				PRICE = {
					$PoliticalPower = 100
				}
				UPGRADE = {
					$PoliticalPower = 5
				}
				
				TICK = {
					IF ~Castles
						PROCESS Banners.multiplier = 1 + 0.2 + ( Castles / 100 )
					ELSE
						PROCESS Banners.multiplier = 1 + 0.3
					ENDIF
					IF ( ~ArmyQuota == 0 | MilitaryManpower < ArmyQuota )
						PROCESS MilitaryManpower.Infantry_value += PerSeconds(value * multiplier / 3000)
						PROCESS MilitaryManpower.Missile_value += PerSeconds(value * multiplier / 4000)
					ENDIF
					IF  ( ~HorseDomestication & ( ~ArmyQuota == 0 | MilitaryManpower < ArmyQuota ) )
						PROCESS MilitaryManpower.Cavalry_value = MilitaryManpower.Cavalry_value + PerSeconds(value * multiplier / 2500)
					ENDIF
					
				}
				
				LINK MilitaryManpower = {
				IF value > 0
					FLUX value / 25
					COLOR green
				ENDIF
				}		

			}
			ArmyQuota = {
				TYPE Cultural
				VALUE value [ 25 100 1000 >> 1 ]
				
				RELATED_INFO = {}

				UNLOCK_CONDITIONS = {
					HINT ~MilitaryManpower
					CONDITION_VALUE MilitaryManpower > 75
				}
				PRICE = {
					$PoliticalPower = 50
				}
				UPGRADE = {
					$PoliticalPower = 0.5
				}
				TICK = {
						SET MilitaryManpower.value [ : : ArmyQuota.value ]
				}
				
				LINK MilitaryManpower = {
						 WEIGHT [ max ] ArmyQuota
				}
				
				LINK Infantry = {
						WEIGHT [ to ] 
				}
				LINK Cavalry = {
						WEIGHT [ to ] 
				}
				LINK Missile = {
						WEIGHT [ to ] 
				}
				LINK Mercenaries = {
						WEIGHT [ to ] 
				}
				LINK Auxiliaries = {
						WEIGHT [ to ] 
				}
				LINK Banners = {
						WEIGHT [ to ] 
				}
				
				TRIGGER_LEAVE ArmyQuota = {
						SET MilitaryManpower.value [ : : 1000 ]
				}		
				
			}
			NavyQuota = {
				TYPE Cultural
				VALUE value [ 25 100 1000 >> 1 ]
				
				RELATED_INFO = {}

				UNLOCK_CONDITIONS = {
					HINT ~Navy
					CONDITION_VALUE Navy > 75
				}
				PRICE = {
					$PoliticalPower = 50
				}
				UPGRADE = {
					$PoliticalPower = 0.5
				}
				TICK = {
						SET Navy.value [ : : NavyQuota.value ]
				}
				
				LINK Navy = {
						 WEIGHT [ max ] NavyQuota
				}
				
				TRIGGER_LEAVE NavyQuota = {
						SET Navy.value [ : : 1000 ]
				}		
				
			}	
			University = {
				TYPE Technological
				VALUE value [ 0 0 100 >> 1 ]
				UNLOCK_CONDITIONS = {
					HINT ~Education
					CONDITION_VALUE Urbanization >= 50
					CONDITION_VALUE Writing >= 30
					CONDITION_NODE + Education
					CONDITION_ERA >= FeudalAge
				}
				PRICE = {
					$PoliticalPower = 100
					$Wealth = 100
				}
				UPGRADE = {
					$PoliticalPower = 5
					$Wealth = 5
				}
				
				TICK = {
						SET Litterature.value [ : : 100 + University.value ]
						SET Philosophy.value [ : : 100 + University.value ]
						SET Mathematics.value [ : : 100 + University.value ]
						SET Education.value [ : : 50 + University.value / 2 ]
				}
				
				LINK Litterature = {
						 WEIGHT [ max ] 100 + University
				}
				
				LINK Philosophy = {
						 WEIGHT [ max ] 100 + University
				}
				
				LINK Mathematics = {
						 WEIGHT [ max ] 100 + University
				}
				
				
				LINK Education = {
						 WEIGHT [ max ] 50 + University.value / 2
				}
				

			}	
			FarmersTax = {
				TAG Sedentary
				TYPE Cultural
				VALUE value [ 0 5 30 >> 1 ]
				RELATED_INFO = {
					RELATED_LINK Population
				}
				UNLOCK_CONDITIONS = {
					HINT ~Feudality | ~Mill
					CONDITION_NODE + Mill
					CONDITION_VALUE Agriculture > 70
				}
				PRICE = {
					$PoliticalPower = 100
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(FarmersTax) + 1) * 5
				}
				
				TICK = {
				PROCESS $Wealth = $Wealth + PerSeconds(value / 450 * PeasantryClass ) / 5)
				}
				
				LINK PeasantryClass = {
				WEIGHT [ from ] 
				}

			}
			Mill = {
				TYPE Technological
				VALUE value [ 0 5 100 >> 1 ]

				UNLOCK_CONDITIONS = {
					HINT ~Feudality | ~FarmingTools
					CONDITION_VALUE FarmingTools >= 100
					CONDITION_VALUE Agriculture >= 100
					CONDITION_ERA >= FeudalAge
				}
				PRICE = {
					$PoliticalPower = 75
					$Wealth = 300
				}
				UPGRADE = {
					$PoliticalPower = 1
					$Wealth = 12
				}
				TICK = {
				}
				
				TRIGGER_SPAWN Mill = {
				REMOVE Foraging
				REMOVE Hunting
				}
				
				LINK Agriculture = {
				WEIGHT [ to ] 
				}

			}		
			Nobility = {
				TYPE Cultural
				VALUE value [ 0 25 100 >> 1 ]
				UNLOCK_CONDITIONS = {
					HINT ~Feudality | GetCurrentEra() == GetEra(FeudalAge)
					CONDITION_NODE + Feudality
					OR
					CONDITION_ERA >= DiscoveryAge
					ALWAYS
					CONDITION_VALUE AristocracyClass > 50
				}
				PRICE = {
					$PoliticalPower = 150
					$Wealth = 150
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(Nobility) + 1) * 6
				}
				TICK = {
						PROCESS $PoliticalPower = $PoliticalPower + PerSeconds(value / 55 * AristocracyClass / 100 )
						PROCESS $Wealth = $Wealth - PerSeconds(value / 22 * AristocracyClass / 75 )
						PROCESS VassalPower =  VassalPower - PerSeconds(value / 1650 )
						PROCESS AristocracyClass = AristocracyClass + PerSeconds(value / 800)
						SET AristocracyClass.value [ : :  30 + Nobility * 2 ]
						PROCESS Reactionnarism = Reactionnarism + PerSeconds(value / 600)
				}
				
				
				LINK AristocracyClass = {
						 WEIGHT [ max ] 30 + Nobility * 2
				}
				
				LINK VassalPower = {
				IF value > 0
					FLUX value / 25
					COLOR red
				ENDIF
				}

				LINK AristocracyClass = {
					IF value > 0
						COLOR green
						FLUX value / 20
					ENDIF
				}		
				LINK Reactionnarism = {
					IF value > 0
						COLOR green
						FLUX value / 20
					ENDIF
				}			
			}	
			Castles = {
				TYPE Technological
				VALUE value [ 0 0 100 >> 1 ]

				UNLOCK_CONDITIONS = {
					HINT ~Feudality | ~Fortifications
					CONDITION_ERA >= FeudalAge
					CONDITION_VALUE AristocracyClass > 30
					CONDITION_VALUE Fortifications > 50
				}
				PRICE = {
					$PoliticalPower = 50
					$Wealth = 500
				}
				UPGRADE = {
					$PoliticalPower = 2
					$Wealth = 15
				}
				TICK = {
						PROCESS AristocracyClass = AristocracyClass + PerSeconds(value / 700)
				}
				
				LINK AristocracyClass = {
					IF value > 0
						COLOR green
						FLUX value / 20
					ENDIF
				}
				
				LINK Banners = {
				WEIGHT [ to ] 
				}

			}	
			MedievalArmors = {
				TYPE Technological
				VALUE value [ 0 5 100 >> 1 ]
				RELATED_INFO = { 
					RELATED_LINK MilitaryTechnology
				}
				UNLOCK_CONDITIONS = {
					HINT ~Feudality
					CONDITION_VALUE Castles >= 30
					CONDITION_VALUE Banners >= 20
					OR
					CONDITION_ERA >= DiscoveryAge
					ALWAYS
					CONDITION_NODE + MilitaryTechnology
				}
				PRICE = {
					$PoliticalPower = 50
					$Wealth = 500
				}
				UPGRADE = {
					$PoliticalPower = 3
					$Wealth = 8
				}
				
				TICK = {
				PROCESS MilitaryTechnology = MilitaryTechnology + PerSeconds(value / 100)
				}

				LINK MilitaryTechnology = {
					IF value > 0
						COLOR green
						FLUX value / 25
					ENDIF
				}

			}
			SiegeWeapons = {
				TYPE Technological
				VALUE value [ 0 5 100 >> 1 ]
				RELATED_INFO = { 
					RELATED_LINK MilitaryTechnology
				}
				UNLOCK_CONDITIONS = {
					HINT ~Feudality
					CONDITION_NODE + MilitaryTechnology
					CONDITION_VALUE Mathematics >= 120
					CONDITION_VALUE GenieCorps >= 100
					CONDITION_VALUE Castles >= 10
				}
				PRICE = {
					$PoliticalPower = 100
					$Wealth = 300
				}
				UPGRADE = {
					$PoliticalPower = 5
					$Wealth = 5
				}
				
				TICK = {
				PROCESS MilitaryTechnology = MilitaryTechnology + PerSeconds(value / 100)
				}

				LINK MilitaryTechnology = {
					IF value > 0
						COLOR green
						FLUX value / 25
					ENDIF
				}

			}
			Tribunal = {
				SOUND_WINDOW "Main/SFX/ToomuchPP.wav"
				TYPE Cultural
				VALUE value [ 0 0 100 >> 1 ]
				UNLOCK_CONDITIONS = {
					HINT ~Legislation | GetCurrentEra() == GetEra(FeudalAge)
					CONDITION_ERA >= FeudalAge
					OR
					CONDITION_VALUE Republic >= 150
					CONDITION_VALUE Urbanization >= 50
					ALWAYS
					CONDITION_VALUE Culture >= 25
					CONDITION_VALUE Philosophy >= 100
					
				}
				PRICE = {
					$PoliticalPower = 400
					$Wealth = 200
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(Tribunal) + 1) * 5
					$Wealth = (LinkCount(Tribunal) + 1) * 2
				}
				TICK = {
						PROCESS $PoliticalPower = $PoliticalPower + PerSeconds(Tribunal / 100)
						PROCESS Stability = Stability + PerSeconds(value/12000)
				}
				
				LINK Stability = {
				IF value > 0
					FLUX value / 40
					COLOR green
				ENDIF
				}	
			}
			NationState = {
				TYPE Cultural
				VALUE value [ 0 0 50 >> 1 ]
				UNLOCK_CONDITIONS = {
					HINT ~NationalCohesion | GetCurrentEra() == GetEra(FeudalAge)
					CONDITION_VALUE NationalCohesion >= 75
					CONDITION_VALUE Population >= 75
					CONDITION_VALUE StateSize >= 70
					CONDITION_VALUE Philosophy >= 200
					CONDITION_VALUE Tribunal >= 75
				}
				PRICE = {
					$PoliticalPower = 495
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(NationState) + 1) * 10
				}
				TICK = {
						PROCESS $PoliticalPower = $PoliticalPower + PerSeconds(value / 80)
						PROCESS VassalPower =  VassalPower - PerSeconds(value / 3000 )
						PROCESS Nationalism +=  PerSeconds(value / 800 )
						SET NationalCohesion.value [ : : 100 + NationState.value ]
				}
				
				LINK NationalCohesion = {
						 WEIGHT [ max ] 100 + NationState
				}
				
				LINK VassalPower = {
				IF value > 0
					FLUX value / 40
					COLOR red
				ENDIF
				}	
				
				LINK Nationalism = {
				IF value > 0
					FLUX value / 40
					COLOR green
				ENDIF
				}	
			}
			Medecine = {
				TYPE Technological
				VALUE value [ 0 1 100 >> 1 ]
				UNLOCK_CONDITIONS = {
					HINT ~University | ~CivilEngineering
					CONDITION_VALUE CivilEngineering >= 20
					CONDITION_VALUE University >= 50
					CONDITION_VALUE Philosophy >= 100
				}
				PRICE = {
					$PoliticalPower = 400
				}
				UPGRADE = {
					$PoliticalPower = 10
				}
				TICK = {
						PROCESS ScienceKnowledge =  ScienceKnowledge + PerSeconds(value / 10000 )
				}
				LINK ScienceKnowledge = {
				IF value > 0
					FLUX value / 50
					COLOR green
				ENDIF
				}	
			}
			Alchemy = {
				TYPE Technological
				VALUE value [ 0 0 100 >> 1 ]
				UNLOCK_CONDITIONS = {
					HINT ~University & ~ScienceKnowledge == 0
					CONDITION_VALUE Medecine >= 60
					CONDITION_VALUE University >= 70
					CONDITION_VALUE Mathematics >= 150
					CONDITION_VALUE Philosophy >= 150
					CONDITION_NODE - ScienceKnowledge
				}
				PRICE = {
					$PoliticalPower = 495
				}
				UPGRADE = {
					$PoliticalPower = 12
				}
				TICK = {
						PROCESS ScienceKnowledge =  ScienceKnowledge + PerSeconds(value / 8000 )
				}
				LINK ScienceKnowledge = {
				IF value > 0
					FLUX value / 50
					COLOR green
				ENDIF
				}	

			}	
			Gunpowder = {
				TYPE Technological
				VALUE value [ 0 0 100 >> 1 ]
				UNLOCK_CONDITIONS = {
					HINT ~ScienceKnowledge | SiegeWeapons
					CONDITION_VALUE SiegeWeapons >= 100
					OR
					CONDITION_VALUE Alchemy >= 100
					ALWAYS
					CONDITION_VALUE ScienceKnowledge > 50
				}
				PRICE = {
					$PoliticalPower = 50
				}
				UPGRADE = {
					$PoliticalPower = 3
				}
				TICK = {
				SET SiegeWeapons.value [ : : Gunpowder.value * 1.5 + 100 ]
				}
				
				LINK SiegeWeapons = {
						WEIGHT [ max ] 100 + Gunpowder.value * 1.5
				}
				
			

			}
			TradeFair = {
				TYPE Cultural
				VALUE value [ 0 5 100 >> 1 ]
				VALUE output [ 0 0 100 ]

				UNLOCK_CONDITIONS = {
					HINT ~OverlandTrade
					CONDITION_ERA >= FeudalAge
					CONDITION_VALUE OverlandTrade >= 50
					CONDITION_VALUE Mathematics >= 120
					CONDITION_VALUE Urbanization >= 50
				}
				PRICE = {
					$PoliticalPower = 195
					$Wealth = 400
				}
				UPGRADE = {
				
					$PoliticalPower = (LinkCount(TradeFair) + 1) * 1
					$Wealth = (LinkCount(TradeFair) + 1) * 5
				}
				TICK = {
					PROCESS output = value * 100 / 1400
					PROCESS ArtisanClass = ArtisanClass + PerSeconds(output)
					PROCESS OverlandTrade = OverlandTrade + PerSeconds(output * 0.5)
					IF ~StockExchange == 0
						SET TradeGoods.value [ : : 1000 + TradeFair.value * 5  ]
					ENDIF
					PROCESS $Wealth = $Wealth + PerSeconds(output * 0.3 )
				}
				LINK ArtisanClass = {
					IF (output > 0)
						COLOR green
						FLUX output / 5
					ENDIF
				}
				LINK TradeGoods = {
					IF (output > 0)
						COLOR green
						FLUX output / 5
					ENDIF
				}
				
				
				LINK TradeGoods = {
					IF ~StockExchange == 0
						WEIGHT [ max ] 1000 + TradeFair * 5
					ENDIF
				}

			}
			Guilds = {
				TYPE Cultural
				VALUE value [ 0 5 100 >> 1 ]

				UNLOCK_CONDITIONS = {
					HINT ~TradeFair
					CONDITION_VALUE TradeFair >= 40
					CONDITION_VALUE Entreprises >= 40
					CONDITION_VALUE Urbanization >= 75
				}
				PRICE = {
					$PoliticalPower = 300
					$Wealth = 50
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(Guilds) + 1) * 8
				}
				TICK = {
						PROCESS $PoliticalPower = $PoliticalPower - PerSeconds(value / 70)
						PROCESS $Wealth = $Wealth + PerSeconds(value / 100)
				}
				
				LINK Entreprises = {
				WEIGHT [ to ] 
				}

			}
			Banks = {
				TYPE Technological
				VALUE value [ 0 0 100 >> 1 ]
				VALUE weath_max [ -5000 0 100000 >> 1 ]
				VALUE weath_min [ -5000 0 100000 >> 1 ]
				UNLOCK_CONDITIONS = {
					HINT ~Money | ~Guilds
					CONDITION_VALUE Guilds >= 40
					CONDITION_VALUE Money >= 80
					CONDITION_VALUE Mining >= 105
					CONDITION_VALUE Urbanization >= 40
				}
				PRICE = {
					$PoliticalPower = 490
					$Wealth = 800
				}
				UPGRADE = {
					$PoliticalPower = 15
				}
				TICK = {
					PROCESS weath_max = 1000 + value * 20
					PROCESS weath_min = -500 - value * 20
					RESOURCE_MAX $Wealth = weath_max
					SET ScripturalMoney.value [ : : Banks.value ]
					RESOURCE_MIN $Wealth = weath_min
				}
				
				LINK ScripturalMoney = {
						WEIGHT [ max ] 100 + Banks
				}
			
			}
			ScripturalMoney = {
				TYPE Technological
				VALUE value [ 0 0 100 >> 1 ]
				UNLOCK_CONDITIONS = {
					HINT ~ScienceKnowledge | ~Banks
					CONDITION_VALUE Banks >= 30
					CONDITION_VALUE Money >= 80
				}
				PRICE = {
					$PoliticalPower = 490
				}
				UPGRADE = {
					$PoliticalPower = 10
				}
				TICK = {
				SET Money.value [ : : 100 + ScripturalMoney.value / 2 ]
				}
				
				LINK Money = {
						WEIGHT [ max ] 100 + value / 2
				}
				
			

			}
			Monasteries = {
				TYPE Cultural
				VALUE value [ 0 0 100 >> 1 ]

				UNLOCK_CONDITIONS = {
					HINT ~Feudality | ~NonSecularEducation
					CONDITION_VALUE Piety > 20
					CONDITION_VALUE Pantheon > 50
					CONDITION_NODE - SecularEducation
					CONDITION_ERA >= FeudalAge
				}
				PRICE = {
					$PoliticalPower = 150
					$Wealth = 300
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(Monasteries) + 1) * 3
					$Wealth = (LinkCount(Monasteries) + 1) * 8
				}
				TICK = {
					PROCESS PriestClass =  PriestClass + PerSeconds( value / 500)
				}
				
				
				LINK NonSecularEducation = {
					WEIGHT [ to ] 
				}
				
				LINK PriestClass = {
				IF value > 0
					FLUX value / 25
					COLOR green
				ENDIF
				}

			}
			ReligiousArt = { 
				TYPE Cultural
				VALUE value [ 0 0 100 >> 1 ]
				UNLOCK_CONDITIONS = {
					HINT ~Monasteries | ~Culture
					CONDITION_VALUE Monasteries >= 30
					CONDITION_VALUE ReligiousMonuments >= 50
					CONDITION_VALUE Culture >= 40
				}
				PRICE = {
					$PoliticalPower = 100
					$Wealth = 100
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(ReligiousArt) + 1) * 1
					$Wealth = (LinkCount(ReligiousArt) + 1) * 10
				}
				
				TICK = {
					PROCESS Culture = Culture + PerSeconds ( value * 0.012 )
					PROCESS Piety = Piety + PerSeconds ( value * 0.005 )
					SET ReligiousMonuments.value [ : : 100 + ReligiousArt ]
				}
				LINK Culture = {
						COLOR green
						FLUX value / 25
				}
				LINK Piety = {
						COLOR green
						FLUX value / 25
				}
				
				LINK ReligiousMonuments = {
						WEIGHT [ max ] 100 + value
				}
			}
			HolyOrders = {
				TYPE Cultural
				VALUE value [ 0 20 50 >> 3 ]
				VALUE multiplier [ 0 0 100 >> 1 ]
				UNLOCK_CONDITIONS = {
					HINT ~Feudality | ~Castles
					CONDITION_ERA >= FeudalAge
					CONDITION_VALUE Monasteries >= 40
					CONDITION_VALUE Castles >= 30
				}
				PRICE = {
					$PoliticalPower = 495
					$Wealth = 600
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(HolyOrders) + 1) * 5
					$Wealth = (LinkCount(HolyOrders) + 1) * 5
				}
				
				TICK = {
					PROCESS HolyOrders.multiplier = 0
					IF ~Castles & ~Monasteries
						PROCESS HolyOrders.multiplier = 0.5 + ( ( Castles / 100  ) * ( Monasteries / 100 ) )
						PROCESS $PoliticalPower = $PoliticalPower + PerSeconds(value / 120)
						PROCESS $Wealth = $Wealth - PerSeconds(value / 120)
					ENDIF
					IF ( ~ArmyQuota == 0 | MilitaryManpower < ArmyQuota )
						PROCESS MilitaryManpower.Infantry_value += PerSeconds(value * multiplier / 8000)
						PROCESS MilitaryManpower.Missile_value += PerSeconds(value * multiplier / 10000)
					ENDIF
					IF  ( ~HorseDomestication & ( ~ArmyQuota == 0 | MilitaryManpower < ArmyQuota ) )
						PROCESS MilitaryManpower.Cavalry_value = MilitaryManpower.Cavalry_value + PerSeconds(value * multiplier / 6000)
					ENDIF
					
				}
				
				LINK MilitaryManpower = {
				IF value > 0
					FLUX value / 25
					COLOR green
				ENDIF
				}		
				
				LINK Castles = {
					WEIGHT [ from ] 
				}
				
				LINK Monasteries = {
					WEIGHT [ from ] 
				}

			}
			HolyWar = {
				TAG Sedentary
				TYPE Cultural
				VALUE value [ 0 0 100 >> 3 ]
				UNLOCK_CONDITIONS = {
					HINT ~HolyOrders & ~ModernWarfare == 0 
					CONDITION_VALUE MilitaryManpower > 75
					CONDITION_VALUE Piety > 40
					CONDITION_VALUE Pantheon > 75
					CONDITION_VALUE HolyOrders > 25
					CONDITION_NODE + Expensionism
					CONDITION_NODE - ModernWarfare
				}
				PRICE = {
					$PoliticalPower = 300
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(HolyWar) + 1) * 3
				}
				
				TICK = {
				IF ( MilitaryManpower > 40 & ~Island == 0 )
					PROCESS Piety = Piety + PerSeconds(value / 500)
					PROCESS MilitaryManpower.Infantry_value = MilitaryManpower.Infantry_value - PerSeconds(value / 60 * ( 1.5 - MilitaryEfficiency /100 ) )
					PROCESS MilitaryManpower.Cavalry_value = MilitaryManpower.Cavalry_value - PerSeconds(value / 80 * ( 1.5 - MilitaryEfficiency /100 ) )
					PROCESS MilitaryManpower.Missile_value = MilitaryManpower.Missile_value - PerSeconds(value / 40 * ( 1.5 - MilitaryEfficiency /100 ) )
					PROCESS MilitaryManpower.Mercenaries_value = MilitaryManpower.Mercenaries_value - PerSeconds(value / 80 * ( 1.5 - MilitaryEfficiency /100 ) )
					IF ~BarbarianAtGates
						PROCESS BarbarianAtGates -= PerSeconds(value / 100)
					ELSE
						PROCESS StateSize = StateSize + PerSeconds(value / 300)
					ENDIF
					PROCESS NeighborhoodBellicism = NeighborhoodBellicism - PerSeconds(value * 0.0025)
				ENDIF
				IF (MilitaryManpower > 40 & Navy > 40 & ~Island )
					PROCESS Piety = Piety + PerSeconds(value / 500)
					PROCESS Navy = Navy - PerSeconds(value / 75)
					PROCESS MilitaryManpower.Infantry_value = MilitaryManpower.Infantry_value - PerSeconds(value / 80 * ( 1.5 - MilitaryEfficiency /100 ) )
					PROCESS MilitaryManpower.Cavalry_value = MilitaryManpower.Cavalry_value - PerSeconds(value / 100 * ( 1.5 - MilitaryEfficiency /100 ) )
					PROCESS MilitaryManpower.Missile_value = MilitaryManpower.Missile_value - PerSeconds(value / 60 * ( 1.5 - MilitaryEfficiency /100 ) )
					PROCESS MilitaryManpower.Mercenaries_value = MilitaryManpower.Mercenaries_value - PerSeconds(value / 100 * ( 1.5 - MilitaryEfficiency /100 ) )
					IF ~BarbarianAtGates
						PROCESS BarbarianAtGates -= PerSeconds(value / 100)
					ELSE
						PROCESS StateSize = StateSize + PerSeconds(value / 300)
					ENDIF
					PROCESS NeighborhoodBellicism = NeighborhoodBellicism + PerSeconds(value * 0.0025)
				ENDIF
				}
				
				LINK MilitaryManpower = {
				IF (MilitaryManpower > 40 & ~Island == 0) | ( MilitaryManpower > 40 & Navy > 40 & ~Island )
					COLOR red
					FLUX value /25
				ENDIF
				}
				
				LINK Navy = {
				IF MilitaryManpower > 40 & Navy > 40 & ~Island
					COLOR red
					FLUX value /25
				ENDIF
				}
				
				LINK BarbarianAtGates = {
				IF (MilitaryManpower > 40 & ~Island == 0) | ( MilitaryManpower > 40 & Navy > 40 & ~Island )
					COLOR red
					FLUX value /50
				ENDIF
				}
				
				LINK StateSize = {
				IF (MilitaryManpower > 40 & ~Island == 0) | ( MilitaryManpower > 40 & Navy > 40 & ~Island )
					COLOR green
					FLUX value /50
				ENDIF
				}
				
				LINK Piety = {
				IF (MilitaryManpower > 40 & ~Island == 0) | ( MilitaryManpower > 40 & Navy > 40 & ~Island )
					COLOR green
					FLUX value /50
				ENDIF
				}
				

				LINK NeighborhoodBellicism = {
				IF (MilitaryManpower > 40 & ~Island == 0) | ( MilitaryManpower > 40 & Navy > 40 & ~Island )
					COLOR green
					FLUX value /50
				ENDIF
				}

			}
			NavigationTools = {
				TYPE Technological
				VALUE value [ 0 0 100 >> 1 ]
				UNLOCK_CONDITIONS = {
					HINT ( ~ScienceKnowledge & ~Fishing & ( ~NewWorld == 0 | ~Embassies ) )
					CONDITION_NODE - NewWorld
					OR
					CONDITION_VALUE Embassies >= 100
					ALWAYS
					CONDITION_VALUE ScienceKnowledge >= 120
				}
				PRICE = {
					$PoliticalPower = 100
				}
				UPGRADE = {
					$PoliticalPower = 2
				}
				TICK = {
				}
				
				LINK Fishing = {
						 WEIGHT [ to ] 
				}
				
				LINK NavyTechnology = {
						 WEIGHT [ to ] 
				}
			

			}			
			Caravel = {
				TYPE Technological
				VALUE value [ 0 0 100 >> 1 ]
				UNLOCK_CONDITIONS = {
					HINT ~NavigationTools
					ALWAYS
					CONDITION_VALUE NavigationTools >= 75
					CONDITION_VALUE ScienceKnowledge >= 140
				}
				PRICE = {
					$PoliticalPower = 195
					$Wealth = 400
				}
				UPGRADE = {
					$PoliticalPower = 1
					$Wealth = 2
				}
				TICK = {
				}
				
				LINK NavyTechnology = {
						 WEIGHT [ to ] 
				}
			

			}
			LargeSailboats = {
				TYPE Technological
				VALUE value [ 0 0 100 >> 1 ]
				UNLOCK_CONDITIONS = {
					HINT ~Caravel
					ALWAYS
					CONDITION_VALUE AcrossTheOcean >= 30
					CONDITION_VALUE ScienceKnowledge >= 275
				}
				PRICE = {
					$PoliticalPower = 350
					$Wealth = 1000
				}
				UPGRADE = {
					$PoliticalPower = 4
					$Wealth = 8
				}
				TICK = {
				}
				
				LINK NavyTechnology = {
						 WEIGHT [ to ] 
				}
			

			}
			ManOfWar = {
				TYPE Technological
				VALUE value [ 0 0 100 >> 1 ]
				UNLOCK_CONDITIONS = {
					HINT ~Caravel
					ALWAYS
					CONDITION_VALUE LargeSailboats >= 100
					CONDITION_VALUE ScienceKnowledge >= 340
				}
				PRICE = {
					$PoliticalPower = 400
					$Wealth = 1000
				}
				UPGRADE = {
					$PoliticalPower = 5
					$Wealth = 10
				}
				TICK = {
				}
				
				LINK NavyTechnology = {
						 WEIGHT [ to ] 
				}
			

			}
			Arquebus = {
				TYPE Technological
				VALUE value [ 0 0 100 >> 1 ]
				UNLOCK_CONDITIONS = {
					HINT ~ScienceKnowledge
					CONDITION_NODE - NewWorld
					OR
					CONDITION_VALUE Embassies >= 100
					ALWAYS
					CONDITION_VALUE ScienceKnowledge >= 100
				}
				PRICE = {
					$PoliticalPower = 150
				}
				UPGRADE = {
					$PoliticalPower = 10
				}
				TICK = {
				PROCESS MilitaryTechnology = MilitaryTechnology + PerSeconds(value / 33)
				}
				
				
				TRIGGER_SPAWN Arquebus = {
					REMOVE Missile
					ERA DiscoveryAge
				}
				
				LINK MilitaryTechnology = {
					IF value > 0
						COLOR green
						FLUX value / 10
					ENDIF
			}
			}	
			Musket = {
				TYPE Technological
				VALUE value [ 0 0 100 >> 1 ]
				UNLOCK_CONDITIONS = {
					HINT ~Arquebus
					ALWAYS
					CONDITION_VALUE ScienceKnowledge >= 200
					CONDITION_VALUE Arquebus >= 100
				}
				PRICE = {
					$PoliticalPower = 300
				}
				UPGRADE = {
					$PoliticalPower = 15
				}
				TICK = {
				PROCESS MilitaryTechnology = MilitaryTechnology + PerSeconds(value / 33)
				}
				
				LINK MilitaryTechnology = {
					IF value > 0
						COLOR green
						FLUX value / 10
					ENDIF
			}
			}		
			LateMusket = {
				TYPE Technological
				VALUE value [ 0 0 100 >> 1 ]
				UNLOCK_CONDITIONS = {
					HINT ~Musket
					ALWAYS
					CONDITION_VALUE ScienceKnowledge >= 350
					CONDITION_VALUE Musket >= 100
				}
				PRICE = {
					$PoliticalPower = 350
				}
				UPGRADE = {
					$PoliticalPower = 20
				}
				TICK = {
				PROCESS MilitaryTechnology = MilitaryTechnology + PerSeconds(value / 33)
				}
				
				LINK MilitaryTechnology = {
					IF value > 0
						COLOR green
						FLUX value / 10
					ENDIF
			}
			}			
			AcrossTheOcean = {
				TYPE Cultural
				VALUE value [ 0 0 40 >> 1 ]
				UNLOCK_CONDITIONS = {
					HINT ~Caravel
					ALWAYS
					CONDITION_VALUE NavigationTools >= 100
					CONDITION_VALUE Caravel >= 70
					CONDITION_NODE - Isolationism
				}
				PRICE = {
					$PoliticalPower = 300
					$Wealth = 800
				}
				UPGRADE = {
					$PoliticalPower = 3
					$Wealth = 20
				}
				TICK = {
				PROCESS TradeRoads += PerSeconds( value / 500 )
				SET TradingPost.value [ : : AcrossTheOcean.value ]
				}

				LINK TradeGoods = {
						WEIGHT [ max ] 2000 + StockExchange.value * 20
				}
				
				LINK TradingPost = {
						WEIGHT [ max ] AcrossTheOcean
				}
				
				LINK TradeRoads = {
					IF value > 0
						COLOR green
						FLUX value / 10
					ENDIF
					}
					
				TRIGGER_SPAWN AcrossTheOcean = {
					ERA DiscoveryAge
					}
			}
			StockExchange = {
				TYPE Cultural
				VALUE value [ 0 0 60 >> 1 ]

				UNLOCK_CONDITIONS = {
					HINT ~Banks
					CONDITION_VALUE TradeFair >= 40
					CONDITION_VALUE Banks >= 30
					CONDITION_VALUE AcrossTheOcean >= 20
				}
				PRICE = {
					$PoliticalPower = 300
					$Wealth = 800
				}
				UPGRADE = {
					$Wealth = (LinkCount(StockExchange) + 1) * 10
				}
				TICK = {
						SET TradeGoods.value [ : : 2000 + StockExchange.value * 20 ]
						SET AcrossTheOcean.value [ : : 40 + StockExchange.value ]
				}

				LINK TradeGoods = {
						WEIGHT [ max ] 2000 + StockExchange.value * 20
				}
				
				LINK AcrossTheOcean = {
						WEIGHT [ max ] 2000 + StockExchange.value * 20
				}
			}
			TradingPost = {
				TYPE Cultural
				VALUE value [ 0 0 40 >> 1 ]

				UNLOCK_CONDITIONS = {
					HINT ~AcrossTheOcean
					CONDITION_VALUE StockExchange >= 30
					CONDITION_VALUE AcrossTheOcean >= 40
				}
				PRICE = {
					$PoliticalPower = 100
					$Wealth = 500
				}
				UPGRADE = {
					$Wealth = (LinkCount(TradingPost) + 1) * 10
				}
				TICK = {
					IF ( $Wealth > 50 )
						PROCESS $Wealth -= PerSeconds( value / 7 )
						PROCESS TradeGoods = TradeGoods + PerSeconds(value / 3.5)
					ENDIF
				}

			
			LINK TradeGoods = {
					IF ( value > 0 & $Wealth > 50 )
						COLOR green
						FLUX value / 5
					ENDIF
			}
			}		
			TradeCompagnies = {
				TYPE Cultural
				VALUE value [ 0 0 100 >> 1 ]

				UNLOCK_CONDITIONS = {
					HINT ~StockExchange
					CONDITION_VALUE TradeFair >= 40
					CONDITION_VALUE Banks >= 30
					CONDITION_VALUE AcrossTheOcean >= 20
				}
				PRICE = {
					$PoliticalPower = 300
					$Wealth = 800
				}
				UPGRADE = {
					$Wealth = (LinkCount(TradeCompagnies) + 1) * 10
				}
				TICK = {
						SET TradeRoads.value [ : : 100 + TradeCompagnies.value * 3 ]
				}

				TRIGGER_SPAWN TradeCompagnies = {
					SPAWN TradeRoads
				}
				
				LINK TradeRoads = {
						WEIGHT [ max ] 100 + TradeCompagnies.value * 3
				}
			}		
			CombatPiracy = {
				TYPE Cultural
				VALUE value [ 0 0 150 >> 1 ]

				UNLOCK_CONDITIONS = {
					HINT ~ColonialPiracy
					CONDITION_VALUE ColonialPiracy > 10
					CONDITION_VALUE Navy > 50
					CONDITION_VALUE AcrossTheOcean >= 20
				}
				
				PRICE = {
					$PoliticalPower = 300
					$Wealth = 300
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(CombatPiracy) + 1) * 3
					$Wealth = (LinkCount(CombatPiracy) + 1) * 5
				}
				
				TICK = {
				IF Navy > 50
					PROCESS ColonialPiracy = ColonialPiracy - PerSeconds(value / 130)
					PROCESS Navy = Navy - PerSeconds(value / 150)
				ENDIF
				}
				

				LINK ColonialPiracy = {
					IF ( value > 0 & Navy > 50 )
						COLOR red
						FLUX value / 10
					ENDIF
			}				
			
			LINK Navy = {
					IF ( value > 0 & Navy > 50 )
						COLOR red
						FLUX value / 5
					ENDIF
			}
			}	
			ColonialTariffs = {
				TAG ColonyTag
				TYPE Cultural
				VALUE value [ 0 0 50 >> 1 ]

				UNLOCK_CONDITIONS = {
					HINT ~ColonialProsperity
					CONDITION_VALUE ColonialProsperity > 20
					CONDITION_VALUE Navy > 50
					CONDITION_VALUE AcrossTheOcean >= 20
				}
				
				PRICE = {
					$PoliticalPower = 300
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(ColonialTariffs) + 1) * 3
				}
				
				TICK = {
				IF ~Blocade == 0
					PROCESS ColonialProsperity = ColonialProsperity - PerSeconds ( ColonialTariffs / 50  )
					IF ~ColonialAutonomyDesire
						PROCESS ColonialAutonomyDesire += PerSeconds ( ColonialTariffs / 210 * ColonialStateSize / 150  )
					ENDIF
					IF ColonialProsperity > 5
						PROCESS $Wealth = $Wealth + PerSeconds( ColonialProsperity * value / 13 )
					ENDIF
				ENDIF
				}

				LINK Colony = {
				}
				
				LINK Blocade = {
				WEIGHT [ from ] 
				}
				
				LINK ColonialProsperity = {
					IF (value > 0)
						FLUX value * 0.013 
						COLOR red
					ENDIF
				}
				
				LINK ColonialAutonomyDesire = {
					IF (value > 0)
						FLUX value * 0.013 
						COLOR green
					ENDIF
				}
				
			}
			ColonialHelp = {
				TAG ColonyTag
				TYPE Cultural
				VALUE value [ 0 0 100 >> 1 ]

				UNLOCK_CONDITIONS = {
					HINT ~ColonialProsperity
					CONDITION_VALUE ColonialProsperity > 20
					CONDITION_VALUE Navy > 20
					CONDITION_VALUE AcrossTheOcean >= 35
				}
				
				PRICE = {
					$PoliticalPower = 150
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(ColonialHelp) + 1) * 2
				}
				
				TICK = {
					PROCESS ColonialProsperity = ColonialProsperity + PerSeconds ( ColonialHelp / 75  )
					IF ~ColonialAutonomyDesire
						PROCESS ColonialAutonomyDesire -= PerSeconds ( ColonialHelp / 800  )
					ENDIF
					PROCESS $Wealth = $Wealth - PerSeconds( value / 5 )
					PROCESS $PoliticalPower = $PoliticalPower - PerSeconds( value / 20 )
				}
				
				LINK ColonialProsperity = {
					IF (value > 0)
						FLUX value * 0.013 
						COLOR green
					ENDIF
				}
				
				LINK ColonialAutonomyDesire = {
					IF (value > 0)
						FLUX value * 0.013 
						COLOR red
					ENDIF
				}
				
			}
			ColonialIronFist = {
				TAG ColonyTag
				TYPE Cultural
				VALUE value [ 0 0 100 >> 1 ]

				UNLOCK_CONDITIONS = {
					HINT ~ColonialAutonomyDesire
					CONDITION_VALUE ColonialAutonomyDesire > 10
					CONDITION_VALUE Navy > 90
					CONDITION_VALUE AcrossTheOcean >= 50
				}
				
				PRICE = {
					$PoliticalPower = 250
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(ColonialIronFist) + 1) * 3.5
				}
				
				TICK = {
					IF Navy > 50
						PROCESS ColonialAutonomyDesire -= PerSeconds ( ColonialAutonomyDesire /  ( 600 - ( ColonialIronFist * 3) )  )
						PROCESS Navy = Navy - PerSeconds( 2 + value / 130)
						PROCESS $Wealth = $Wealth - PerSeconds( 0.25 + value / 25 )
						PROCESS $PoliticalPower = $PoliticalPower - PerSeconds( 0.25 + value / 30 )
					ENDIF
				}
			
				
				LINK ColonialAutonomyDesire = {
					IF (value > 0)
						FLUX value * 0.013 
						COLOR red
					ENDIF
				}
				
			LINK Navy = {
					IF ( Navy > 50 )
						COLOR red
						FLUX value / 5
					ENDIF
			}
			}		
			SlaveTrade = {
				TYPE Cultural
				VALUE value [ 0 0 100 >> 1 ]

				UNLOCK_CONDITIONS = {
					HINT ~ColonialProsperity
					CONDITION_VALUE ColonialProsperity > 20
					CONDITION_VALUE Navy > 50
					CONDITION_VALUE AcrossTheOcean >= 60
					CONDITION_NODE - AbolitionOfSlavery
				}
				
				PRICE = {
					$PoliticalPower = 300
					$Wealth = 300
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(SlaveTrade) + 1) * 3
					$Wealth = (LinkCount(SlaveTrade) + 1) * 5
				}
				
				TICK = {
					PROCESS ColonialProsperity = ColonialProsperity + PerSeconds(value / 150)
					PROCESS $Wealth = $Wealth - PerSeconds( value / 10 )
					
				}
				

				LINK ColonialProsperity = {
					IF ( value > 0 )
						COLOR green
						FLUX value / 10
					ENDIF
			}
			
			}
			SchoolOfThought = {
				TYPE Technological
				VALUE value [ 0 0 100 >> 1 ]

				UNLOCK_CONDITIONS = {
					HINT ~Alchemy
					CONDITION_NODE + Humanism
					CONDITION_VALUE Philosophy >= 200
				}
				PRICE = {
					$PoliticalPower = 300
				}
				UPGRADE = {
					$PoliticalPower =  25
				}
				TICK = {
				
				}
		
			}	
			Constitution = {
				TYPE Technological
				VALUE value [ 0 0 100 >> 1 ]

				UNLOCK_CONDITIONS = {
					HINT ~SchoolOfThought | ~Tribunal
					CONDITION_VALUE Legislation >= 100
					OR
					CONDITION_VALUE ReligiousLaw >= 100
					ALWAYS
					CONDITION_NODE + Writing
					CONDITION_VALUE Philosophy >= 200
					CONDITION_VALUE Tribunal >= 35
					CONDITION_VALUE SchoolOfThought >= 80
				}
				PRICE = {
					$PoliticalPower = 300
				}
				UPGRADE = {
					$PoliticalPower = 30
				}
				TICK = {
						RESOURCE_MAX $PoliticalPower = 750 + Constitution * 4.5
						PROCESS $PoliticalPower = $PoliticalPower + PerSeconds(Constitution * 0.03)
				
				}
				TRIGGER_SPAWN Constitution = {
						RESOURCE_MAX $PoliticalPower = 750
				}
		
			}
			ScientificMethod = {
				TYPE Technological
				VALUE value [ 0 0 100 >> 1 ]
				UNLOCK_CONDITIONS = {
					HINT ~Alchemy
					CONDITION_VALUE SchoolOfThought >= 25
					CONDITION_VALUE Mathematics >= 230
					CONDITION_VALUE Philosophy >= 230
				}
				PRICE = {
					$PoliticalPower = 495
				}
				UPGRADE = {
					$PoliticalPower = 25
				}
				TICK = {
						PROCESS ScienceKnowledge =  ScienceKnowledge + PerSeconds(value / 6000 )
				}
				LINK ScienceKnowledge = {
				IF value > 0
					FLUX value / 40
					COLOR green
				ENDIF
				}	
				TRIGGER_SPAWN ScientificMethod = {
				REMOVE Alchemy
				SET University.value [ : : 200 ]
				}

			}
			MercenariesReform = {
				TYPE Technological
				VALUE value [ 0 0 100 >> 1 ]
				
				RELATED_INFO = {}

				UNLOCK_CONDITIONS = {
					HINT ~Gunpowder
					CONDITION_VALUE Arquebus >= 100
					CONDITION_NODE + Mercenaries
					CONDITION_NODE + ModernWarfare
				}
				PRICE = {
					$PoliticalPower = 250
				}
				UPGRADE = {
					$PoliticalPower = 8
				}
				TICK = {
				
				}
				LINK Mercenaries = {
						WEIGHT [ to ] 
				}
				
			}
			OfficialLanguage = {
				TYPE Cultural
				VALUE value [ 0 0 100 >> 1 ]
				UNLOCK_CONDITIONS = {
					HINT ~LinguaFranca
					CONDITION_VALUE LinguaFranca >= 100
					CONDITION_VALUE SchoolOfThought >= 20
				}
				PRICE = {
					$PoliticalPower = 400
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(OfficialLanguage) + 1) * 20
				}
				TICK = {
				SET LinguaFranca.value [ : : 100 + OfficialLanguage.value / 2 ]
				}
				
				LINK LinguaFranca = {
						WEIGHT [ max ] 100 + value / 2
				}
				
			

			}
			Isolationism = {
				TYPE Cultural
				VALUE value [ 0 0 100 >> 1 ]
				UNLOCK_CONDITIONS = {
					HINT ~NationState
					CONDITION_VALUE BorderControls >= 75
					CONDITION_VALUE NationState >= 50
				}
				PRICE = {
					$PoliticalPower = 495
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(Isolationism) + 1) * 10
				}
				TICK = {				
				PROCESS NeighborhoodBellicism = NeighborhoodBellicism - PerSeconds(value * 0.0015)
				PROCESS ScienceKnowledge = ScienceKnowledge - PerSeconds(value / 250)
				PROCESS Stability = Stability + PerSeconds(value * 0.01)
				PROCESS Culture = Culture + PerSeconds ( value * 0.012 )
				}
				
				LINK NeighborhoodBellicism = {
				IF value > 0
					FLUX value / 35
					COLOR red
				ENDIF
				}					
				LINK ScienceKnowledge = {
				IF value > 0
					FLUX value / 35
					COLOR red
				ENDIF
				}			
				
				LINK Stability = {
				IF value > 0
					FLUX value / 35
					COLOR green
				ENDIF
				}				
				
				LINK Culture = {
				IF value > 0
					FLUX value / 35
					COLOR green
				ENDIF
				}
				
				LINK MilitaryEfficiency = {
						WEIGHT [ to ] 
				}
				LINK NationalCohesion = {
						WEIGHT [ to ] 
				}
				
								
				TRIGGER_SPAWN Isolationism = {
					REMOVE Expensionism
					REMOVE AcrossTheOcean
					DROPDOWN_BUTTON_DISABLE Diplomacy.DeclareWar
					}
				
				TRIGGER_LEAVE Isolationism = {
				IF DropdownIsState(Diplomacy.Peace)
					DROPDOWN_BUTTON_ENABLE  Diplomacy.DeclareWar
				ENDIF
					}
			}
			Embassies = {
				TYPE Cultural
				VALUE value [ 0 0 100 >> 1 ]
				UNLOCK_CONDITIONS = {
					HINT ~InvadersForce
					CONDITION_NODE + NewWorld
					CONDITION_NODE + InvadersForce
					CONDITION_VALUE Diplomacy >= 50
				}
				PRICE = {
					$PoliticalPower = 190
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(Embassies) + 1) * 14
				}
				TICK = {
				PROCESS InvadersForce = InvadersForce - PerSeconds(value * 0.002)
				
				IF value >= 100
				REMOVE Invaders
				PROCESS NewWorld.westernized = 1
				ENDIF
				}
			
				LINK InvadersForce = {
					COLOR red
					FLUX 2
				}

			}
			WarTaxes = {
				TYPE Cultural
				VALUE value [ 0 5 20 >> 1 ]
				RELATED_INFO = {
					RELATED_LINK Population
				}
				UNLOCK_CONDITIONS = {
					HINT ~ModernWarfare
					CONDITION_VALUE WarStatus < 45
				}
				PRICE = {
					$PoliticalPower = 300
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(WarTaxes) + 1) * 20
				}
				
				TICK = {
				IF DropdownIsState(Diplomacy.War)
					PROCESS $Wealth = $Wealth + PerSeconds(value / 100 * Population ) / 5)
				ENDIF
				}
				
				LINK Population = {
				WEIGHT [ from ] 
				}

			}	
			Conscription = {
				TYPE Technological
				VALUE value [ 0 5 50 >> 3 ]
				UNLOCK_CONDITIONS = {
					HINT ~ModernWarfare
					CONDITION_VALUE NationalCohesion > 70
					OR
					CONDITION_VALUE Nationalism > 25
					ALWAYS
					CONDITION_NODE + Infantry
					CONDITION_NODE + ModernWarfare
					CONDITION_VALUE Population > 120
				}
				PRICE = {
					$PoliticalPower = 300
				}
				UPGRADE = {
					$PoliticalPower = 35
				}
				
				TICK = {
					IF ( ~ArmyQuota == 0 | MilitaryManpower < ArmyQuota ) & DropdownIsState(Diplomacy.War)
						PROCESS MilitaryManpower.Infantry_value = MilitaryManpower.Infantry_value + PerSeconds(value * Population / 5000)
						PROCESS $Wealth = $Wealth - PerSeconds(value * 0.5)
						PROCESS Population = Population - PerSeconds(value * Population / 5000 / 3)
					ENDIF
					PROCESS Nationalism = Nationalism + PerSeconds(value / 1000 )
				}
				
				LINK MilitaryManpower = {
				IF value > 0 & ( ~ArmyQuota == 0 | MilitaryManpower < ArmyQuota ) & DropdownIsState(Diplomacy.War)
					FLUX value / 12
					COLOR green
				ENDIF
				}	
				
				LINK Population = {
				IF value > 0 & ( ~ArmyQuota == 0 | MilitaryManpower < ArmyQuota ) & DropdownIsState(Diplomacy.War)
					FLUX value / 12
					COLOR red
				ENDIF
				}	
				
				LINK Nationalism = {
				IF value > 0
					FLUX value / 12
					COLOR green
				ENDIF
				}	
				LINK Population = {
				WEIGHT [ from ]
				}	
				LINK MilitaryEfficiency = {
						 WEIGHT [ to ] 
				}
			}
			SteamEngine = {
				TYPE Technological
				VALUE value [ 0 0 100 >> 1 ]
				UNLOCK_CONDITIONS = {
					HINT ~ScienceKnowledge
					CONDITION_VALUE ScienceKnowledge >= 350
				}
				PRICE = {
					$PoliticalPower = 300
					$Wealth = 700
				}
				UPGRADE = {
					$PoliticalPower = 5
					$Wealth = 15
				}
				
				TICK = {
				SET Mining.value [ : : 200 + SteamEngine * 2 ]
				SET Mill.value [ : : 100 + SteamEngine ]
				}
				
				LINK Mining = {
						WEIGHT [ max ] 200 + SteamEngine * 2
				}
				LINK Mill = {
						WEIGHT [ max ] 100 + SteamEngine
				}

			}
			Mercantilism = {
				TYPE Cultural
				VALUE value [ 0 0 100 >> 1 ]	
				UNLOCK_CONDITIONS = {
					HINT ~Banks
					CONDITION_NODE + Banks
					CONDITION_NODE + StockExchange
					CONDITION_NODE - LaissezFaire
					CONDITION_VALUE SchoolOfThought >= 20
					CONDITION_VALUE TradeTax >= 20
				}
				PRICE = {
					$PoliticalPower = 300
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(Mercantilism) + 1) * 10
				}
				
				TICK = {
						PROCESS Entreprises = Entreprises - PerSeconds ( value / 100 * 0.9 ? 1.1 )
						PROCESS OverlandTrade =  OverlandTrade - PerSeconds(value / 200 * 0.9 ? 1.1)
						PROCESS NavalTrade =  NavalTrade - PerSeconds(value / 200 * 0.9 ? 1.1)
						PROCESS $Wealth = $Wealth + PerSeconds( ( value * NavalTrade / 1000 + value * OverlandTrade / 1000  ) * 0.9 ? 1.1 )
				}
				LINK NavalTrade = {
					IF (value > 0)
						FLUX value * 0.013 * 2
						COLOR red
					ENDIF
				}
				LINK Entreprises = {
					IF (value > 0)
						FLUX value / 20
						COLOR red
					ENDIF
				}
				LINK OverlandTrade = {
					IF (value > 0)
						FLUX value * 0.013 * 2
						COLOR red
					ENDIF
				}
			}	
			LaissezFaire = {
				TYPE Cultural
				VALUE value [ 0 0 100 >> 1 ]
				UNLOCK_CONDITIONS = {
					HINT ~Banks
					CONDITION_NODE + Banks
					CONDITION_NODE + StockExchange
					CONDITION_NODE - Mercantilism
					CONDITION_VALUE SchoolOfThought >= 20
					CONDITION_VALUE TradeTax <= 40
				}
				PRICE = {
					$PoliticalPower = 1
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(LaissezFaire) + 1) * 10
				}
				
				TICK = {
						SET TradeTax.value [ : : 30 - LaissezFaire / 3.333333333 ]
						PROCESS OverlandTrade =  OverlandTrade + PerSeconds(value / 100)
						PROCESS NavalTrade =  NavalTrade + PerSeconds(value / 100)
						PROCESS Entreprises =  NavalTrade + PerSeconds(value / 100)
				}
				LINK NavalTrade = {
					IF (value > 0)
						FLUX value / 25
						COLOR green
					ENDIF
				}
				LINK OverlandTrade = {
					IF (value > 0)
						FLUX value / 25
						COLOR green
					ENDIF
				}
				LINK Entreprises = {
					IF (value > 0)
						FLUX value / 25
						COLOR green
					ENDIF
				}
				LINK TradeTax = {
						WEIGHT [ max ] 30 - LaissezFaire / 5
				}
				TRIGGER_SPAWN LaissezFaire = {
						REMOVE EconomicCharters
						REMOVE Guilds
					}

			}	
			RevolutionaryRepublic = {
				TYPE Cultural
				TAG Government
				VALUE value [ 0 25 100 >> 1 ]

				UNLOCK_CONDITIONS = {
					HINT GetCurrentEra() >= GetEra(ImperialismAge)
					CONDITION_NODE + Constitution
					OR
					CONDITION_VALUE SchoolOfThought >= 65
					ALWAYS
					CONDITION_ERA >= ImperialismAge
					CONDITION_NODE + Nationalism
					CONDITION_VALUE PeasantryClass >= 50
					CONDITION_VALUE BourgoisieClass >= 30
				}
				PRICE = {
					$PoliticalPower = 500
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(RevolutionaryRepublic) + 1) * 4
				}
				TICK = {
					PROCESS Stability = Stability + PerSeconds(value/6000)
					PROCESS Nationalism = Nationalism + PerSeconds(value / 700)
					PROCESS RevolutionIdeals = RevolutionIdeals + PerSeconds(value / 300)
				}
				LINK Stability = {
					IF (value > 0)
						COLOR green
						FLUX value * 0.02
					ENDIF
				}
				LINK Nationalism = {
					IF (value > 0)
						COLOR green
						FLUX value * 0.04
					ENDIF
				}
				LINK Nationalism = {
					IF (value > 0)
						COLOR green
						FLUX value * 0.1
					ENDIF
				}
				TRIGGER_SPAWN RevolutionaryRepublic = {
					REMOVE Government
					SPAWN Constitution
					REMOVE FarmersTax
					PROCESS Reactionnarism += 25
					PROCESS TradeTax -= 5
					}
				}


			PrivilegeRevocation = {
				TYPE Cultural
				VALUE value [ 0 40 100 >> 1 ]
				UNLOCK_CONDITIONS = {
					HINT ~RevolutionIdeals | ~RevolutionaryRepublic 
					CONDITION_VALUE RevolutionaryRepublic >= 20
					CONDITION_VALUE AristocracyClass > 0
					CONDITION_NODE + AbolitionOfSerfdom
				}
				PRICE = {
					$PoliticalPower = 600
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(PrivilegeRevocation) + 1) * 10
				}
				
				TICK = {
						PROCESS AristocracyClass =  AristocracyClass - PerSeconds(value / 1500)
						PROCESS BourgoisieClass =  BourgoisieClass + PerSeconds(value / 1500)
						PROCESS Reactionnarism =  Reactionnarism + PerSeconds(value / 800)
						SET Nobility.value [ : : 100 - PrivilegeRevocation.value ]
				}
				LINK AristocracyClass = {
					IF (value > 0)
						FLUX value / 25
						COLOR red
					ENDIF
				}
				LINK BourgoisieClass = {
					IF (value > 0)
						FLUX value / 25
						COLOR green
					ENDIF
				}
				LINK Reactionnarism = {
					IF (value > 0)
						FLUX value / 12
						COLOR green
					ENDIF
				}
				LINK Nobility = {
						WEIGHT [ max ] 100 - PrivilegeRevocation.value
				}

			}

			AbolitionOfSlavery = {
				TYPE Cultural
				VALUE value [ 100 100 100 >> 1 ]
				UNLOCK_CONDITIONS = {
					HINT ~SchoolOfThought
					CONDITION_VALUE RevolutionaryRepublic >= 20
					OR
					CONDITION_VALUE SchoolOfThought >= 80
				}
				PRICE = {
					$PoliticalPower = 600
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(AbolitionOfSlavery) + 1) * 10
				}
				
				TICK = {
				}

				TRIGGER_SPAWN AbolitionOfSlavery = {
					PROCESS Population += Slaves / 3
					REMOVE SlaveTrade
					REMOVE Slaves
					}
				TRIGGER_LEAVE AbolitionOfSlavery = {
					SPAWN SlaveRevolt
					}

			}
			
			AbolitionOfSerfdom = {
				TYPE Cultural
				VALUE value [ 100 100 100 >> 1 ]
				UNLOCK_CONDITIONS = {
					HINT ~SchoolOfThought
					CONDITION_VALUE Democracy >= 80
					OR
					CONDITION_VALUE RevolutionaryRepublic >= 60
					OR
					CONDITION_VALUE ConstitutionalMonarchy >= 80
					ALWAYS
					CONDITION_VALUE SchoolOfThought >= 30
					
				}
				PRICE = {
					$PoliticalPower = 400
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(AbolitionOfSerfdom) + 1) * 10
				}
				
				TICK = {
						SET FarmersTax.value [ : : 5 ]
				}

				LINK FarmersTax = {
						WEIGHT [ max ] 5
				}
				
				LINK Agriculture = {
						 WEIGHT [ to ] 
				}
				TRIGGER_SPAWN AbolitionOfSerfdom = {
					PROCESS Reactionnarism += 15
					PROCESS RevolutionIdeals += 20
					}
				TRIGGER_LEAVE AbolitionOfSerfdom = {
					IF RevolutionaryRepublic == 0
						PROCESS RevolutionIdeals += 35
						PROCESS Reactionnarism -= 30
					ENDIF
					}
				
			}

			ConstitutionalMonarchy = {
				TYPE Cultural
				TAG Government
				VALUE value [ 0 25 100 >> 1 ]

				UNLOCK_CONDITIONS = {
					HINT GetCurrentEra() >= GetEra(ImperialismAge) | ~SchoolOfThought
					CONDITION_ERA >= ImperialismAge
					CONDITION_NODE - Republic
					CONDITION_NODE - RevolutionaryRepublic
					CONDITION_VALUE Constitution >= 50
				}
				PRICE = {
					$PoliticalPower = 600
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(ConstitutionalMonarchy) + 1) * 5
				}
				TICK = {
					PROCESS Stability = Stability + PerSeconds(value/5000)
					PROCESS Nationalism = Nationalism + PerSeconds(value / 2000)
					PROCESS RevolutionIdeals = RevolutionIdeals - PerSeconds(value / 1200)
					PROCESS Reactionnarism = Reactionnarism - PerSeconds(value / 1200)
				}
				LINK Stability = {
					IF (value > 0)
						COLOR green
						FLUX value * 0.02
					ENDIF
				}
				LINK Nationalism = {
					IF (value > 0)
						COLOR green
						FLUX value * 0.01
					ENDIF
				}
				LINK RevolutionIdeals = {
					IF (value > 0)
						COLOR red
						FLUX value * 0.1
					ENDIF
				}
				LINK Reactionnarism = {
					IF (value > 0)
						COLOR red
						FLUX value * 0.1
					ENDIF
				}
				TRIGGER_SPAWN ConstitutionalMonarchy = {
					ERA ImperialismAge
					REMOVE Government
					REMOVE PoliticOfTerror
					SPAWN Reactionnarism
					PROCESS Reactionnarism += 15
					SPAWN RevolutionIdeals
					PROCESS RevolutionIdeals -= 5
					}
				}
				

			PoliticOfTerror = {
				TYPE Cultural
				VALUE value [ 0 5 30 >> 1 ]
				UNLOCK_CONDITIONS = {
					HINT ~RevolutionIdeals | ~RevolutionaryRepublic 
					CONDITION_VALUE RevolutionaryRepublic >= 65
					CONDITION_VALUE PrivilegeRevocation >= 35
					CONDITION_VALUE Reactionnarism >= 10
				}
				PRICE = {
					$PoliticalPower = 750
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(PoliticOfTerror) + 1) * 10
				}
				
				TICK = {
						PROCESS AristocracyClass =  AristocracyClass - PerSeconds(value / 600)
						PROCESS Population =  Population - PerSeconds(value / 600)
						PROCESS BourgoisieClass =  BourgoisieClass - PerSeconds(value / 1500)
						PROCESS Reactionnarism =  Reactionnarism - PerSeconds(value / 600)
						PROCESS Stability =  Stability - PerSeconds(value / 250)
				}
				LINK AristocracyClass = {
					IF (value > 0)
						FLUX value / 15
						COLOR red
					ENDIF
				}
				LINK Population = {
					IF (value > 0)
						FLUX value / 12
						COLOR red
					ENDIF
				}
				LINK BourgoisieClass = {
					IF (value > 0)
						FLUX value / 25
						COLOR red
					ENDIF
				}
				LINK Stability = {
					IF (value > 0)
						FLUX value / 8
						COLOR red
					ENDIF
				}
				LINK Reactionnarism = {
					IF (value > 0)
						FLUX value / 12
						COLOR red
					ENDIF
				}

			}
			Secularism = {
				TYPE Cultural
				VALUE value [ 0 5 100 >> 1 ]
				UNLOCK_CONDITIONS = {
					HINT ~RevolutionIdeals | ~RevolutionaryRepublic 
					CONDITION_VALUE ConstitutionalMonarchy >= 100
					OR
					CONDITION_VALUE RevolutionaryRepublic >= 20
					ALWAYS
					CONDITION_VALUE PriestClass > 0
					CONDITION_NODE + PrivilegeRevocation
					CONDITION_NODE - ReligiousLaw
				}
				PRICE = {
					$PoliticalPower = 600
				}
				UPGRADE = {
					$PoliticalPower = (LinkCount(Secularism) + 1) * 10
				}
				
				TICK = {
						PROCESS Reactionnarism =  Reactionnarism - PerSeconds(value / 1200)
				}

				LINK Religiosity = {
				WEIGHT [ to ]
				}
			}
			
			
			UpperHouse = {
				TYPE Technological
				VALUE value [ 100 100 100 >> 1 ]

				UNLOCK_CONDITIONS = {
					HINT ~SchoolOfThought
					CONDITION_NODE + ConstitutionalMonarchy
					OR
					CONDITION_NODE + RevolutionaryRepublic
					ALWAYS
					CONDITION_NODE + Tribunal
					
				}
				PRICE = {
					$PoliticalPower = 500
				}
				UPGRADE = {
					$PoliticalPower =  1
				}
				TICK = {
					PROCESS $PoliticalPower += PerSeconds(0.5)
				
				}
		
			}	

			
			}
		Events = {
		::APPEND "Main/Nomads.txt" Nomads.Nodes.Events
		::APPEND "Main/Religious.txt" Religious.Nodes.Events
			Fire = {
				SOUND_EVENT "Main/SFX/GreatFire.wav"
				SOUND_WINDOW "Main/SFX/GreatFire.wav"
				EVENT_DEF [ 15 20 400 30% ]
				ARISE = {
					EVENT_SPEED Flora / 100
				}
				SLEEP = {
				EVENT_CHANCE = Temperature / 100 * (1 - Humidity / 100 ) * 1
				}
				
				
				TICK = {
					PROCESS Flora = Flora - PerSeconds(2 * 0.75 ? 1.25)
					OVERRIDE_PARAM Agriculture.value = GetParam(Agriculture.value) - PerSeconds( 0.285 + Agriculture.value * 0.01 * 0.75 ? 1.25)
					PROCESS Agriculture = Min( GetParam(Agriculture.value), Agriculture )
				}
				LINK Flora = {
					COLOR red
					FLUX 2
				}
				LINK Agriculture = {
					COLOR red
					FLUX 5
				}
				
				TRIGGER_EVENT = {
					IF (Temperature > 30 ) & (Humidity < 80 ) & ( ~Mill == 0 ) 
						RISE
					ENDIF
				}

			}
			InvasiveSpecies = {
				SOUND_EVENT "Main/SFX/Insects.wav"
				SOUND_WINDOW "Main/SFX/Insects.wav"
				EVENT_DEF [ 15 15 60 33% ]
				ARISE = {
					EVENT_SPEED Flora / 100 + Fauna / 100
				}
				TICK = {
					PROCESS Fauna = Fauna - PerSeconds(3 * 0.75 ? 1.25)
					PROCESS Flora = Flora - PerSeconds(1.5 * 0.75 ? 1.25)
				}
				LINK Fauna = {
					COLOR red
					FLUX 3
				}
				LINK Flora = {
					COLOR red
					FLUX 1.5
				}
				TRIGGER_EVENT = {
					IF Flora > 40 & GameTime() < 800
						RISE
					ENDIF
				}
			}
			Famine = {
				SOUND_EVENT "Main/SFX/Insects.wav"
				SOUND_WINDOW "Main/SFX/Insects.wav"
				EVENT_DEF [ 15 15 120 60% ]
				SLEEP = {
				EVENT_CHANCE 1
				}
				ARISE = {
					EVENT_SPEED 1
					IF ( Food > 25 )
						REMOVE Famine
					ENDIF
				}
				TICK = {
					PROCESS Stability = Stability - PerSeconds(0.1 * 0.99 ? 1.01 )
					PROCESS Population = Population - PerSeconds(0.03 + Population * 0.05 * 0.99 ? 1.01)
				}
				LINK Stability = {
					COLOR red
					FLUX 1
				}
				LINK Population = {
					COLOR red
					FLUX 3
				}
				TRIGGER_EVENT = {
					IF ( Food < 10 & Population > 70 )
						RISE
					ENDIF
				}
			}
			AbundantHarvest = {
				SOUND_EVENT "Main/SFX/Prosperity.wav"
				SOUND_WINDOW "Main/SFX/Prosperity.wav"
				EVENT_DEF [ 15 15 150 33% ]
				ARISE = {
					EVENT_SPEED 1 + Agriculture / 50
					IF ( Agriculture < 50 )
						REMOVE AbundantHarvest
					ENDIF
				}
				TICK = {
					PROCESS Food = Food + PerSeconds(Food * 0.03 * 0.75 ? 1.25)
					PROCESS Population = Population + PerSeconds(Population * 0.01 * 0.75 ? 1.25)
					PROCESS Stability = Stability + PerSeconds(2 * 0.75 ? 1.25)
				}
				LINK Stability = {
					COLOR green
					FLUX 2
				}
				LINK Food = {
					COLOR green
					FLUX 2
				}
				LINK Population = {
					COLOR green
					FLUX 0.5
				}
				TRIGGER_EVENT = {
					IF ( Agriculture > 50 ) & ( Agriculture.output > 5 )
						RISE
					ENDIF
				}
			}
			RegionProsperity = {
				SOUND_EVENT "Main/SFX/Prosperity.wav"
				SOUND_WINDOW "Main/SFX/Prosperity.wav"
				EVENT_DEF [ 20 15 100 20% ]
				ARISE = {
					EVENT_SPEED 1
					IF ( BorderControls > 30 )
						REMOVE RegionProsperity
					ENDIF
				}
				TICK = {
					PROCESS TradeGoods = TradeGoods + PerSeconds(4 * 0.75 ? 1.25)
					PROCESS Population = Population + PerSeconds(Population * 0.02 * 0.75 ? 1.25)
					PROCESS Stability = Stability + PerSeconds(0.22 * 0.75 ? 1.25)
					PROCESS Food = Food + PerSeconds(Food * 0.01 * 0.75 ? 1.25)
				}
				LINK Stability = {
					COLOR green
					FLUX 1
				}
				LINK Food = {
					COLOR green
					FLUX 1
				}
				LINK TradeGoods = {
					COLOR green
					FLUX 5
				}
				LINK Population = {
					COLOR green
					FLUX 2.5
				}
				TRIGGER_EVENT = {
					IF (( OverlandTrade > 10 ) + ( NavalTrade > 10 )) & ( BorderControls < 30 )
						RISE
					ENDIF
				}
			}
			NeighborhoodTroubles = {
				SOUND_EVENT "Main/SFX/NeigborhoodTroubles.wav"
				SOUND_WINDOW "Main/SFX/NeigborhoodTroubles.wav"
				EVENT_DEF [ 20 15 220 30% ]
				ARISE = {
					EVENT_SPEED 1
				}
				TICK = {
					PROCESS NavalTrade = NavalTrade - PerSeconds(1.5 * 0.75 ? 1.25)
					PROCESS OverlandTrade = OverlandTrade - PerSeconds(1.5 * 0.75 ? 1.25)
					PROCESS NeighborhoodBellicism = NeighborhoodBellicism - PerSeconds(0.5)
				}
				LINK NavalTrade = {
					COLOR red
					FLUX 1
				}
				LINK OverlandTrade = {
					COLOR red
					FLUX 1
				}
				LINK NeighborhoodBellicism = {
					COLOR red
					FLUX 1
				}
				TRIGGER_EVENT = {
					IF ~NeighborhoodBellicism 
						RISE
					ENDIF
				}
			}
			NeighborhoodRise = {
				SOUND_EVENT "Main/SFX/NeigborhoodRise.wav"
				SOUND_WINDOW "Main/SFX/NeigborhoodRise.wav"
				EVENT_DEF [ 40 50 500 20% ]
				ARISE = {
					EVENT_SPEED 1
				}
				SLEEP = {
				IF StateSize <= 150 & ~Musket & GetCurrentEra() >= GetEra(DiscoveryAge) & ( NeighborhoodBellicism.coalitionTrigger == 0 | NeighborhoodBellicism.coalitionTrigger == 2 )
					EVENT_CHANCE 0.75
				ELSE
					EVENT_CHANCE 0.20
				ENDIF
				}
				TICK = {
					PROCESS NeighborhoodBellicism = NeighborhoodBellicism + PerSeconds(8)
				}
				LINK NeighborhoodBellicism = {
					COLOR green
					FLUX 3
				}
				TRIGGER_EVENT = {
					IF ~NeighborhoodBellicism & GameTime() > 2300 & ~Coalition == 0 & ~HostileCoalition == 0 
						RISE
					ENDIF
				}
			}			
			Pillaging = {
				SOUND_EVENT "Main/SFX/Pillards.wav"
				SOUND_WINDOW "Main/SFX/Pillards.wav"
				EVENT_DEF [ 15 15 250 25% ]
				ARISE = {
                    EVENT_SPEED OverlandTrade / 100
                    IF OverlandTrade < 10
                        REMOVE Pillaging
                    ENDIF
                }
				TICK = {
					PROCESS OverlandTrade = OverlandTrade - PerSeconds(3 * 0.75 ? 1.25)
					IF ReligiousMonuments > 25
						OVERRIDE_PARAM ReligiousMonuments.value = GetParam(ReligiousMonuments.value) - PerSeconds(0.25 * 0.75 ? 1.25)
						PROCESS ReligiousMonuments = Min( GetParam(ReligiousMonuments.value), ReligiousMonuments )
                    ENDIF
				}
				LINK OverlandTrade = {
					COLOR red
					FLUX 5
				}
				LINK ReligiousMonuments = {
					IF ReligiousMonuments > 25
						COLOR red
						FLUX 1
                    ENDIF
				}
				TRIGGER_EVENT = {
					IF (OverlandTrade > 30 | ReligiousMonuments > 30 ) & ( ( Fortifications < ( StateSize / 3) & (MilitaryManpower < StateSize / 3) & ~Island == 0 )  + (~Island & Navy < StateSize / 2.5))  & GameTime() > 1500  & ( ~ModernWarfare == 0 ) 
						RISE
					ENDIF
				}
			}
			BeingRaided = {
				SOUND_EVENT "Main/SFX/Viking.wav"
				SOUND_WINDOW "Main/SFX/Viking.wav"
				EVENT_DEF [ 15 15 150 33% ]
				ARISE = {
					EVENT_SPEED 1
                }
				TICK = {
					PROCESS TradeGoods = TradeGoods - PerSeconds(3 * 0.75 ? 1.25)
					IF ReligiousMonuments > 25
						OVERRIDE_PARAM ReligiousMonuments.value = GetParam(ReligiousMonuments.value) - PerSeconds(0.25 * 0.75 ? 1.25)
						PROCESS ReligiousMonuments = Min( GetParam(ReligiousMonuments.value), ReligiousMonuments )
                    ENDIF
				}
				LINK TradeGoods = {
					COLOR red
					FLUX 5
				}
				LINK ReligiousMonuments = {
					IF ReligiousMonuments > 25
						COLOR red
						FLUX 1
                    ENDIF
				}
				TRIGGER_EVENT = {
					IF (TradeGoods > 100 & Navy * 1.5 < Coastline & Coastline >= 20 ) & GameTime() > 9500  & ( ~ModernWarfare == 0 ) 
						RISE
					ENDIF
				}
			}
			Epidemic = {
				SOUND_EVENT "Main/SFX/Cough.wav"
				SOUND_WINDOW "Main/SFX/Cough.wav"
				EVENT_DEF [ 20 15 150 27% ]

				SLEEP = {
				IF ~Medecine
					EVENT_CHANCE 0.3 - Medecine.value / 4
				ELSE
					EVENT_CHANCE 0.3
				ENDIF
				}
				
				ARISE = {
					EVENT_SPEED Population / 100
                    IF Population < 50
                        REMOVE Epidemic
                    ENDIF
				}
				TICK = {
					PROCESS Population = Population - PerSeconds(1 + Population/80)
					PROCESS Stability = Stability - PerSeconds(0.1 * 0.75 ? 1.25)

					PROCESS MilitaryManpower.Infantry_value = MilitaryManpower.Infantry_value - PerSeconds(0.1 + MilitaryManpower.Infantry_value /50 )
					PROCESS MilitaryManpower.Cavalry_value = MilitaryManpower.Cavalry_value - PerSeconds(0.1 + MilitaryManpower.Cavalry_value /50)
					PROCESS MilitaryManpower.Missile_value = MilitaryManpower.Missile_value - PerSeconds(0.1 + MilitaryManpower.Missile_value /50)
					PROCESS MilitaryManpower.Mercenaries_value = MilitaryManpower.Mercenaries_value - PerSeconds(0.1 + MilitaryManpower.Mercenaries_value /50)
					
				}
				LINK Population = {
					COLOR red
					FLUX 5
				}
				LINK MilitaryManpower = {
					COLOR red
					FLUX 3
				}
				LINK Stability = {
					COLOR red
					FLUX 1
				}
				TRIGGER_EVENT = {
					IF Population > 50 & ~Urbanization & ( ( ~CivilEngineering == 0 ) + (CivilEngineering < (Urbanization * 0.85) ) )
						RISE
					ENDIF
				}
			}	
			MassiveTroubles = {
				SOUND_EVENT "Main/SFX/MassiveTroubles.wav"
				SOUND_WINDOW "Main/SFX/MassiveTroubles.wav"
				EVENT_DEF [ 15 15 135 30% ]
				ARISE = {
					EVENT_SPEED 1 - Stability / 100
                    IF Stability >= 10
                        REMOVE MassiveTroubles
                    ENDIF
				}
				TICK = {
					PROCESS Population = Population - PerSeconds(Population * 0.022 + 0.25 * 0.75 ? 1.25)
					PROCESS Food = Food - PerSeconds(3 * 0.75 ? 1.25)
					PROCESS Education = Education - PerSeconds(1 * 0.75 ? 1.25)
					PROCESS MilitaryManpower.Infantry_value = MilitaryManpower.Infantry_value - PerSeconds(0.1 + MilitaryManpower.Infantry_value /150 )
					PROCESS MilitaryManpower.Cavalry_value = MilitaryManpower.Cavalry_value - PerSeconds(0.1 + MilitaryManpower.Cavalry_value /150)
					PROCESS MilitaryManpower.Missile_value = MilitaryManpower.Missile_value - PerSeconds(0.1 + MilitaryManpower.Missile_value /150)
					PROCESS MilitaryManpower.Mercenaries_value = MilitaryManpower.Mercenaries_value - PerSeconds(0.1 + MilitaryManpower.Mercenaries_value /150)
					PROCESS $Wealth = $Wealth - PerSeconds(3 * 0.75 ? 1.25)
				}
				LINK Population = {
					COLOR red
					FLUX 5
				}

				LINK MilitaryManpower = {
					COLOR red
					FLUX 5
				}
				
				LINK Education = {
					COLOR red
					FLUX 5
				}
				
				LINK Food = {
					COLOR red
					FLUX 1
				}
				
				
				TRIGGER_EVENT = {
					IF Stability < 10 & ~Stability
						RISE
					ENDIF
				}
			}	
			ClergyRebellion = {
				SOUND_EVENT "Main/SFX/Riots.wav"
				SOUND_WINDOW "Main/SFX/Riots.wav"
				EVENT_DEF [ 15 15 100 100% ]
				ARISE = {
					EVENT_SPEED 1 - Stability / 95
                    IF ~Theocracy + ~CelesteMandate + ~ReligiousLaw + PriestClass < 80 + ~RevolutionIdeals
                        REMOVE ClergyRebellion
                    ENDIF
				}
				TICK = {
					PROCESS Stability = Stability - PerSeconds(0.5)
					PROCESS Piety = Piety - PerSeconds(0.5)
					OVERRIDE_PARAM DivineRight.value = GetParam(DivineRight.value) + PerSeconds(0.25 * 0.75 ? 1.25)
					PROCESS DivineRight = Max ( GetParam(DivineRight.value), DivineRight )
				}
				LINK Stability = {
					COLOR red
					FLUX 5
				}
				LINK Piety = {
					COLOR red
					FLUX 2.5
				}
				LINK DivineRight = {
					COLOR green
					FLUX 2.5
				}
				TRIGGER_EVENT = {
					IF PriestClass > 85 & ( ~Theocracy == 0 & ~CelesteMandate == 0 & ~ReligiousLaw == 0 & ~RevolutionIdeals == 0 ) & ( DivineRight < Empire + DivineRight < Monarchy + ~DivineRight == 0 )
						RISE
					ENDIF
				}
			}		
			NoblesRebellion = {
				SOUND_EVENT "Main/SFX/Riots.wav"
				SOUND_WINDOW "Main/SFX/Riots.wav"
				EVENT_DEF [ 15 15 100 100% ]
				ARISE = {
					EVENT_SPEED 1 - Stability / 70
                    IF ~Monarchy + AristocracyClass < 70 + ~Empire + ~Oligarchy + ~CelesteMandate + ~CelestialMonarchy + ~BarbarianMonarchy + ( ~Nobility & Nobility > 20 ) + ~RevolutionIdeals
                        REMOVE NoblesRebellion
                    ENDIF
				}
				TICK = {
					PROCESS Stability = Stability - PerSeconds(0.5)
				}
				LINK Stability = {
					COLOR red
					FLUX 5
				}
				TRIGGER_EVENT = {
					IF AristocracyClass > 85 &  ( ~Nobility == 0 | Nobility < 20 ) & ( ~Monarchy == 0 ) & ( ~CelesteMandate == 0 ) & ( ~CelestialMonarchy == 0 ) & ( ~BarbarianMonarchy == 0 ) & ( ~Empire == 0 ) & ( ~Oligarchy == 0 ) & ~Settlement & ~RevolutionIdeals == 0
						RISE
					ENDIF
				}
			}		
			ProTradeRiots = {
				SOUND_EVENT "Main/SFX/Riots.wav"
				SOUND_WINDOW "Main/SFX/Riots.wav"
				EVENT_DEF [ 30 15 200 100% ]
				ARISE = {
					EVENT_SPEED Entreprises / 200 + TradeTax / 200
                    IF ~Republic
                        REMOVE ProTradeRiots
                    ENDIF
				}
				SLEEP = {
				EVENT_CHANCE Entreprises / 200 + TradeTax / 200
				}
				TICK = {
					PROCESS Stability = Stability - PerSeconds(0.65)
				}
				LINK Stability = {
					COLOR red
					FLUX 5
				}
				TRIGGER_EVENT = {
					IF Entreprises > 40 & TradeTax > 15 & ( ~EconomicCharters == 0 | EconomicCharters < ((TradeTax -15 ) * 3.833333333 ) ) & ~Stability & ~Republic == 0 & ~RevolutionaryRepublic == 0
						RISE
					ENDIF
				}
			}					
			EconomicCrisis = {
				SOUND_EVENT "Main/SFX/CoinsBad.wav"
				SOUND_WINDOW "Main/SFX/CoinsBad.wav"
				EVENT_DEF [ 25 15 20 75% ]
				ARISE = {
					EVENT_SPEED 1 - Stability / 100
                    IF $Wealth > 10
                        REMOVE EconomicCrisis
                    ENDIF
				}
				TICK = {
					PROCESS $PoliticalPower = $PoliticalPower - PerSeconds(0.5)
					PROCESS Stability = Stability - PerSeconds(1 * 0.75 ? 1.25)
					PROCESS Navy = Navy - PerSeconds(0.05 + Navy * 0.08)
					OVERRIDE_PARAM CelesteMandate.value = GetParam(CelesteMandate.value) - PerSeconds(0.5)
					PROCESS CelesteMandate = Min( GetParam(CelesteMandate.value), CelesteMandate )
					OVERRIDE_PARAM Mercenaries.value = GetParam(Mercenaries.value) - PerSeconds(5)
					PROCESS Mercenaries = Min( GetParam(CelesteMandate.value), Mercenaries )
					PROCESS MilitaryManpower.Infantry_value = MilitaryManpower.Infantry_value - PerSeconds(0.05 + MilitaryManpower.Infantry_value * 0.08)
					PROCESS MilitaryManpower.Cavalry_value = MilitaryManpower.Cavalry_value - PerSeconds(0.05 + MilitaryManpower.Cavalry_value * 0.08)
					PROCESS MilitaryManpower.Missile_value = MilitaryManpower.Missile_value - PerSeconds(0.05 + MilitaryManpower.Missile_value * 0.08)
					PROCESS MilitaryManpower.Mercenaries_value = MilitaryManpower.Mercenaries_value - PerSeconds(0.05 + MilitaryManpower.Mercenaries_value * 0.8)
				}
				LINK Stability = {
					COLOR red
					FLUX 5
				}

				LINK MilitaryManpower = {
					COLOR red
					FLUX 4
				}
				
				LINK Mercenaries = {
					COLOR red
					FLUX 5
				}
				
				
				LINK Navy = {
					COLOR red
					FLUX 2
				}

				LINK CelesteMandate = {
					COLOR red
					FLUX 5
				}
				TRIGGER_EVENT = {
					IF $Wealth < 10 & ~Stability  &  ( GameTime() > 1100 | ~MilitaryManpower | ~FoodExchange )
						RISE
					ENDIF
				}
			}
			Corruption = {
				SOUND_EVENT "Main/SFX/CoinsBad.wav"
				SOUND_WINDOW "Main/SFX/CoinsBad.wav"
				EVENT_DEF [ 10 15 170 15% ]
				ARISE = {
					EVENT_SPEED 1 - Stability / 100
                    IF $Wealth < ( 0.8 * GetResourceMaximum( $Wealth ) )
                        REMOVE Corruption
                    ENDIF
				}
				TICK = {
					PROCESS $PoliticalPower = $PoliticalPower - PerSeconds(3)
					OVERRIDE_PARAM Legislation.value = GetParam(Legislation.value) - PerSeconds(2)
					PROCESS Legislation = Min( GetParam(Legislation.value), Legislation )
					OVERRIDE_PARAM Tribunal.value = GetParam(Tribunal.value) - PerSeconds(2)
					PROCESS Tribunal = Min( GetParam(Tribunal.value), Tribunal )
					OVERRIDE_PARAM ReligiousLaw.value = GetParam(ReligiousLaw.value) - PerSeconds(1)
					PROCESS ReligiousLaw = Min( GetParam(ReligiousLaw.value), ReligiousLaw )
					OVERRIDE_PARAM CelesteMandate.value = GetParam(CelesteMandate.value) - PerSeconds(1)
					PROCESS CelesteMandate = Min( GetParam(CelesteMandate.value), CelesteMandate )
				}
				LINK CelesteMandate = {
					COLOR red
					FLUX 5
				}
				LINK Legislation = {
					COLOR red
					FLUX 5
				}
				LINK Tribunal = {
					COLOR red
					FLUX 5
				}
				LINK ReligiousLaw = {
					COLOR red
					FLUX 5
				}
				TRIGGER_EVENT = {
					IF $Wealth > 0.9 * GetResourceMaximum($Wealth) & ~Settlement & ( ~Legislation + ~Tribunal + ~CelesteMandate + ~ReligiousLaw) & GameTime() > 1500
						RISE
					ENDIF
				}
			}
			CitiesInRuins = {
				SOUND_EVENT "Main/SFX/BuildingFall.wav"
				SOUND_WINDOW "Main/SFX/BuildingFall.wav"
				EVENT_DEF [ 15 15 15 100% ]
				ARISE = {
					EVENT_SPEED Urbanization / 100
                    IF Population * 1.35 > Urbanization
                        REMOVE CitiesInRuins
                    ENDIF
				}
				
				TICK = {
					OVERRIDE_PARAM Urbanization.value = GetParam(Urbanization.value) - PerSeconds(0.3 + Urbanization * 0.03)
					PROCESS Urbanization = Min( GetParam(Urbanization.value), Urbanization )
					PROCESS Stability = Stability - PerSeconds(0.2)
				}
				LINK Urbanization = {
					COLOR red
					FLUX 5
				}
				LINK Stability = {
					COLOR red
					FLUX 1
				}
				TRIGGER_EVENT = {
					IF Population * 1.35 < Urbanization
						RISE
					ENDIF
				}
			}		
			GreatFire = {
				SOUND_EVENT "Main/SFX/FireCity.wav"
				SOUND_WINDOW "Main/SFX/FireCity.wav"
				EVENT_DEF [ 15 15 180 17% ]
				ARISE = {
					EVENT_SPEED 1
                    IF UrbanMilitia >= Urbanization / 1.3
                        REMOVE CitiesInRuins
                    ENDIF
				}
				
				TICK = {
					IF ~Agriculture == 0
						ALERT Fire
					ENDIF
					
					OVERRIDE_PARAM Urbanization.value = GetParam(Urbanization.value) - PerSeconds(0.3 + Urbanization * 0.03 * 0.75 ? 1.25)
					PROCESS Urbanization = Min( GetParam(Urbanization.value), Urbanization )
					OVERRIDE_PARAM UrbanMilitia.value = GetParam(UrbanMilitia.value) - PerSeconds(0.5 + UrbanMilitia * 0.1 * 0.75 ? 1.25)
					PROCESS UrbanMilitia = Min( GetParam(UrbanMilitia.value), UrbanMilitia )
					PROCESS Stability = Stability - PerSeconds(0.5 * 0.75 ? 1.25)
					PROCESS Population = Population - PerSeconds(1.5 + Population * 0.01 * 0.75 ? 1.25)
					PROCESS ArtisanClass = ArtisanClass - PerSeconds(1 + ArtisanClass * 0.1 * 0.75 ? 1.25)
				}
				LINK Urbanization = {
					COLOR red
					FLUX 3
				}
				LINK UrbanMilitia = {
					COLOR red
					FLUX 3
				}
				LINK Population = {
					COLOR red
					FLUX 3
				}
				LINK ArtisanClass = {
					COLOR red
					FLUX 3
				}
				LINK Stability = {
					COLOR red
					FLUX 1
				}
				TRIGGER_EVENT = {
					IF Urbanization > 50 & ( UrbanMilitia < Urbanization / 1.3 )
						RISE
					ENDIF
				}
							}	
			Separatism = {
				SOUND_EVENT "Main/SFX/Riots.wav"
				SOUND_WINDOW "Main/SFX/Riots.wav"
					EVENT_DEF [ 30 15 200 30% ]
					ARISE = {
						EVENT_SPEED 1
						IF StateSize < 100
							REMOVE Separatism
						ENDIF
					}
					TICK = {
						PROCESS Stability = Stability - PerSeconds(0.25 * 0.75 ? 1.25)
						PROCESS StateSize = StateSize - PerSeconds(0.5 + StateSize * 0.01 * 0.75 ? 1.25)

						OVERRIDE_PARAM CelesteMandate.value = GetParam(CelesteMandate.value) - PerSeconds(0.5)
						PROCESS CelesteMandate = Min( GetParam(CelesteMandate.value), CelesteMandate )
					}
					LINK Stability = {
						COLOR red
						FLUX 2.5
					}
					LINK CelesteMandate = {
						COLOR red
						FLUX 2.5
					}

					LINK StateSize = {
						COLOR red
						FLUX 5
					}

					TRIGGER_EVENT = {
						IF StateSize > 130 & MilitaryManpower < 60  & GameTime() > 1000 & ~BarbarianMonarchy == 0
							RISE
						ENDIF
					}
						
			
				}
			BeingInvaded = {
				SOUND_EVENT "Main/SFX/Invasion.wav"
				SOUND_WINDOW "Main/SFX/Invasion.wav"
				EVENT_DEF [ 15 30 120 25% ]
				ARISE = {
					EVENT_SPEED 1
				}
				SLEEP = {
				EVENT_CHANCE NeighborhoodBellicism / 125
				}
				TICK = {
					PROCESS NeighborhoodBellicism = NeighborhoodBellicism - PerSeconds(1.5)
					IF Fortifications > 0
						OVERRIDE_PARAM Fortifications.value = GetParam(Fortifications.value) - PerSeconds(1 + Fortifications.value * 0.005 * 0.75 ? 1.25)
						PROCESS Fortifications = Min( GetParam(Fortifications.value), Fortifications )
					ENDIF
					IF Fortifications == 0
						PROCESS MilitaryManpower.Infantry_value = MilitaryManpower.Infantry_value - PerSeconds(2 + MilitaryManpower.Infantry_value * 0.01 * (1.5 - MilitaryEfficiency /100 ) )
						PROCESS MilitaryManpower.Cavalry_value = MilitaryManpower.Cavalry_value - PerSeconds(1.5 + MilitaryManpower.Cavalry_value * 0.01 * (1.5 - MilitaryEfficiency /100 ) )
						PROCESS MilitaryManpower.Missile_value = MilitaryManpower.Missile_value - PerSeconds(4 + MilitaryManpower.Missile_value * 0.01 * (1.5 - MilitaryEfficiency /100 ) )
						PROCESS MilitaryManpower.Mercenaries_value = MilitaryManpower.Mercenaries_value - PerSeconds(2 + MilitaryManpower.Mercenaries_value * 0.01 * (1.5 - MilitaryEfficiency /100 ) )
						OVERRIDE_PARAM UrbanMilitia.value = GetParam(UrbanMilitia.value) - PerSeconds(4)
						PROCESS UrbanMilitia = Min( GetParam(UrbanMilitia.value), UrbanMilitia )
						OVERRIDE_PARAM Fortifications.value = GetParam(Fortifications.value) - PerSeconds(1 + Fortifications.value * 0.005 * 0.75 ? 1.25)
						PROCESS Fortifications = Min( GetParam(Fortifications.value), Fortifications )
					ENDIF
					IF MilitaryManpower < 10 & UrbanMilitia < 10 & Fortifications == 0
						PROCESS Stability = Stability - PerSeconds(0.5)
						PROCESS StateSize = StateSize - PerSeconds(2 + StateSize * 0.01)
						PROCESS Population = Population - PerSeconds(1 + Population * 0.01)
					ENDIF
				}

				
				LINK MilitaryManpower = {
					IF Fortifications == 0
					COLOR red
					FLUX 4
					ENDIF
				}
				

				LINK UrbanMilitia = {
					IF Fortifications == 0
					COLOR red
					FLUX 5
					ENDIF
				}				

				LINK Fortifications = {
					IF Fortifications > 0
					COLOR red
					FLUX 3
					ENDIF
				}		
				
				LINK NeighborhoodBellicism = {
					IF NeighborhoodBellicism > 0
					COLOR red
					FLUX 3
					ENDIF
				}					
				
				LINK Stability = {
					IF MilitaryManpower < 10 & Fortifications == 0 & UrbanMilitia < 10
					COLOR red
					FLUX 4
					ENDIF
				}
				LINK Population = {
					IF MilitaryManpower < 10 & Fortifications == 0 & UrbanMilitia < 10
					COLOR red
					FLUX 2
					ENDIF
				}
				LINK StateSize = {
					IF MilitaryManpower < 10 & Fortifications == 0 & UrbanMilitia < 10
					COLOR red
					FLUX 3
					ENDIF
				}
			
				TRIGGER_EVENT = {
					IF  ~StateSize & GameTime() > 1850 & ( ~Island == 0 | ( ( Max ( StateSize - 150 , 0 ) > Navy ) ) ) & ( ~ModernWarfare == 0 ) 
						RISE
					ENDIF
				}
				
				
				TRIGGER_SPAWN BeingInvaded = {
					ALERT Invaded
				}
						
				
		}
			Piracy = {
				SOUND_EVENT "Main/SFX/Pillards.wav"
				SOUND_WINDOW "Main/SFX/Pillards.wav"
				EVENT_DEF [ 15 15 250 22% ]
				ARISE = {
					EVENT_SPEED 1
				}
				TICK = {
					PROCESS Navy = Navy - PerSeconds(5)
					IF Navy < 10
						PROCESS NavalTrade = NavalTrade - PerSeconds(8)
					ENDIF
				}

				
				LINK Navy = {
					COLOR red
					FLUX 4
				}
				
				LINK NavalTrade = {
					IF Navy < 10
					COLOR red
					FLUX 6
					ENDIF
				}
			
				TRIGGER_EVENT = {
					IF NavalTrade > 10 & ~AcrossTheOcean== 0
						RISE
					ENDIF
				}
				
						
				
		}		
			GreatNomadInvasion = {
				SOUND_EVENT "Main/SFX/Invasion.wav"
				SOUND_WINDOW "Main/SFX/Invasion.wav"
				EVENT_DEF [ 150 50 35 75% ]
				ARISE = {
					EVENT_SPEED 1
				}
				
				TICK = {
					IF Fortifications > 0
						OVERRIDE_PARAM Fortifications.value = GetParam(Fortifications.value) - PerSeconds(0.5 + Fortifications.value * 0.004 * 0.75 ? 1.25)
						PROCESS Fortifications = Min( GetParam(Fortifications.value), Fortifications )
					ENDIF
					IF Fortifications == 0
						PROCESS MilitaryManpower.Infantry_value = MilitaryManpower.Infantry_value - PerSeconds(2 + MilitaryManpower.Infantry_value * 0.08 * ( 1.5 - MilitaryEfficiency /100 ) )
						PROCESS MilitaryManpower.Cavalry_value = MilitaryManpower.Cavalry_value - PerSeconds(1.5 + MilitaryManpower.Cavalry_value * 0.05 * ( 1.5 - MilitaryEfficiency /100 ) )
						PROCESS MilitaryManpower.Missile_value = MilitaryManpower.Missile_value - PerSeconds(4 + MilitaryManpower.Missile_value * 0.1 * ( 1.5 - MilitaryEfficiency /100 ) )
						PROCESS MilitaryManpower.Mercenaries_value = MilitaryManpower.Mercenaries_value - PerSeconds(2 + MilitaryManpower.Mercenaries_value * 0.05 * ( 1.5 - MilitaryEfficiency /100 ) )
						OVERRIDE_PARAM Fortifications.value = GetParam(Fortifications.value) - PerSeconds(0.5 + Fortifications.value * 0.004 * 0.75 ? 1.25)
						PROCESS Fortifications = Min( GetParam(Fortifications.value), Fortifications )
					ENDIF
					IF MilitaryManpower < 10 & UrbanMilitia < 10 & Fortifications == 0
						REMOVE Republic
						REMOVE Theocracy
						OVERRIDE_PARAM Monarchy.value = GetParam(Monarchy.value) - PerSeconds(5)
						PROCESS Monarchy = Min( GetParam(Monarchy.value), Monarchy )
						OVERRIDE_PARAM CelesteMandate.value = GetParam(CelesteMandate.value) - PerSeconds(5)
						PROCESS CelesteMandate = Min( GetParam(CelesteMandate.value), CelesteMandate )
						OVERRIDE_PARAM Empire.value = GetParam(Empire.value) - PerSeconds(5)
						PROCESS Empire = Min( GetParam(Empire.value), Empire )
						PROCESS Stability = Stability - PerSeconds(0.75)
						PROCESS Population = Population - PerSeconds(3.5 + Population * 0.01)
					ENDIF
				}

				
				LINK MilitaryManpower = {
					IF Fortifications == 0
					COLOR red
					FLUX 4
					ENDIF
				}
				

				LINK Fortifications = {
					IF Fortifications > 0
					COLOR red
					FLUX 3
					ENDIF
				}					
				
				LINK Stability = {
					IF MilitaryManpower < 10 & Fortifications == 0 & UrbanMilitia < 10
					COLOR red
					FLUX 4
					ENDIF
				}
				LINK Population = {
					IF MilitaryManpower < 10 & Fortifications == 0 & UrbanMilitia < 10
					COLOR red
					FLUX 2
					ENDIF
				}
				LINK CelesteMandate = {
					IF MilitaryManpower < 10 & Fortifications == 0 & UrbanMilitia < 10
					COLOR red
					FLUX 10
					ENDIF
				}
			
				TRIGGER_EVENT = {
					IF  ((StateSize > 175 & GameTime() > 2000) + (GameTime() > 3000) ) & ~HorseDomestication == 0 & ~NewWorld == 0
						RISE
					ENDIF
				}
						
				TRIGGER_SPAWN GreatNomadInvasion = {
					ALERT MassiveNomadInvasion
					SPAWN ConversionForeignFaith
				}
		}
			WeakMonarch = {
				SOUND_EVENT "Main/SFX/WeakMonarch.wav"
				SOUND_WINDOW "Main/SFX/WeakMonarch.wav"
					EVENT_DEF [ 10 60 450 20% ]
					ARISE = {
						EVENT_SPEED 1
					}
					TICK = {
						OVERRIDE_PARAM Monarchy.value = GetParam(Monarchy.value) - PerSeconds(0.25 * 0.75 ? 1.25)
						PROCESS Monarchy = Min( GetParam(Monarchy.value), Monarchy )
						OVERRIDE_PARAM Empire.value = GetParam(Empire.value) - PerSeconds(0.25 * 0.75 ? 1.25)
						PROCESS Empire = Min( GetParam(Empire.value), Empire )
						OVERRIDE_PARAM CelesteMandate.value = GetParam(CelesteMandate.value) - PerSeconds(0.3 * 0.75 ? 1.25)
						PROCESS CelesteMandate = Min( GetParam(CelesteMandate.value), CelesteMandate )
						IF ~Republic + ~OrganizedNomadism + ~Theocracy
							REMOVE WeakMonarch
						ENDIF
					}

					LINK Monarchy = {
						COLOR red
						FLUX 2
					}

					LINK Empire = {
						COLOR red
						FLUX 2
					}
					
					LINK CelesteMandate = {
						COLOR red
						FLUX 2
					}
					
					TRIGGER_EVENT = {
						IF (Monarchy > 10 + ~CelesteMandate + ~Empire)
							RISE
						ENDIF
					}
						
			
				}			
			Devaluation = {
				SOUND_EVENT "Main/SFX/CoinsBad.wav"
				SOUND_WINDOW "Main/SFX/CoinsBad.wav"
					EVENT_DEF [ 10 15 300 20% ]
					ARISE = {
						EVENT_SPEED 1
					}
					TICK = {
						OVERRIDE_PARAM Money.value = GetParam(Money.value) - PerSeconds(1.5 * 0.9 ? 1.1)
						PROCESS Money = Min( GetParam(Money.value), Money )
						PROCESS Stability = Stability - PerSeconds(0.25)
					}

					LINK Money = {
						COLOR red
						FLUX 3.5
					}
					

					LINK Stability = {
						COLOR red
						FLUX 1
					}
					
					TRIGGER_EVENT = {
						IF ~Money
							RISE
						ENDIF
					}
						
			
				}
			MoralDegeneracy = {
				SOUND_EVENT "Main/SFX/Riots.wav"
				SOUND_WINDOW "Main/SFX/Riots.wav"
					EVENT_DEF [ 10 30 300 20% ]
					ARISE = {
						EVENT_SPEED Culture / 100
					}
					TICK = {
						OVERRIDE_PARAM Music.value = GetParam(Music.value) - PerSeconds(2 * 0.9 ? 1.1)
						PROCESS Music = Min( GetParam(Music.value), Music )
						OVERRIDE_PARAM Litterature.value = GetParam(Litterature.value) - PerSeconds(2 * 0.9 ? 1.1)
						PROCESS Litterature = Min( GetParam(Litterature.value), Litterature )
						PROCESS Stability = Stability - PerSeconds(0.25)
						PROCESS Culture = Culture - PerSeconds(3.5)
					}

					LINK Music = {
						COLOR red
						FLUX 2
					}
					LINK Litterature = {
						COLOR red
						FLUX 2
					}
					LINK Culture = {
						COLOR red
						FLUX 4
					}
					

					LINK Stability = {
						COLOR red
						FLUX 1
					}
					
					TRIGGER_EVENT = {
						IF ~Culture & GameTime() > 2500 & ~BarbarianAtGates
							RISE
						ENDIF
					}
						
			
				}
			GreatGeneral = {
				SOUND_EVENT "Main/SFX/GreatGeneral.wav"
				SOUND_WINDOW "Main/SFX/GreatGeneral.wav"
					EVENT_DEF [ 30 180 100 25% ]
					ARISE = {
						EVENT_SPEED 1
					}
					TICK = {
					}

					LINK MilitaryEfficiency = {
					WEIGHT [ to ]
					}
					TRIGGER_EVENT = {
						IF (Officers > 30) & $Wealth > 30
							RISE
						ENDIF
					}
						
			
				}		
			CoupDEtat = {
				SOUND_EVENT "Main/SFX/MilitaryMarch.wav"
				SOUND_WINDOW "Main/SFX/MilitaryMarch.wav"
					EVENT_DEF [ 30 180 30 50% ]
					ARISE = {
						EVENT_SPEED 1
						IF MilitaryManpower < 50 + Stability > 20
							REMOVE CoupDEtat
						ENDIF
					}
					TICK = {
						
					}

					TRIGGER_EVENT = {
						IF Officers > 30 & Stability < 20 & MilitaryManpower >= 75  & ~StateSize & GameTime() > 3500
							RISE
						ENDIF
					}
						

				TRIGGER_SPAWN CoupDEtat = {
					ALERT MilitaryCoup
					REMOVE Government
					SPAWN GreatGeneral
					SPAWN MilitaryDictatorship
				}
							
				}
			NavalInvasion = {
				SOUND_EVENT "Main/SFX/Invasion.wav"
				SOUND_WINDOW "Main/SFX/Invasion.wav"
				EVENT_DEF [ 15 30 130 25% ]
				ARISE = {
					EVENT_SPEED 1
				}
				SLEEP = {
				EVENT_CHANCE NeighborhoodBellicism / 200
				}
				TICK = {
					PROCESS NeighborhoodBellicism = NeighborhoodBellicism - PerSeconds(1.25)
					PROCESS Navy = Navy - PerSeconds(1.9)
					IF Fortifications > 0 & Navy < 5
						OVERRIDE_PARAM Fortifications.value = GetParam(Fortifications.value) - PerSeconds(1 + Fortifications.value * 0.005 * 0.75 ? 1.25)
						PROCESS Fortifications = Min( GetParam(Fortifications.value), Fortifications )
					ENDIF
					IF Navy < 5 & Fortifications == 0
						PROCESS MilitaryManpower.Infantry_value = MilitaryManpower.Infantry_value - PerSeconds(2 + MilitaryManpower.Infantry_value * 0.01 * (1.5 - MilitaryEfficiency /100 ) )
						PROCESS MilitaryManpower.Cavalry_value = MilitaryManpower.Cavalry_value - PerSeconds(1.5 + MilitaryManpower.Cavalry_value * 0.01 * (1.5 - MilitaryEfficiency /100 ) )
						PROCESS MilitaryManpower.Missile_value = MilitaryManpower.Missile_value - PerSeconds(4 + MilitaryManpower.Missile_value * 0.01 * (1.5 - MilitaryEfficiency /100 ) )
						PROCESS MilitaryManpower.Mercenaries_value = MilitaryManpower.Mercenaries_value - PerSeconds(2 + MilitaryManpower.Mercenaries_value * 0.01 * (1.5 - MilitaryEfficiency /100 ) )
						OVERRIDE_PARAM Fortifications.value = GetParam(Fortifications.value) - PerSeconds(1 + Fortifications.value * 0.005 * 0.75 ? 1.25)
						PROCESS Fortifications = Min( GetParam(Fortifications.value), Fortifications )
					ENDIF
					IF MilitaryManpower < 10 & UrbanMilitia < 10 & Fortifications == 0 & Navy < 5
						PROCESS Stability = Stability - PerSeconds(0.5)
						PROCESS StateSize = StateSize - PerSeconds(2.5 + StateSize * 0.01)
						PROCESS Population = Population - PerSeconds(1 + Population * 0.01)
					ENDIF
				}

				
				LINK MilitaryManpower = {
					IF Fortifications == 0 & Navy < 5
					COLOR red
					FLUX 4
					ENDIF
				}
				

				LINK Navy = {
					IF Navy > 0
					COLOR red
					FLUX 5
					ENDIF
				}		
				
				LINK Fortifications = {
					IF Fortifications > 0  & Navy < 5
					COLOR red
					FLUX 3
					ENDIF
				}		
				
				LINK NeighborhoodBellicism = {
					IF NeighborhoodBellicism > 0
					COLOR red
					FLUX 3
					ENDIF
				}					
				
				LINK Stability = {
					IF MilitaryManpower < 10 & Fortifications == 0 & UrbanMilitia < 10  & Navy < 5
					COLOR red
					FLUX 4
					ENDIF
				}
				LINK Population = {
					IF MilitaryManpower < 10 & Fortifications == 0 & UrbanMilitia < 10  & Navy < 5
					COLOR red
					FLUX 2
					ENDIF
				}
				LINK StateSize = {
					IF MilitaryManpower < 10 & Fortifications == 0 & UrbanMilitia < 10  & Navy < 5
					COLOR red
					FLUX 3
					ENDIF
				}
			
				TRIGGER_EVENT = {
					IF  ~StateSize & GameTime() > 1850 & ( ~Island | ((StateSize + Coastline - 150 > 0) & Coastline > 0 )  ) & ( ~ModernWarfare == 0 ) 
						RISE
					ENDIF
				}

				TRIGGER_SPAWN NavalInvasion = {
					ALERT Invaded
				}	
				
		}	
			BarbarianThrust = {
				SOUND_EVENT "Main/SFX/Invasion.wav"
				SOUND_WINDOW "Main/SFX/Invasion.wav"
				EVENT_DEF [ 50 30 125 33% ]
				ARISE = {
						EVENT_SPEED 1
						ERA LateAntiquity
					}

				SLEEP = {
				EVENT_CHANCE ( StateSize - BarbarianMonarchy ) / 250 
				}
				TICK = {
					PROCESS BarbarianAtGates = BarbarianAtGates + PerSeconds(0.85)
					PROCESS NeighborhoodBellicism = NeighborhoodBellicism + PerSeconds(2)
					PROCESS Stability -= PerSeconds(1)
					OVERRIDE_PARAM BorderControls.value = GetParam(BorderControls.value) - PerSeconds(0.6)
					PROCESS BorderControls = Min( GetParam(BorderControls.value), BorderControls )
				}
				LINK NeighborhoodBellicism = {
					COLOR green
					FLUX 3
				}
				
				LINK BorderControls = {
					COLOR red
					FLUX 1
				}
				LINK BarbarianAtGates = {
					COLOR green
					FLUX 2
				}

				LINK Stability = {
					COLOR red
					FLUX 0.75
				}
			
				TRIGGER_EVENT = {
						IF ~StateSize & ( ~Feudality == 0 | Feudality < 10 ) & ~BarbarianMonarchy == 0 & BarbarianThreat >= 100 & ( ~ModernWarfare == 0 ) 
							RISE
						ENDIF
				}
				
				TRIGGER_SPAWN BarbarianThrust = {
					ERA LateAntiquity
					SPAWN Officers
					SET Officers.value [ : : 100 ]
				}		
			
				}			
			SlaveRevolt = {
				SOUND_EVENT "Main/SFX/Riots.wav"
				SOUND_WINDOW "Main/SFX/Riots.wav"
				EVENT_DEF [ 15 30 500 25% ]
				ARISE = {
					EVENT_SPEED 1
				}
				SLEEP = {
				EVENT_CHANCE Slaves / 100
				}
				TICK = {
					PROCESS MilitaryManpower.Infantry_value = MilitaryManpower.Infantry_value - PerSeconds(2 + MilitaryManpower.Infantry_value * 0.01 * (1.5 - MilitaryEfficiency /100 ) )
					PROCESS MilitaryManpower.Cavalry_value = MilitaryManpower.Cavalry_value - PerSeconds(1.5 + MilitaryManpower.Cavalry_value * 0.01 * (1.5 - MilitaryEfficiency /100 ) )
					PROCESS MilitaryManpower.Missile_value = MilitaryManpower.Missile_value - PerSeconds(4 + MilitaryManpower.Missile_value * 0.01 * (1.5 - MilitaryEfficiency /100 ) )
					PROCESS MilitaryManpower.Mercenaries_value = MilitaryManpower.Mercenaries_value - PerSeconds(0.5 + MilitaryManpower.Mercenaries_value * 0.01 * (1.5 - MilitaryEfficiency /100 ) )
					OVERRIDE_PARAM UrbanMilitia.value = GetParam(UrbanMilitia.value) - PerSeconds(1.5)
					PROCESS UrbanMilitia = Min( GetParam(UrbanMilitia.value), UrbanMilitia )
					PROCESS Slaves = Slaves - PerSeconds(2)
					PROCESS Stability = Stability - PerSeconds(2)
						OVERRIDE_PARAM CelesteMandate.value = GetParam(CelesteMandate.value) - PerSeconds(0.5)
						PROCESS CelesteMandate = Min( GetParam(CelesteMandate.value), CelesteMandate )
				}

				
				LINK MilitaryManpower = {
					COLOR red
					FLUX 4
				}
				
				LINK CelesteMandate = {
					COLOR red
					FLUX 4
				}
				LINK Slaves = {
					COLOR red
					FLUX 3
				}
				
				LINK UrbanMilitia = {
					COLOR red
					FLUX 5
				}				
				
				LINK Stability = {
					COLOR red
					FLUX 4
				}
				
			
				TRIGGER_EVENT = {
					IF  ~StateSize & GameTime() > 1500 & Slaves > UrbanMilitia & Slaves > 20
						RISE
					ENDIF
				}

						
				
		}	
			EconomicCollapse = {
				SOUND_EVENT "Main/SFX/CoinsBad.wav"
				SOUND_WINDOW "Main/SFX/CoinsBad.wav"
				EVENT_DEF [ 60 25 100 100% ]
				ARISE = {
					EVENT_SPEED 1 - Stability / 100               
					IF $Wealth > 50
						REMOVE EconomicCollapse
					ENDIF
				}
				TICK = {
					PROCESS $PoliticalPower = $PoliticalPower - PerSeconds(0.5)
					PROCESS $Wealth = $Wealth - PerSeconds(2.5)
					
					PROCESS Stability = Stability - PerSeconds(0.5 * 0.75 ? 1.25)
					
					OVERRIDE_PARAM Mining.value = GetParam(Mining.value) - PerSeconds(7.5)
					PROCESS Mining = Min( GetParam(Mining.value), Mining )
					
					OVERRIDE_PARAM Pottery.value = GetParam(Pottery.value) - PerSeconds(5)
					PROCESS Pottery = Min( GetParam(Pottery.value), Pottery )
					
					OVERRIDE_PARAM Money.value = GetParam(Money.value) - PerSeconds(1.5 * 0.9 ? 1.1)
					PROCESS Money = Min( GetParam(Money.value), Money )
					
					OVERRIDE_PARAM CelesteMandate.value = GetParam(CelesteMandate.value) - PerSeconds(1.5)
					PROCESS CelesteMandate = Min( GetParam(CelesteMandate.value), CelesteMandate )
					
					OVERRIDE_PARAM Mercenaries.value = GetParam(Mercenaries.value) - PerSeconds(5)
					PROCESS Mercenaries = Min( GetParam(CelesteMandate.value), Mercenaries )
					
					PROCESS MilitaryManpower.Mercenaries_value = MilitaryManpower.Mercenaries_value - PerSeconds(0.5 + MilitaryManpower.Mercenaries_value * 0.01 * (1.5 - MilitaryEfficiency /100 ) )
				}
				LINK Stability = {
					COLOR red
					FLUX 5
				}

				LINK MilitaryManpower = {
					COLOR red
					FLUX 4
				}
				

				LINK Money = {
					COLOR red
					FLUX 4
				}
				
				LINK Mercenaries = {
					COLOR red
					FLUX 5
				}
				
				LINK Mining = {
					COLOR red
					FLUX 5
				}
				
				LINK Mining = {
					COLOR red
					FLUX 5
				}
				
				LINK CelesteMandate = {
					COLOR red
					FLUX 5
				}
				
				TRIGGER_EVENT = {
					IF $Wealth < 50 & ~Stability & ~BarbarianAtGates & ( Money > 50 | Mining > 75 | Pottery > 50 ) 
						RISE
					ENDIF
				}
			}		
			ClimateChange = {
				SOUND_EVENT "Main/SFX/Insects.wav"
				SOUND_WINDOW "Main/SFX/Insects.wav"
				EVENT_DEF [ 15 100 250 10% ]
				VALUE random [ 0 1 6 ]
				VALUE weight [ 0 1 2 ]
				ARISE = {
				}
				TICK = {
				IF random < 2 
					PROCESS SoilFertility -= PerSeconds(0.05 * weight) 
				ENDIF
				
				IF random > 2 & random < 3
					PROCESS SoilFertility += PerSeconds(0.05 * weight) 
				ENDIF
				
				IF random > 3 & random < 4
					PROCESS Humidity -= PerSeconds(0.05 * weight) 
				ENDIF
				
				IF random > 4 & random < 5
					PROCESS Humidity += PerSeconds(0.05 * weight) 
				ENDIF
				
				IF random > 5 & random < 6
					PROCESS Temperature += PerSeconds(0.05 * weight) 
				ENDIF
				
				IF random > 6
					PROCESS Temperature -= PerSeconds(0.05 * weight) 
				ENDIF
				
				}
				LINK SoilFertility = {
				IF random < 2 
					COLOR red
					FLUX 1
				ENDIF
				IF random > 2 & random < 3
					COLOR green
					FLUX 1
				ENDIF
				}
				LINK Humidity = {
				IF random > 3 & random < 4
					COLOR red
					FLUX 1
				ENDIF
				IF random > 4 & random < 5
					COLOR green
					FLUX 1
				ENDIF
				}
				LINK Temperature = {
				IF random > 5 & random < 6
					COLOR red
					FLUX 1
				ENDIF
				IF random > 6
					COLOR green
					FLUX 1
				ENDIF
				}
				
				
				TRIGGER_EVENT = {
					IF GameTime() > 7000
						RISE
					ENDIF
				}
				

				TRIGGER_SPAWN ClimateChange = {
				PROCESS ClimateChange.random = 1 ? 7
				PROCESS ClimateChange.weight = 0.75 ? 1.25
				}
		
				
			}
			SalicSucession = {
				SOUND_EVENT "Main/SFX/WeakMonarch.wav"
				SOUND_WINDOW "Main/SFX/WeakMonarch.wav"
				EVENT_DEF [ 25 15 400 18% ]
				ARISE = {
					EVENT_SPEED 1
				}
				TICK = {
						OVERRIDE_PARAM BarbarianMonarchy.value = GetParam(BarbarianMonarchy.value) + PerSeconds(3 * 0.75 ? 1.25)
						PROCESS BarbarianMonarchy = Min( GetParam(BarbarianMonarchy.value), BarbarianMonarchy )
						PROCESS StateSize = StateSize - PerSeconds(2 + StateSize * 0.02)
						IF ~Monarchy + ~Empire + ~Theocracy
							REMOVE SalicSucession
						ENDIF
					}

					LINK BarbarianMonarchy = {
						COLOR green
						FLUX 2
					}

					LINK StateSize = {
						COLOR red
						FLUX 5
					}
					
					TRIGGER_EVENT = {
						IF ~BarbarianMonarchy
							RISE
						ENDIF
					}
						
			
				}
			RecruitmentShortage = {
				SOUND_EVENT "Main/SFX/CoinsBad.wav"
				SOUND_WINDOW "Main/SFX/CoinsBad.wav"
					EVENT_DEF [ 10 60 350 22% ]
					ARISE = {
						EVENT_SPEED 1
					}
					TICK = {
						OVERRIDE_PARAM Infantry.value = GetParam(Infantry.value) - PerSeconds(0.25 * 0.75 ? 1.25)
						PROCESS Infantry = Min( GetParam(Infantry.value), Infantry )
						OVERRIDE_PARAM Missile.value = GetParam(Missile.value) - PerSeconds(0.25 * 0.75 ? 1.25)
						PROCESS Missile = Min( GetParam(Missile.value), Missile )
						OVERRIDE_PARAM Cavalry.value = GetParam(Cavalry.value) - PerSeconds(0.25 * 0.75 ? 1.25)
						PROCESS Cavalry = Min( GetParam(Cavalry.value), Cavalry )
					}

					LINK Infantry = {
						COLOR red
						FLUX 2
					}
					LINK Missile = {
						COLOR red
						FLUX 2
					}
					LINK Cavalry = {
						COLOR red
						FLUX 2
					}

					TRIGGER_EVENT = {
						IF ~BarbarianAtGates
							RISE
						ENDIF
					}
						
			
				}			
			Obscurantism = {
				SOUND_EVENT "Main/SFX/GreatFire.wav"
				SOUND_WINDOW "Main/SFX/GreatFire.wav"
					EVENT_DEF [ 25 100 300 18% ]
					ARISE = {
						EVENT_SPEED 1
					}
					TICK = {
						OVERRIDE_PARAM Litterature.value = GetParam(Litterature.value) - PerSeconds(2 * 0.9 ? 1.1)
						PROCESS Litterature = Min( GetParam(Litterature.value), Litterature )
						OVERRIDE_PARAM SecularEducation.value = GetParam(SecularEducation.value) - PerSeconds(2 * 0.9 ? 1.1)
						PROCESS SecularEducation = Min( GetParam(SecularEducation.value), SecularEducation )
						OVERRIDE_PARAM NonSecularEducation.value = GetParam(NonSecularEducation.value) - PerSeconds(2 * 0.9 ? 1.1)
						PROCESS NonSecularEducation = Min( GetParam(NonSecularEducation.value), NonSecularEducation )
						OVERRIDE_PARAM Mathematics.value = GetParam(Mathematics.value) - PerSeconds(0.25 * 0.9 ? 1.1)
						PROCESS Mathematics = Min( GetParam(Mathematics.value), Mathematics )
						OVERRIDE_PARAM Philosophy.value = GetParam(Philosophy.value) - PerSeconds(0.35 * 0.9 ? 1.1)
						PROCESS Philosophy = Min( GetParam(Philosophy.value), Philosophy )
						PROCESS Culture -= PerSeconds(0.25)
						PROCESS Education -= PerSeconds(0.5)
						OVERRIDE_PARAM CelesteMandate.value = GetParam(CelesteMandate.value) - PerSeconds(0.5)
						PROCESS CelesteMandate = Min( GetParam(CelesteMandate.value), CelesteMandate )
					}

					LINK Litterature = {
						COLOR red
						FLUX 5
					}
					LINK CelesteMandate = {
						COLOR red
						FLUX 5
					}
					LINK SecularEducation = {
						COLOR red
						FLUX 5
					}
					LINK Philosophy = {
						COLOR red
						FLUX 5
					}
					LINK Mathematics = {
						COLOR red
						FLUX 5
					}
					LINK NonSecularEducation = {
						COLOR red
						FLUX 5
					}
					LINK Litterature = {
						COLOR red
						FLUX 5
					}
					LINK Education = {
						COLOR red
						FLUX 3
					}

					TRIGGER_EVENT = {
						IF ~Education & GameTime() > 3500 & Stability < 50 & ( ~Humanism == 0 | Stability < 20)
							RISE
						ENDIF
					}
						
			
				}			
			SuccessionCrisis = {
				SOUND_EVENT "Main/SFX/Riots.wav"
				SOUND_WINDOW "Main/SFX/Riots.wav"
					EVENT_DEF [ 10 30 500 20% ]
					ARISE = {
						EVENT_SPEED 1
					}
					TICK = {
					PROCESS Stability = Stability - PerSeconds(0.33)
					}

					LINK Stability = {
						COLOR red
						FLUX 2
					}

					
					TRIGGER_EVENT = {
						IF ( ~Monarchy + ~CelesteMandate + ~Empire + ~MilitaryDictatorship)
							RISE
						ENDIF
					}
						
			
				}
			MilitaryPlot = {
				SOUND_EVENT "Main/SFX/MilitaryMarch.wav"
				SOUND_WINDOW "Main/SFX/MilitaryMarch.wav"
					EVENT_DEF [ 30 20 100 33% ]
					ARISE = {
							EVENT_SPEED 1
							IF ~BarbarianAtGates == 0
								REMOVE MilitaryPlot
							ENDIF
					}
					
					TICK = {
					OVERRIDE_PARAM BorderControls.value = GetParam(BorderControls.value) + PerSeconds(1.3)
					PROCESS BorderControls = Min( GetParam(BorderControls.value), BorderControls )
					
					OVERRIDE_PARAM Foedus.value = GetParam(Foedus.value) - PerSeconds(1.3)
					PROCESS Foedus = Min( GetParam(Foedus.value), Foedus )
					}

					TRIGGER_EVENT = {
						IF Officers > 25 & ~BarbarianAtGates & Stability < 50 & MilitaryManpower >= 50 & ~StateSize
							RISE
						ENDIF
					}
											
					LINK Foedus = {
						COLOR red
						FLUX 2
					}					
					
					LINK BorderControls = {
						COLOR green
						FLUX 2
					}

				TRIGGER_SPAWN MilitaryPlot = {
					ALERT MilitaryCoup
					REMOVE Government
					SPAWN GreatGeneral
					SPAWN BarbariansAdvancement
					IF ~HorseDomestication
						SPAWN Cataphracts
					ENDIF
					SPAWN MilitaryDictatorship
					PROCESS BarbarianAtGates -= 20
				}
							
				}
			MercenaryUprising = {
				SOUND_EVENT "Main/SFX/Riots.wav"
				SOUND_WINDOW "Main/SFX/Riots.wav"
					EVENT_DEF [ 10 30 500 75% ]
					ARISE = {
						EVENT_SPEED 1
							IF $Wealth > 20
								REMOVE MercenaryUprising
							ENDIF
					}
					TICK = {
					PROCESS Stability = Stability - PerSeconds(0.33)
					
					PROCESS MilitaryManpower.Infantry_value = MilitaryManpower.Infantry_value - PerSeconds(2 + MilitaryManpower.Infantry_value * 0.01 * (1.5 - MilitaryEfficiency /100 ) )
					PROCESS MilitaryManpower.Cavalry_value = MilitaryManpower.Cavalry_value - PerSeconds(1.5 + MilitaryManpower.Cavalry_value * 0.01 * (1.5 - MilitaryEfficiency /100 ) )
					PROCESS MilitaryManpower.Missile_value = MilitaryManpower.Missile_value - PerSeconds(4 + MilitaryManpower.Missile_value * 0.01 * (1.5 - MilitaryEfficiency /100 ) )
					PROCESS MilitaryManpower.Mercenaries_value = MilitaryManpower.Mercenaries_value - PerSeconds(0.5 + MilitaryManpower.Mercenaries_value * 0.2 * (1.5 - MilitaryEfficiency /100 ) )
						OVERRIDE_PARAM CelesteMandate.value = GetParam(CelesteMandate.value) - PerSeconds(0.5)
						PROCESS CelesteMandate = Min( GetParam(CelesteMandate.value), CelesteMandate )
					}

					LINK Stability = {
						COLOR red
						FLUX 2
					}
					LINK CelesteMandate = {
						COLOR red
						FLUX 2
					}
					
					
					LINK MilitaryManpower = {
						COLOR red
						FLUX 2
					}

					
				TRIGGER_SPAWN MercenaryUprising = {
					PROCESS MilitaryManpower.Mercenaries_value = MilitaryManpower.Mercenaries_value - 50
				}
					
					
					TRIGGER_EVENT = {
					
					IF ( $Wealth < 20 & MilitaryManpower.Mercenaries_value > 50 & ~Mercenaries)
							RISE
					ENDIF
					}
						
			
				}
			HarshWinter = {
				SOUND_EVENT "Main/SFX/Wolf.wav"
				SOUND_WINDOW "Main/SFX/Wolf.wav"
				EVENT_DEF [ 15 30 800 50% ]
				SLEEP = {
				EVENT_CHANCE = ( 100 - Temperature * 1.5 ) / 100
				}
				ARISE = {
					EVENT_SPEED 1
				}
				TICK = {
					PROCESS Stability = Stability - PerSeconds(0.02 * 0.99 ? 1.01 )
					PROCESS Population = Population - PerSeconds(0.1 + Population * 0.03 * 0.99 ? 1.01)
					PROCESS Food = Food - PerSeconds(0.3 + Food * 0.03 * 0.99 ? 1.01)
				}
				LINK Stability = {
					COLOR red
					FLUX 1
				}
				LINK Food = {
					COLOR red
					FLUX 3
				}
				LINK Population = {
					COLOR red
					FLUX 3
				}
				TRIGGER_EVENT = {
					IF ( Temperature < 65 & GameTime() > 8000 ) 
						RISE
					ENDIF
				}
			}	
			MerchantExplorer = {
				SOUND_EVENT "Main/SFX/MerchantExplorer.wav"
				SOUND_WINDOW "Main/SFX/MerchantExplorer.wav"
				EVENT_DEF [ 30 30 250 30% ]
				ARISE = {
					EVENT_SPEED 1	
				}
				SLEEP = {
					EVENT_CHANCE = 0.45 +( 0.3 * ~Republic )
				}
				
				TICK = {
					PROCESS TradeRoads = TradeRoads + PerSeconds(0.5)
				}
				LINK TradeRoads = {
					COLOR green
					FLUX 3
				}
				TRIGGER_EVENT = {
					IF (TradeGoods > 500 & TradeTax < 32 & LootingCampaigns < 20 & StateSize >= 100 & GameTime() > 8000 & AcrossTheOcean == 0 )
						RISE
					ENDIF
				}
				
				TRIGGER_SPAWN MerchantExplorer = {
					PROCESS TradeGoods = TradeGoods - 200
					SPAWN TradeRoads
				}
			}					
			UrbanExodus = {
				SOUND_EVENT "Main/SFX/BuildingFall.wav"
				SOUND_WINDOW "Main/SFX/BuildingFall.wav"
					EVENT_DEF [ 20 60 450 33% ]
					ARISE = {
						EVENT_SPEED 1
					}
					TICK = {
						OVERRIDE_PARAM Settlement.value = GetParam(Settlement.value) + PerSeconds(0.1 * 0.75 ? 1.25)
						PROCESS Settlement = Min( GetParam(Settlement.value), Settlement )
						OVERRIDE_PARAM Urbanization.value = GetParam(Urbanization.value) - PerSeconds(0.05 * 0.75 ? 1.25)
						PROCESS Urbanization = Min( GetParam(Urbanization.value), Urbanization )
					}

					LINK Settlement = {
						COLOR green
						FLUX 2
					}
					LINK Urbanization = {
						COLOR red
						FLUX 3
					}

					TRIGGER_EVENT = {
						IF ( ~Urbanization & ( Urbanization * 2 > Settlement ) & GetCurrentEra() >= GetEra(LateAntiquity) & GetCurrentEra() <= GetEra(DiscoveryAge))
							RISE
						ENDIF
					}
						
			
				}				
			PeasantRevolt = {
				SOUND_EVENT "Main/SFX/Riots.wav"
				SOUND_WINDOW "Main/SFX/Riots.wav"
				EVENT_DEF [ 50 30 150 20% ]
				SLEEP = {
				EVENT_CHANCE = 10 + FarmersTax.value + PeasantryClass / 10
				}
				ARISE = {
					EVENT_SPEED 1
							IF FarmersTax < 5
								REMOVE PeasantRevolt
							ENDIF
				}
					TICK = {
					PROCESS Stability = Stability - PerSeconds(0.45)
					PROCESS PeasantryClass = PeasantryClass - PerSeconds(1 + PeasantryClass / 80)
					PROCESS MilitaryManpower.Infantry_value = MilitaryManpower.Infantry_value - PerSeconds(3 + MilitaryManpower.Infantry_value * 0.01 * (1.5 - MilitaryEfficiency /100 ) )
					PROCESS MilitaryManpower.Cavalry_value = MilitaryManpower.Cavalry_value - PerSeconds(1 + MilitaryManpower.Cavalry_value * 0.01 * (1.5 - MilitaryEfficiency /100 ) )
					PROCESS MilitaryManpower.Missile_value = MilitaryManpower.Missile_value - PerSeconds(3 + MilitaryManpower.Missile_value * 0.01 * (1.5 - MilitaryEfficiency /100 ) )
					PROCESS MilitaryManpower.Mercenaries_value = MilitaryManpower.Mercenaries_value - PerSeconds(2 + MilitaryManpower.Mercenaries_value * 0.1 * (1.5 - MilitaryEfficiency /100 ) )
						OVERRIDE_PARAM CelesteMandate.value = GetParam(CelesteMandate.value) - PerSeconds(0.5)
						PROCESS CelesteMandate = Min( GetParam(CelesteMandate.value), CelesteMandate )
					}

					LINK Stability = {
						COLOR red
						FLUX 2
					}
					LINK PeasantryClass = {
						COLOR red
						FLUX 2
					}
					LINK CelesteMandate = {
						COLOR red
						FLUX 2
					}
					
					LINK MilitaryManpower = {
						COLOR red
						FLUX 2
					}
					
					TRIGGER_EVENT = {
					IF ( FarmersTax > 5 | ( PeasantryClass > 50 & Stability < 30 ) )
							RISE
					ENDIF
					}
						
			
				}		
			GreatEpidemic = {
				SOUND_EVENT "Main/SFX/Cough.wav"
				SOUND_WINDOW "Main/SFX/Cough.wav"
				EVENT_DEF [ 30 50 900 40% ]

				SLEEP = {
				IF ~Medecine
					EVENT_CHANCE 0.4 - Medecine / 3
				ELSE
					EVENT_CHANCE 0.4
				ENDIF
				}
				
				ARISE = {
					EVENT_SPEED Population / 100
				}
				TICK = {
					PROCESS Population = Population - PerSeconds(0.5 + Population/120 * 0.75 ? 1.25)
					PROCESS Piety = Piety - PerSeconds(0.5 * 0.75 ? 1.25)
					PROCESS Stability = Stability - PerSeconds(0.75 * 0.75 ? 1.25)
					PROCESS NeighborhoodBellicism = NeighborhoodBellicism - PerSeconds(1 * 0.75 ? 1.25)

					PROCESS MilitaryManpower.Infantry_value = MilitaryManpower.Infantry_value - PerSeconds(0.15 + MilitaryManpower.Infantry_value /50 )
					PROCESS MilitaryManpower.Cavalry_value = MilitaryManpower.Cavalry_value - PerSeconds(0.15 + MilitaryManpower.Cavalry_value /50)
					PROCESS MilitaryManpower.Missile_value = MilitaryManpower.Missile_value - PerSeconds(0.15 + MilitaryManpower.Missile_value /50)
					PROCESS MilitaryManpower.Mercenaries_value = MilitaryManpower.Mercenaries_value - PerSeconds(0.15 + MilitaryManpower.Mercenaries_value /50)
						OVERRIDE_PARAM CelesteMandate.value = GetParam(CelesteMandate.value) - PerSeconds(1.2)
						PROCESS CelesteMandate = Min( GetParam(CelesteMandate.value), CelesteMandate )
					
				}
				LINK Population = {
					COLOR red
					FLUX 5
				}
				LINK Piety = {
					COLOR green
					FLUX 3
				}
				LINK CelesteMandate = {
					COLOR red
					FLUX 5
				}
				LINK MilitaryManpower = {
					COLOR red
					FLUX 3
				}
				LINK Stability = {
					COLOR red
					FLUX 4
				}
				TRIGGER_EVENT = {
					IF Population > 50 & ~DraftAnimals  & GameTime() > 11000 & GetCurrentEra() >= GetEra(FeudalAge)
						RISE
					ENDIF
				}
				
				
			}		
			CulturalRevival = {
				SOUND_EVENT "Main/SFX/Prosperity.wav"
				SOUND_WINDOW "Main/SFX/Prosperity.wav"
					EVENT_DEF [ 10 20 300 25% ]
					ARISE = {
						EVENT_SPEED 1
					}
					TICK = {
						OVERRIDE_PARAM Music.value = GetParam(Music.value) + PerSeconds(2 * 0.9 ? 1.1)
						PROCESS Music = Max( GetParam(Music.value), Music )
						OVERRIDE_PARAM Litterature.value = GetParam(Litterature.value) + PerSeconds(2 * 0.9 ? 1.1)
						PROCESS Litterature = Max( GetParam(Litterature.value), Litterature )
						OVERRIDE_PARAM Philosophy.value = GetParam(Philosophy.value) + PerSeconds(2 * 0.9 ? 1.1)
						PROCESS Philosophy = Max( GetParam(Philosophy.value), Philosophy )
						OVERRIDE_PARAM Mathematics.value = GetParam(Mathematics.value) + PerSeconds(2 * 0.9 ? 1.1)
						PROCESS Mathematics = Max( GetParam(Mathematics.value), Mathematics )
						PROCESS Stability = Stability + PerSeconds(0.25)
						PROCESS Culture = Culture + PerSeconds(3.5)
					}

					LINK Music = {
						COLOR green
						FLUX 2
					}
					LINK Litterature = {
						COLOR green
						FLUX 2
					}
					LINK Culture = {
						COLOR green
						FLUX 5
					}
					LINK Mathematics = {
						COLOR green
						FLUX 4
					}
					LINK Philosophy = {
						COLOR green
						FLUX 4
					}

					LINK Stability = {
						COLOR green
						FLUX 1
					}
					
					TRIGGER_EVENT = {
						IF ~Culture & Culture < 50 & ( ~University | Stability > 80 ) & GetCurrentEra() >= GetEra(LateAntiquity) & ~Humanism == 0
							RISE
						ENDIF
					}
						
			
				}
			WitchHunt = {
				SOUND_EVENT "Main/SFX/Riots.wav"
				SOUND_WINDOW "Main/SFX/Riots.wav"
					EVENT_DEF [ 30 25 400 30% ]
					ARISE = {
						EVENT_SPEED 1
					}
					TICK = {
					PROCESS Stability = Stability - PerSeconds(0.1)
					PROCESS Minorities = Minorities - PerSeconds(2.5)
					PROCESS Piety = Piety + PerSeconds(0.5)
					}

					LINK Stability = {
						COLOR red
						FLUX 1
					}
					
					LINK Minorities = {
						COLOR red
						FLUX 2
					}
					LINK Piety = {
						COLOR green
						FLUX 2
					}
					
					TRIGGER_EVENT = {
						IF ( ~Minorities & Minorities>0 & Stability < 40 & ( ~Humanism == 0 | Stability < 25 )  )
							RISE
						ENDIF
					}
				}		
			NomadInvasion = {
				SOUND_EVENT "Main/SFX/Invasion.wav"
				SOUND_WINDOW "Main/SFX/Invasion.wav"
				EVENT_DEF [ 15 30 150 15% ]
				ARISE = {
					EVENT_SPEED 1
				}
				SLEEP = {
				EVENT_CHANCE NeighborhoodBellicism / 100
				}
				TICK = {
					PROCESS NeighborhoodBellicism = NeighborhoodBellicism - PerSeconds(1)
					IF Fortifications > 0
						OVERRIDE_PARAM Fortifications.value = GetParam(Fortifications.value) - PerSeconds(1 + Fortifications.value * 0.005 * 0.75 ? 1.25)
						PROCESS Fortifications = Min( GetParam(Fortifications.value), Fortifications )
					ENDIF
					IF Fortifications == 0
						PROCESS MilitaryManpower.Infantry_value = MilitaryManpower.Infantry_value - PerSeconds(8 + MilitaryManpower.Infantry_value * 0.01 * (1.5 - MilitaryEfficiency /100 ) )
						PROCESS MilitaryManpower.Cavalry_value = MilitaryManpower.Cavalry_value - PerSeconds(2 + MilitaryManpower.Cavalry_value * 0.01 * (1.5 - MilitaryEfficiency /100 ) )
						PROCESS MilitaryManpower.Missile_value = MilitaryManpower.Missile_value - PerSeconds(12 + MilitaryManpower.Missile_value * 0.01 * (1.5 - MilitaryEfficiency /100 ) )
						PROCESS MilitaryManpower.Mercenaries_value = MilitaryManpower.Mercenaries_value - PerSeconds(8 + MilitaryManpower.Mercenaries_value * 0.01 * (1.5 - MilitaryEfficiency /100 ) )
						OVERRIDE_PARAM UrbanMilitia.value = GetParam(UrbanMilitia.value) - PerSeconds(4)
						PROCESS UrbanMilitia = Min( GetParam(UrbanMilitia.value), UrbanMilitia )
						OVERRIDE_PARAM Fortifications.value = GetParam(Fortifications.value) - PerSeconds(1 + Fortifications.value * 0.005 * 0.75 ? 1.25)
						PROCESS Fortifications = Min( GetParam(Fortifications.value), Fortifications )
					ENDIF
					IF MilitaryManpower < 10 & UrbanMilitia < 10 & Fortifications == 0
						PROCESS Stability = Stability - PerSeconds(0.75)
						PROCESS StateSize = StateSize - PerSeconds(1 + StateSize * 0.0075)
						PROCESS Population = Population - PerSeconds(2 + Population * 0.02)
					ENDIF
				}

				
				LINK MilitaryManpower = {
					IF Fortifications == 0
					COLOR red
					FLUX 4
					ENDIF
				}
				

				LINK UrbanMilitia = {
					IF Fortifications == 0
					COLOR red
					FLUX 5
					ENDIF
				}				

				LINK Fortifications = {
					IF Fortifications > 0
					COLOR red
					FLUX 3
					ENDIF
				}		
				
				LINK NeighborhoodBellicism = {
					IF NeighborhoodBellicism > 0
					COLOR red
					FLUX 3
					ENDIF
				}					
				
				LINK Stability = {
					IF MilitaryManpower < 10 & Fortifications == 0 & UrbanMilitia < 10
					COLOR red
					FLUX 4
					ENDIF
				}
				LINK Population = {
					IF MilitaryManpower < 10 & Fortifications == 0 & UrbanMilitia < 10
					COLOR red
					FLUX 2
					ENDIF
				}
				LINK StateSize = {
					IF MilitaryManpower < 10 & Fortifications == 0 & UrbanMilitia < 10
					COLOR red
					FLUX 3
					ENDIF
				}
			
				TRIGGER_EVENT = {
					IF  ~StateSize & GameTime() > 9500 & ( ~Island == 0 | ( ( Max ( StateSize - 150 , 0 ) > Navy ) ) ) & ( ~ModernWarfare == 0 )
						RISE
					ENDIF
				}
				
				
				TRIGGER_SPAWN NomadInvasion = {
					ALERT Invaded
					ERA FeudalAge
				}
						
				
		}
			ColonialRebellion = {
				SOUND_EVENT "Main/SFX/ColonialRebellion.wav"
				SOUND_WINDOW "Main/SFX/ColonialRebellion.wav"
				EVENT_DEF [ 60 100 80 33% ]
				ARISE = {
					EVENT_SPEED 1
				}
				SLEEP = {
				EVENT_CHANCE ( ColonialAutonomyDesire - 50 ) * 2 / 100
				}
				TICK = {
					PROCESS Navy = Navy - PerSeconds(3 * ColonialStateSize / 100)
					PROCESS ColonialAutonomyDesire = ColonialAutonomyDesire - PerSeconds(0.25)
					IF Navy < 50
						REMOVE ColonyTag
						IF ~Colony
							ALERT ColonyIndependance
						ENDIF
					ENDIF
				}

				
				LINK Navy = {
					COLOR red
					FLUX 2 * ColonialStateSize / 100
				}
				
				LINK ColonialAutonomyDesire = {
					COLOR red
					FLUX 0.5
				}
			
				TRIGGER_EVENT = {
					IF ColonialAutonomyDesire > 50
						RISE
					ENDIF
				}
				
		}	
			ColonialExpension = {
				SOUND_EVENT "Main/SFX/Jungle.wav"
				SOUND_WINDOW "Main/SFX/Jungle.wav"
				EVENT_DEF [ 10 25 170 33% ]
				ARISE = {
					EVENT_SPEED 1
				}
				SLEEP = {
				EVENT_CHANCE Max ( ( ColonialProsperity * 1.5 - ColonialStateSize ) / 200 , 0 ) + 15
				}
				
				TICK = {
					PROCESS ColonialStateSize += PerSeconds(1.2 * 0.25 ? 1.25)
				}
				
				LINK ColonialStateSize = {
					COLOR green
					FLUX 2
				}
			
				TRIGGER_EVENT = {
					IF ColonialProsperity > 20
						RISE
					ENDIF
				}
				
		}	
			Renaissance = {
				SOUND_EVENT "Main/SFX/Renaissance.wav"
				SOUND_WINDOW "Main/SFX/Renaissance.wav"
				EVENT_DEF [ 200 30 30 30% ]
				ARISE = {
					EVENT_SPEED 1
				}
				
					TICK = {
						OVERRIDE_PARAM Music.value = GetParam(Music.value) + PerSeconds(2 * 0.9 ? 1.1)
						PROCESS Music = Max( GetParam(Music.value), Music )
						OVERRIDE_PARAM Litterature.value = GetParam(Litterature.value) + PerSeconds(2 * 0.9 ? 1.1)
						PROCESS Litterature = Max( GetParam(Litterature.value), Litterature )
						OVERRIDE_PARAM Philosophy.value = GetParam(Philosophy.value) + PerSeconds(8 * 0.9 ? 1.1)
						PROCESS Philosophy = Max( GetParam(Philosophy.value), Philosophy )
						OVERRIDE_PARAM Mathematics.value = GetParam(Mathematics.value) + PerSeconds(2 * 0.9 ? 1.1)
						PROCESS Mathematics = Max( GetParam(Mathematics.value), Mathematics )
						PROCESS Stability = Stability + PerSeconds(0.5)
						PROCESS Culture = Culture + PerSeconds(6)
						SET University.value [ : : 150 ]
						SET Culture.value [ : : 250 ]
					}

					LINK Music = {
						COLOR green
						FLUX 2
					}
					LINK Litterature = {
						COLOR green
						FLUX 2
					}
					LINK Culture = {
						COLOR green
						FLUX 6
					}
					LINK Mathematics = {
						COLOR green
						FLUX 4
					}
					LINK Philosophy = {
						COLOR green
						FLUX 8
					}

					LINK Stability = {
						COLOR green
						FLUX 3
					}

				
				LINK Humanism = {
				}
			
				TRIGGER_EVENT = {
					IF  ( ~Humanism == 0 & ScienceKnowledge > 30 & University >= 50 & ( Culture >= 50 | GameTime() > 13000 )  & ( ~NewWorld == 0 | ~Embassies ) )
						ERA DiscoveryAge
						RISE
					ENDIF
				}
				
		}	
			Invaders = {
				SOUND_EVENT "Main/SFX/Invasion.wav"
				SOUND_WINDOW "Main/SFX/Invasion.wav"
				EVENT_DEF [ 50 999999 1 100% ]
				ARISE = {
						EVENT_SPEED 1
					}
				TICK = {
					PROCESS InvadersForce = InvadersForce + PerSeconds(0.15 * 0.75 ? 1.25)
				}

				LINK InvadersForce = {
					COLOR red
					FLUX 0.75
				}
			
				TRIGGER_EVENT = {
						IF GameTime() > 11000 | ( ~ScienceKnowledge & GameTime() > 9000 )  & ~NewWorld & ~Embassies == 0
							RISE
						ENDIF
				}
				
				TRIGGER_SPAWN Invaders = {
					ERA DiscoveryAge
					PROCESS NewWorld.invaderPlagueTrigger = 1200
					PROCESS NewWorld.invaderDiscovered = 1
					SPAWN DraftAnimals
					SPAWN HorseDomestication
				}			
		

			}		
			InvadersEpidemic = {
				SOUND_EVENT "Main/SFX/Cough.wav"
				SOUND_WINDOW "Main/SFX/Cough.wav"
				EVENT_DEF [ 20 15 120 50% ]

				SLEEP = {
				IF ~Medecine
					EVENT_CHANCE 0.5 - Medecine.value / 8
				ELSE
					EVENT_CHANCE 0.5
				ENDIF
				}
				
				ARISE = {
					EVENT_SPEED Population / 100
				}
				TICK = {
					PROCESS Population = Population - PerSeconds(1.2 + Population/65)
					PROCESS Stability = Stability - PerSeconds(0.1 * 0.75 ? 1.25)

					PROCESS MilitaryManpower.Infantry_value = MilitaryManpower.Infantry_value - PerSeconds(0.2 + MilitaryManpower.Infantry_value /45 )
					PROCESS MilitaryManpower.Cavalry_value = MilitaryManpower.Cavalry_value - PerSeconds(0.2 + MilitaryManpower.Cavalry_value /45)
					PROCESS MilitaryManpower.Missile_value = MilitaryManpower.Missile_value - PerSeconds(0.2 + MilitaryManpower.Missile_value /45)
					PROCESS MilitaryManpower.Mercenaries_value = MilitaryManpower.Mercenaries_value - PerSeconds(0.2 + MilitaryManpower.Mercenaries_value /45)
						OVERRIDE_PARAM CelesteMandate.value = GetParam(CelesteMandate.value) - PerSeconds(0.8)
						PROCESS CelesteMandate = Min( GetParam(CelesteMandate.value), CelesteMandate )
					
				}
				LINK Population = {
					COLOR red
					FLUX 5
				}
				LINK MilitaryManpower = {
					COLOR red
					FLUX 3
				}
				LINK Stability = {
					COLOR red
					FLUX 1
				}
				LINK CelesteMandate = {
					COLOR red
					FLUX 2
				}
				TRIGGER_EVENT = {
					IF NewWorld.invaderPlagueTrigger > 0
						RISE
					ENDIF
				}
			}		
			DeclarationOfWar = {
				TAG WarSystemTag
				SOUND_WINDOW "Main/SFX/Invasion.wav"
				EVENT_DEF [ 10 30 100 25% ]
				ARISE = {
					EVENT_SPEED 1
				}
				SLEEP = {
				EVENT_CHANCE NeighborhoodBellicism / 100
				}
				TICK = {
				}
				
			
				TRIGGER_EVENT = {
					IF  ~ModernWarfare & DropdownIsState(Diplomacy.Peace) & NeighborhoodBellicism > 60
						RISE
					ENDIF
				}
				
				
				TRIGGER_SPAWN DeclarationOfWar = {
					PROCESS NeighborhoodBellicism -= 80
					CALL_FUNCTION F_WarDeclaration
					ALERT Invaded
				}
				
		}
			EnforcedPeace = {
				TAG WarSystemTag
				EVENT_DEF [ 50 30 100 75% ]
				ARISE = {
					EVENT_SPEED 1
					IF WarStatus > 10
							REMOVE EnforcedPeace
					ENDIF
				}
				TICK = {
				}
			
				TRIGGER_EVENT = {
					IF  WarStatus < 10  & DropdownIsState(Diplomacy.War)
						RISE
					ENDIF
				}
				
				TRIGGER_SPAWN EnforcedPeace = {
					PROCESS NeighborhoodBellicism -= 20
					CALL_FUNCTION F_Peace
					ALERT EnforcedPeaceAlert
				}
				
		}
			CountryPlundered = {
				SOUND_EVENT "Main/SFX/NeigborhoodTroubles.wav"
				SOUND_WINDOW "Main/SFX/NeigborhoodTroubles.wav"
				TAG WarSystemTag
				EVENT_DEF [ 20 20 200 50% ]
				ARISE = {
					EVENT_SPEED 1
				}
				TICK = {
					PROCESS Population = Population - PerSeconds( (1.2 + Population/100 ) * 0.75 ? 1.25)
					PROCESS Stability = Stability - PerSeconds(0.3 * 0.75 ? 1.25)
					PROCESS TradeGoods = TradeGoods - PerSeconds(4 + TradeGoods/100 * 0.75 ? 1.25)
					OVERRIDE_PARAM Agriculture.value = GetParam(Agriculture.value) - PerSeconds( 0.1 + Agriculture.value * 0.0025)
					PROCESS Agriculture = Min( GetParam(Agriculture.value), Agriculture )
					PROCESS WarExhaustion = WarExhaustion + PerSeconds(1.2)
				}
				LINK Agriculture = {
					COLOR red
					FLUX 2
				}
			
				LINK Population = {
					COLOR red
					FLUX 4
				}
				LINK TradeGoods = {
					COLOR red
					FLUX 4
				}
				LINK Stability = {
					COLOR red
					FLUX 2
				}
				LINK WarExhaustion = {
					COLOR green
					FLUX 3
				}
				
				TRIGGER_EVENT = {
					IF  WarStatus < 35 & WarExhaustion > 500  & DropdownIsState(Diplomacy.War)
						RISE
					ENDIF
				}
			
				
		}
			Blocade = {
				TAG WarSystemTag
				SOUND_EVENT "Main/SFX/NavalBattle.wav"
				SOUND_WINDOW "Main/SFX/NavalBattle.wav"
				EVENT_DEF [ 10 30 100 35% ]
				ARISE = {
					EVENT_SPEED 1
				}
				TICK = {
					PROCESS TradeGoods = TradeGoods - PerSeconds(2 + TradeGoods/100 * 0.75 ? 1.25)
					PROCESS NavalTrade = NavalTrade - PerSeconds(6 + NavalTrade/40 * 0.75 ? 1.25)
					PROCESS WarExhaustion = WarExhaustion + PerSeconds(1.2)
				}
			
				LINK TradeGoods = {
					COLOR red
					FLUX 4
				}
				
				LINK NavalTrade = {
					COLOR red
					FLUX 10
				}
				
				LINK WarExhaustion = {
					COLOR green
					FLUX 3
				}
				
				TRIGGER_EVENT = {
					IF FoeNavalForces > 50 & Coastline > 0 & FoeNavalForces * 1.5 > Navy  & DropdownIsState(Diplomacy.War)
						RISE
					ENDIF
				}
				
		}
			OccupationResistance = {
				SOUND_EVENT "Main/SFX/Riots.wav"
				SOUND_WINDOW "Main/SFX/Riots.wav"
				TAG WarSystemTag
				EVENT_DEF [ 10 30 100 35% ]
				ARISE = {
					EVENT_SPEED 1
				}
				TICK = {
					PROCESS MilitaryManpower.Infantry_value = MilitaryManpower.Infantry_value - PerSeconds(0.75 + MilitaryManpower.Infantry_value * 0.008 * (1.5 - MilitaryEfficiency /100 ) )
					PROCESS MilitaryManpower.Cavalry_value = MilitaryManpower.Cavalry_value - PerSeconds(0.5 + MilitaryManpower.Cavalry_value * 0.005 * (1.5 - MilitaryEfficiency /100 ) )
					PROCESS MilitaryManpower.Missile_value = MilitaryManpower.Missile_value - PerSeconds(2 + MilitaryManpower.Missile_value * 0.02 * (1.5 - MilitaryEfficiency /100 ) )
					PROCESS MilitaryManpower.Mercenaries_value = MilitaryManpower.Mercenaries_value - PerSeconds(0.5 + MilitaryManpower.Mercenaries_value * 0.005 * (1.5 - MilitaryEfficiency /100 ) )
					
					PROCESS WarExhaustion = WarExhaustion + PerSeconds(1.2)
				}
			
				LINK MilitaryManpower = {
					COLOR red
					FLUX 1
				}
				
				LINK WarExhaustion = {
					COLOR green
					FLUX 1
				}
				
				TRIGGER_EVENT = {
					IF WarStatus > 70  & DropdownIsState(Diplomacy.War)
						RISE
						SPAWN WarExhaustion
					ENDIF
				}
				
		}	
			LandBattle = {
				SOUND_EVENT "Main/SFX/LandBattle.wav"
				SOUND_WINDOW "Main/SFX/LandBattle.wav"
				TAG WarSystemTag
				EVENT_DEF [ 0.5 10 30 70% ]
				VALUE Die_Cast [ -10 0 10 ]
				VALUE Winner [ 0 50 100 ]
				ARISE = {
					EVENT_SPEED 1
				}
				TICK = {
				
					PROCESS MilitaryManpower.Infantry_value = MilitaryManpower.Infantry_value - PerSeconds(6.5 + MilitaryManpower.Infantry_value * 0.03 * (1.5 - MilitaryEfficiency /100 ) )
					PROCESS MilitaryManpower.Cavalry_value = MilitaryManpower.Cavalry_value - PerSeconds(4 + MilitaryManpower.Cavalry_value * 0.025 * (1.5 - MilitaryEfficiency /100 ) )
					PROCESS MilitaryManpower.Missile_value = MilitaryManpower.Missile_value - PerSeconds(8 + MilitaryManpower.Missile_value * 0.055 * (1.5 - MilitaryEfficiency /100 ) )
					PROCESS MilitaryManpower.Mercenaries_value = MilitaryManpower.Mercenaries_value - PerSeconds(5 + MilitaryManpower.Mercenaries_value * 0.025 * (1.5 - MilitaryEfficiency /100 ) )
					
					
					
					PROCESS FoeLandForces -=  PerSeconds(6 + FoeLandForces * 0.022 * (1.5 - 70 /100 ) * ( (Winner - 50 ) / 200 + 1 ) )
					
					IF  Winner > 50
						PROCESS WarStatus += PerSeconds( ( Winner - 50 ) / 50 )
					ELSE
						PROCESS WarStatus -= PerSeconds( ( 50 - Winner ) / 50 )
					ENDIF
					
				}
			
				LINK MilitaryManpower = {
					COLOR red
					FLUX 4
				}
				
				LINK FoeLandForces = {
					COLOR red
					FLUX 4
				}
				
				LINK GreatGeneral = {
				WEIGHT [ from ]
				}
				
				LINK WarStatus = {
				IF Winner>50
					COLOR green
					FLUX Winner /5
				ENDIF
				IF Winner<50
					COLOR red
					FLUX 50 - Winner /5
				ENDIF
				}
				
				TRIGGER_SPAWN LandBattle = {
						PROCESS Die_Cast = -15 ? 10
						IF MilitaryManpower > FoeLandForces
							PROCESS Winner = 43 + ( ( MilitaryManpower * ( MilitaryEfficiency / 100 ) * 0.9 ? 1.1 ) / ( FoeLandForces * 0.9 ? 1.1 ) * 7 ) + Die_Cast
						ELSE
							PROCESS Winner = 43 - ( ( FoeLandForces * 0.9 ? 1.1 ) / ( MilitaryManpower * ( MilitaryEfficiency / 100 ) * 0.9 ? 1.1 ) * 7 ) + Die_Cast
						ENDIF
						IF ~GreatGeneral
							PROCESS Winner += 10
						ENDIF
						IF ~FoeGreatGeneral
							PROCESS Winner -= 10
						ENDIF
				}
				
				TRIGGER_EVENT = {
					IF DropdownIsState(Diplomacy.War)
						RISE
					ENDIF
				}

				
		}
			NavalBattle = {
				SOUND_EVENT "Main/SFX/NavalBattle.wav"
				SOUND_WINDOW "Main/SFX/NavalBattle.wav"
				TAG WarSystemTag
				EVENT_DEF [ 0.5 10 40 65% ]
				VALUE Die_Cast [ -10 0 10 ]
				VALUE Winner [ 0 50 100 ]
				ARISE = {
					EVENT_SPEED 1
				}
				TICK = {
				
					PROCESS Navy -=  PerSeconds(4 + Navy * 0.185 )
					
					PROCESS FoeNavalForces -=  PerSeconds(4 + FoeNavalForces * 0.185  * ( (Winner - 50 ) / 200 + 1 ) ) 
					
					IF  Winner > 50
						PROCESS WarStatus += PerSeconds( ( Winner - 50 ) / 50 )
					ELSE
						PROCESS WarStatus -= PerSeconds( ( 50 - Winner ) / 50 )
					ENDIF
					
				}
			
				LINK Navy = {
					COLOR red
					FLUX 4
				}
				
				LINK FoeNavalForces = {
					COLOR red
					FLUX 4
				}
				
				LINK GreatGeneral = {
				WEIGHT [ from ]
				}
				
				LINK WarStatus = {
				IF Winner>50
					COLOR green
					FLUX Winner /5
				ENDIF
				IF Winner<50
					COLOR red
					FLUX 50 - Winner /5
				ENDIF
				}
				
				TRIGGER_SPAWN NavalBattle = {
						PROCESS Die_Cast = -15 ? 10
						IF Navy > FoeNavalForces
							PROCESS Winner = 43 + ( ( Navy * 0.9 ? 1.1 ) / ( FoeNavalForces * 0.9 ? 1.1 ) * 7 ) + Die_Cast
						ELSE
							PROCESS Winner = 43 - ( ( FoeNavalForces * 0.9 ? 1.1 ) / ( Navy * 0.9 ? 1.1 ) * 7 ) + Die_Cast
						ENDIF
						IF ~GreatGeneral
							PROCESS Winner += 5
						ENDIF
						IF ~FoeGreatGeneral
							PROCESS Winner -= 20
						ENDIF
				}
				
				TRIGGER_EVENT = {
					IF DropdownIsState(Diplomacy.War) & Coastline > 0
						RISE
					ENDIF
				}
				
				
		}	
			SlaveRiots = {
				SOUND_EVENT "Main/SFX/ColonialRebellion.wav"
				SOUND_WINDOW "Main/SFX/ColonialRebellion.wav"
				EVENT_DEF [ 15 50 150 35% ]
				ARISE = {
					EVENT_SPEED 1
				}
				SLEEP = {
					IF ~Reactionnarism
					EVENT_CHANCE 50 + SlaveTrade / 5
					ELSE
					EVENT_CHANCE 10 + SlaveTrade / 5
					ENDIF
				}
				TICK = {
					PROCESS ColonialProsperity = ColonialProsperity - PerSeconds(3)
					PROCESS ColonialAutonomyDesire = NeighborhoodBellicism + PerSeconds(0.1)
				}
			
				LINK ColonialProsperity = {
					COLOR red
					FLUX 1
				}
				
				LINK ColonialAutonomyDesire = {
					COLOR green
					FLUX 0.25
				}
				
				
				TRIGGER_EVENT = {
					IF SlaveTrade > 5 & ~ColonialProsperity
						RISE
					ENDIF
				}
				
		}
			ForeignInterference = {
				SOUND_EVENT "Main/SFX/DiplomacyBadEvent.wav"
				SOUND_WINDOW "Main/SFX/DiplomacyBadEvent.wav"
				EVENT_DEF [ 15 30 100 35% ]
				ARISE = {
					EVENT_SPEED 1
				}
				TICK = {
					PROCESS NeighborhoodBellicism = NeighborhoodBellicism - PerSeconds(0.6)
					PROCESS ColonialAutonomyDesire = NeighborhoodBellicism + PerSeconds(0.3)
				}
			
				LINK NeighborhoodBellicism = {
					COLOR red
					FLUX 1
				}
				LINK ColonialAutonomyDesire = {
					COLOR green
					FLUX 0.5
				}
				
				
				TRIGGER_EVENT = {
					IF NeighborhoodBellicism > 50 & ~ColonialAutonomyDesire
						RISE
					ENDIF
				}
				
		}
			FoeGreatGeneral = {
				SOUND_EVENT "Main/SFX/GreatGeneral.wav"
				SOUND_WINDOW "Main/SFX/GreatGeneral.wav"
					EVENT_DEF [ 30 180 400 15% ]
					ARISE = {
						EVENT_SPEED 1
					}
					TICK = {
					}

					LINK NeighborhoodBellicism = {
					}
					LINK FoeLandForces = {
					}
					LINK LandBattle = {
						WEIGHT [ to ]
					}
					TRIGGER_EVENT = {
						IF (~ModernWarfare & NeighborhoodBellicism > 35 )
							RISE
						ENDIF
					}
						
			
				}	
			FoeGreatAdmiral = {
				SOUND_EVENT "Main/SFX/GreatGeneral.wav"
				SOUND_WINDOW "Main/SFX/GreatGeneral.wav"
					EVENT_DEF [ 30 180 500 15% ]
					ARISE = {
						EVENT_SPEED 1
					}
					TICK = {
					}

					LINK NeighborhoodBellicism = {
					}
					LINK FoeNavalForces = {
					}
					LINK NavalBattle = {
					WEIGHT [ to ]
					}
					TRIGGER_EVENT = {
						IF (~ModernWarfare & NeighborhoodBellicism > 35 & Coastline > 0 )
							RISE
						ENDIF
					}
						
			
				}
			AlliesDefection = {
				SOUND_EVENT "Main/SFX/DiplomacyBadEvent.wav"
				SOUND_WINDOW "Main/SFX/DiplomacyBadEvent.wav"
				EVENT_DEF [ 20 50 250 50% ]
				ARISE = {
					EVENT_SPEED 1
				}
				SLEEP = {
					EVENT_CHANCE 100 - WarStatus
				}
				
				TICK = {
					PROCESS Allies = Allies - PerSeconds(1)
				}
			
				LINK Allies = {
					COLOR red
					FLUX 1
				}
				
				
				TRIGGER_EVENT = {
					IF WarStatus < 55 & WarStatus.WarTimer > 250
						RISE
					ENDIF
				}
				
		}
			AmphibiousAssault = {
				SOUND_EVENT "Main/SFX/NavalBattle.wav"
				SOUND_WINDOW "Main/SFX/NavalBattle.wav"
				EVENT_DEF [ 15 50 150 35% ]
				ARISE = {
					EVENT_SPEED 1
				}
				TICK = {
					PROCESS Navy -=  PerSeconds(2 + Navy * 0.09 )
					PROCESS FoeLandForces -=  PerSeconds(2 + FoeLandForces * 0.1  * ( 50 / 200 + 1 ) ) 
					PROCESS WarStatus += PerSeconds( 15 / 50 )
				}
				
				LINK Navy = {
					COLOR red
					FLUX 4
				}
				
				LINK FoeLandForces = {
					COLOR red
					FLUX 4
				}
				
				LINK WarStatus = {
					COLOR green
					FLUX 1
				}
				
				TRIGGER_EVENT = {
					IF DropdownIsState(Diplomacy.War) & Coastline > 0 & Navy > FoeNavalForces * 2.5 & Navy > 100
						RISE
					ENDIF
				}
				
		}
			RevolutionAttempt = {
				SOUND_EVENT "Main/SFX/Riots.wav"
				SOUND_WINDOW "Main/SFX/Riots.wav"
				EVENT_DEF [ 20 45 100 100% ]
				ARISE = {
					EVENT_SPEED 1
				}
				
				SLEEP = {
				IF  ~RevolutionIdeals
					EVENT_CHANCE RevolutionIdeals / 100
				ELSE
					EVENT_CHANCE 100
				ENDIF
				}
				TICK = {
					PROCESS RevolutionIdeals = RevolutionIdeals + PerSeconds(0.3 * 0.75 ? 1.25)
					PROCESS Stability = Stability - PerSeconds(0.5 * 0.75 ? 1.25)
					PROCESS Population = Population - PerSeconds(1.5 + Population * 0.01 * 0.75 ? 1.25)
					OVERRIDE_PARAM UrbanMilitia.value = GetParam(UrbanMilitia.value) - PerSeconds(4)
					PROCESS UrbanMilitia = Min( GetParam(UrbanMilitia.value), UrbanMilitia )
					IF UrbanMilitia < 30
						OVERRIDE_PARAM Monarchy.value = GetParam(Monarchy.value) - PerSeconds(1)
						PROCESS Monarchy = Min( GetParam(Monarchy.value), Monarchy )
						OVERRIDE_PARAM Empire.value = GetParam(Empire.value) - PerSeconds(1)
						PROCESS Empire = Min( GetParam(Empire.value), Empire )
						OVERRIDE_PARAM Theocracy.value = GetParam(Theocracy.value) - PerSeconds(1)
						PROCESS Theocracy = Min( GetParam(Theocracy.value), Theocracy )
						OVERRIDE_PARAM Republic.value = GetParam(Republic.value) - PerSeconds(2)
						PROCESS Republic = Min( GetParam(Republic.value), Republic )
						OVERRIDE_PARAM CelesteMandate.value = GetParam(CelesteMandate.value) - PerSeconds(2)
						PROCESS CelesteMandate = Min( GetParam(CelesteMandate.value), CelesteMandate )
						OVERRIDE_PARAM BarbarianMonarchy.value = GetParam(BarbarianMonarchy.value) - PerSeconds(1)
						PROCESS BarbarianMonarchy = Min( GetParam(BarbarianMonarchy.value), BarbarianMonarchy )
						OVERRIDE_PARAM MilitaryDictatorship.value = GetParam(MilitaryDictatorship.value) - PerSeconds(1)
						PROCESS MilitaryDictatorship = Min( GetParam(MilitaryDictatorship.value), MilitaryDictatorship )
					ENDIF
					IF  ( Monarchy < 5 | Empire < 5 | BarbarianMonarchy < 5 | MilitaryDictatorship < 5 | Theocracy < 5  | ~Republic | CelesteMandate < 5 ) & ~RevolutionaryRepublic == 0
						REMOVE Government
						SPAWN Nationalism
						SPAWN RevolutionaryRepublic
						PROCESS RevolutionaryRepublic = 60
						OVERRIDE_PARAM RevolutionaryRepublic.value = GetParam(RevolutionaryRepublic.value)
						REMOVE RevolutionAttempt
					ENDIF
				}
				LINK Population = {
					COLOR red
					FLUX 3
				}
				LINK Stability = {
					COLOR red
					FLUX 1
				}
				LINK Monarchy = {
					COLOR red
					FLUX 1
				}
				LINK Empire = {
					COLOR red
					FLUX 1
				}
				LINK UrbanMilitia = {
					COLOR red
					FLUX 4
				}
				LINK BarbarianMonarchy = {
					COLOR red
					FLUX 1
				}
				LINK MilitaryDictatorship = {
					COLOR red
					FLUX 1
				}
				LINK CelesteMandate = {
					COLOR red
					FLUX 1
				}
				LINK Theocracy = {
					COLOR red
					FLUX 1
				}
				LINK Republic = {
					COLOR red
					FLUX 1
				}
				LINK RevolutionIdeals = {
					COLOR green
					FLUX 1
				}
				
				TRIGGER_EVENT = {
					IF ( ( ~PeasantRevolt |  Stability < 10 ) | Stability < 50 & ~RevolutionIdeals ) & NeighborhoodBellicism.coalitionTrigger == 2 & ~Democracy == 0 & ~RevolutionaryRepublic == 0
						RISE
					ENDIF
				}
				
		}
			ReactionnarismRevolt = {
				SOUND_EVENT "Main/SFX/Riots.wav"
				SOUND_WINDOW "Main/SFX/Riots.wav"
				EVENT_DEF [ 10 35 170 33% ]
				ARISE = {
					EVENT_SPEED 1
				}
				SLEEP = {
					EVENT_CHANCE Reactionnarism / 100
				}
				TICK = {
					PROCESS RevolutionIdeals = RevolutionIdeals - PerSeconds(0.3 * 0.75 ? 1.25)
					PROCESS Stability = Stability - PerSeconds(1 * 0.75 ? 1.25)
					PROCESS NeighborhoodBellicism = NeighborhoodBellicism + PerSeconds(2 * 0.75 ? 1.25)
					OVERRIDE_PARAM Republic.value = GetParam(Republic.value) - PerSeconds(1)
					PROCESS Republic = Min( GetParam(Republic.value), Republic )
					OVERRIDE_PARAM RevolutionaryRepublic.value = GetParam(RevolutionaryRepublic.value) - PerSeconds(1)
					PROCESS RevolutionaryRepublic = Min( GetParam(RevolutionaryRepublic.value), RevolutionaryRepublic )
					IF ( RevolutionaryRepublic < 5 & Republic < 5 ) & ( ~RevolutionaryRepublic | ~Republic )
						REMOVE Government
						IF StateSize > 150
							SPAWN Empire
							ELSE
							SPAWN Monarchy
						ENDIF
						REMOVE PoliticOfTerror
						REMOVE AbolitionOfSlavery
						REMOVE AbolitionOfSerfdom
						REMOVE PrivilegeRevocation
						PROCESS Monarchy = 50
						OVERRIDE_PARAM Monarchy.value = GetParam(Monarchy.value)
						PROCESS Empire = 50
						OVERRIDE_PARAM Empire.value = GetParam(Empire.value)
						REMOVE ReactionnarismRevolt
					ENDIF
				}

				
				LINK RevolutionIdeals = {
					COLOR red
					FLUX 1
				}
			
				LINK Stability = {
					COLOR red
					FLUX 2
				}
				LINK NeighborhoodBellicism = {
					COLOR green
					FLUX 2
				}
				TRIGGER_EVENT = {
					IF ~Reactionnarism & ~Monarchy == 0 & Empire == 0 & BarbarianMonarchy == 0 & Theocracy == 0 & CelesteMandate < 5
						RISE
					ENDIF
				}
				TRIGGER_SPAWN ReactionnarismRevolt = {
					PROCESS Reactionnarism -= 30
					}
				
		}		
			ExpensionofTheRevolution = {
				SOUND_EVENT "Main/SFX/NeigborhoodTroubles.wav"
				SOUND_EVENT "Main/SFX/NeigborhoodTroubles.wav"
				EVENT_DEF [ 20 50 250 30% ]
				ARISE = {
					EVENT_SPEED 1
				}
				SLEEP = {
					EVENT_CHANCE NeighborhoodBellicism / 100
				
				}
				
				TICK = {
					PROCESS RevolutionIdeals = RevolutionIdeals + PerSeconds(0.4 * 0.75 ? 1.25)
					PROCESS WarStatus.revolutionnaryWar = 1
				}
			
				LINK RevolutionIdeals = {
					COLOR green
					FLUX 1
				}
				
				
				TRIGGER_EVENT = {
					IF NeighborhoodBellicism.coalitionTrigger == 2 & ~Democracy == 0 & ~RevolutionaryRepublic == 0
						RISE
					ENDIF
				}
				TRIGGER_SPAWN ExpensionofTheRevolution = {
					PROCESS NeighborhoodBellicism -= 15
					CALL_FUNCTION F_WarDeclaration
					}
				
		}
		}
}
}
